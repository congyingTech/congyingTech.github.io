<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>MohnTech</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2016-07-04T13:55:49.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Mohn</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>七月份计划</title>
    <link href="http://yoursite.com/2016/07/11/plan/7%E6%9C%88%E4%BB%BD%E8%AE%A1%E5%88%92/"/>
    <id>http://yoursite.com/2016/07/11/plan/7月份计划/</id>
    <published>2016-07-11T14:04:36.047Z</published>
    <updated>2016-07-04T13:55:49.000Z</updated>
    
    <content type="html">&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h4 id=&quot;学习计划&quot;&gt;&lt;a href=&quot;#学习计划&quot; class=&quot;headerlink&quot; title=&quot;学习计划&quot;&gt;&lt;/a&gt;学习计划&lt;/h4&gt;&lt;p&gt;1.leetcode上medium难度.&lt;br&gt;2.Java不能丢,通过面试宝典还有Think in Java进行知识的补充.&lt;br&gt;3.设计模式和基本的数据结构.&lt;br&gt;4.面试中会问到的计算机网络知识.&lt;/p&gt;
&lt;h4 id=&quot;阅读计划&quot;&gt;&lt;a href=&quot;#阅读计划&quot; class=&quot;headerlink&quot; title=&quot;阅读计划&quot;&gt;&lt;/a&gt;阅读计划&lt;/h4&gt;&lt;p&gt;1.Think in Java  &lt;/p&gt;
&lt;div class=&quot;process&quot; style=&quot;width:500px;height:20px;background:white;position:relative;border:1px solid black;&quot;&gt;&lt;div style=&quot;width:15px;height:20px;background:green;postion:absolute;top:0;left:0;z-index:1;&quot;&gt;&lt;span style=&quot;position:absolute;left:50%;top:0;z-index:2;color:black&quot;&gt;2%&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;br&gt;2.统计学基础&lt;br&gt;&lt;div class=&quot;process&quot; style=&quot;width:500px;height:20px;background:white;position:relative;border:1px solid black;&quot;&gt;&lt;div style=&quot;width:35px;height:20px;background:green;postion:absolute;top:0;left:0;z-index:1;&quot;&gt;&lt;span style=&quot;position:absolute;left:50%;top:0;z-index:2;color:black&quot;&gt;17.5%&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;br&gt;3.利用python进行数据挖掘&lt;br&gt;&lt;div class=&quot;process&quot; style=&quot;width:500px;height:20px;background:white;position:relative;border:1px solid black;&quot;&gt;&lt;div style=&quot;width:0px;height:20px;background:green;postion:absolute;top:0;left:0;z-index:1;&quot;&gt;&lt;span style=&quot;position:absolute;left:50%;top:0;z-index:2;color:black&quot;&gt;0.0%&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;



</content>
    
    <summary type="html">
    
      &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h4 id=&quot;学习计划&quot;&gt;&lt;a href=&quot;#学习计划&quot; class=&quot;headerlink&quot; title=&quot;学习计划&quot;&gt;&lt;/a&gt;学习计划&lt;/h4&gt;&lt;p&gt;1.leetcode上medium难度.&lt;br&gt;2.Java不能丢,通过面试宝典还有Th
    
    </summary>
    
      <category term="计划" scheme="http://yoursite.com/categories/%E8%AE%A1%E5%88%92/"/>
    
    
      <category term="plan" scheme="http://yoursite.com/tags/plan/"/>
    
  </entry>
  
  <entry>
    <title>leetcode:373--Find K Pairs with Smallest Sums</title>
    <link href="http://yoursite.com/2016/07/11/leetcode/find-k-pairs-with-smallest-sums/"/>
    <id>http://yoursite.com/2016/07/11/leetcode/find-k-pairs-with-smallest-sums/</id>
    <published>2016-07-11T11:59:59.000Z</published>
    <updated>2016-07-11T14:03:15.000Z</updated>
    
    <content type="html">&lt;p&gt;题目描述：&lt;br&gt;Given nums1 = [1,1,2], nums2 = [1,2,3],  k = 2  &lt;/p&gt;
&lt;p&gt;Return: [1,1],[1,1]&lt;/p&gt;
&lt;p&gt;The first 2 pairs are returned from the sequence:&lt;br&gt;[1,1],[1,1],[1,2],[2,1],[1,2],[2,2],[1,3],[1,3],[2,3]&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;My-Solution：&quot;&gt;&lt;a href=&quot;#My-Solution：&quot; class=&quot;headerlink&quot; title=&quot;My Solution：&quot;&gt;&lt;/a&gt;My Solution：&lt;/h3&gt;&lt;h4 id=&quot;Mine-Way&quot;&gt;&lt;a href=&quot;#Mine-Way&quot; class=&quot;headerlink&quot; title=&quot;Mine Way:&quot;&gt;&lt;/a&gt;Mine Way:&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;算法思想：&lt;/strong&gt;    &lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1)将两个数组类型的nums1和nums2进行笛卡尔积，将和存储到一个字典中，字典的key是对应的index，value对应的是两个数的和，  
 然后对dict 的value的值进行排序，用`sorted(dict_name.items, key = lambda d:d[1])`d[1]是对value值的排序，  
 如果要对key值排序，就用d[0]。  
2)取前K个dict中的key值在对应的笛卡尔积list中找到对应的list
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;Python Code:&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;#-*-coding:utf-8 -*-&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#直接 V = [[None] * 2] * 3   这样初始化的二维数据是浅拷贝，如果给v[0][1]赋值 v[1][1]也会同样做修改。[[]]是一个含有一个空列表元素的列表,所以[[]]*3表示3个指向这            个空列表元素的引用,修改任何&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#一个元素都会改变整个列表。所以初始化的时候应该A = [[None] * 2 for x in range(3)]这样&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Solution&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(object)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;kSmallestPairs&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, nums1, nums2, k)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        n = len(nums1)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        m = len(nums2)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;#res = [[None] * 2 ]*3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;#初始化可以是list(),也可以是[]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        res = list()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;#print(res)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;  e1 &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; nums1:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; e2 &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; nums2:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                res.append([e1,e2])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;#print(res)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        res_sum_dict = dict()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        e_sum = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i,e &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; enumerate(res):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            e_sum = e[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] + e[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;#print(&#39;here % s&#39; % e_sum)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;#print(i)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            res_sum_dict[i] = e_sum&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;#print(res_sum_dict)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        newdict = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        newdict = sorted(res_sum_dict.items(), key = &lt;span class=&quot;keyword&quot;&gt;lambda&lt;/span&gt; d:d[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;#print(newdict)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        res_list = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(k):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            res_list.append(res[newdict[i][&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; res_list&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; __name__ == &lt;span class=&quot;string&quot;&gt;&quot;__main__&quot;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(Solution().kSmallestPairs([&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;], [&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;], &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;#[1,2],[1,4],[2,2],[2,4],[3,2],[3,4]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;Refer-Way&quot;&gt;&lt;a href=&quot;#Refer-Way&quot; class=&quot;headerlink&quot; title=&quot;Refer Way:&quot;&gt;&lt;/a&gt;Refer Way:&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;算法思想：&lt;/strong&gt;    &lt;/p&gt;
&lt;pre&gt;&lt;code&gt;记nums1的下标为i，nums2下标为j；数组长度为size1，size2；

首先将“守卫元素”（MaxInt, None, None）加入堆

令i = j = 0

将nums1[0] + nums2[j]与堆顶元素top进行比较：

若堆顶元素较大，则将(nums1[i] + nums2[j], i, j)加入堆，i取值[0, size1)；然后令j = j + 1

将堆顶元素弹出加入结果集  
循环直到结束
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;Python Code:&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Solution&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(object)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;kSmallestPairs&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, nums1, nums2, k)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        :type nums1: List[int]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        :type nums2: List[int]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        :type k: int&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        :rtype: List[List[int]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ans = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        heap = [(&lt;span class=&quot;number&quot;&gt;0x7FFFFFFF&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;None&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;None&lt;/span&gt;)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        size1, size2 = len(nums1), len(nums2)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        idx2 = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; len(ans) &amp;lt; min(k, size1 * size2):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; idx2 &amp;lt; size2:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                sum, i, j = heap[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; nums2[idx2] + nums1[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] &amp;lt; sum:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; idx1 &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(size1):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        heapq.heappush(heap, (nums1[idx1] + nums2[idx2], idx1, idx2))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    idx2 += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            sum, i, j = heapq.heappop(heap)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ans.append((nums1[i], nums2[j]))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; ans&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;My-Problem&quot;&gt;&lt;a href=&quot;#My-Problem&quot; class=&quot;headerlink&quot; title=&quot;My Problem:&quot;&gt;&lt;/a&gt;My Problem:&lt;/h3&gt;&lt;p&gt;我的代码出现了runtime error ， 不知道什么原因。。。。。。&lt;br&gt;在线等待解决&lt;/p&gt;
&lt;p&gt;refer的方法关于堆的一些问题，现在还是没有搞明白。。。。。。堆尼玛好复杂。。。。。。&lt;br&gt;大概的看了一下堆的一个基本的介绍：&lt;/p&gt;
&lt;h3 id=&quot;My-Answer&quot;&gt;&lt;a href=&quot;#My-Answer&quot; class=&quot;headerlink&quot; title=&quot;My Answer&quot;&gt;&lt;/a&gt;My Answer&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/vamei/archive/2013/03/20/2966612.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;堆的介绍&lt;/a&gt;&lt;br&gt;删除节点的时候，将last叶节点作为root加上去，然后从顶向下在一点点的往下比较（跟两个叶节点中小的那个比较）替换，保证堆的结构不能改变。&lt;br&gt;插入节点的时候，将节点插入到last的位置，然后从低向上一点点的与父节点比较，小的话就交换位置。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;题目描述：&lt;br&gt;Given nums1 = [1,1,2], nums2 = [1,2,3],  k = 2  &lt;/p&gt;
&lt;p&gt;Return: [1,1],[1,1]&lt;/p&gt;
&lt;p&gt;The first 2 pairs are returned from the sequence:&lt;br&gt;[1,1],[1,1],[1,2],[2,1],[1,2],[2,2],[1,3],[1,3],[2,3]&lt;/p&gt;
    
    </summary>
    
      <category term="Python" scheme="http://yoursite.com/categories/Python/"/>
    
      <category term="leetcode" scheme="http://yoursite.com/categories/Python/leetcode/"/>
    
      <category term="jobs" scheme="http://yoursite.com/categories/Python/leetcode/jobs/"/>
    
    
      <category term="jobs" scheme="http://yoursite.com/tags/jobs/"/>
    
      <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
      <category term="leetcode" scheme="http://yoursite.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>百度作业帮测试实习生面试</title>
    <link href="http://yoursite.com/2016/07/06/interview/QEinterview/"/>
    <id>http://yoursite.com/2016/07/06/interview/QEinterview/</id>
    <published>2016-07-05T21:59:59.000Z</published>
    <updated>2016-07-06T11:42:10.000Z</updated>
    
    <content type="html">&lt;h4 id=&quot;职位要求：&quot;&gt;&lt;a href=&quot;#职位要求：&quot; class=&quot;headerlink&quot; title=&quot;职位要求：&quot;&gt;&lt;/a&gt;职位要求：&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;计算机软件、通讯相关专业本科或以上。&lt;/li&gt;
&lt;li&gt;熟悉基本数据结构和算法设计，熟悉C/C++、Java、PHP,、shell、OC中至少一门编程语言。&lt;/li&gt;
&lt;li&gt;了解linux/Unix/windows操作系统原理、熟悉linux下的命令行操作。&lt;/li&gt;
&lt;li&gt;学习能力强，永远挑战新领域，拥抱变化。&lt;/li&gt;
&lt;li&gt;强烈的上进心和求知欲，具备良好的沟通能力和团队合作精神。&lt;/li&gt;
&lt;li&gt;符合以下条件之一优先考虑：&lt;br&gt;-开源社区活跃、项目经验丰富。&lt;br&gt;-之前在公司有过实习经验。&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&quot;面试体验&quot;&gt;&lt;a href=&quot;#面试体验&quot; class=&quot;headerlink&quot; title=&quot;面试体验&quot;&gt;&lt;/a&gt;面试体验&lt;/h4&gt;&lt;p&gt;这次面试还是比较好的一次体验,面试官姐姐非常nice,面试过程中渣渣我全程紧张,面试姐姐一直安慰我来着.不过后来还是没有达成一致的结果.&lt;br&gt;reason1:做的是界面测试,而我一直做的是服务器端测试&lt;br&gt;reason2:我表示我还是偏爱coding一些,但是该部门coding机会比较少&lt;br&gt;reason3:面试官姐姐给我的职业建议–要么搞研发,要么搞测试,不要混合的搞测试开发,纳尼?论坛的帖子上明明写的测试开发岗位嘛~&lt;/p&gt;
&lt;h4 id=&quot;面试题目&quot;&gt;&lt;a href=&quot;#面试题目&quot; class=&quot;headerlink&quot; title=&quot;面试题目&quot;&gt;&lt;/a&gt;面试题目&lt;/h4&gt;&lt;p&gt;1.快速排序:(Python实现)&lt;br&gt;基本思想:分治法,需要两个函数,其中一个实现找出pivot,另一个实现快排&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#-*- coding:utf-8 -*-&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;partition&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(num, low, high)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    pivot = num[low]&lt;span class=&quot;comment&quot;&gt;#初始化pivot为low指针的值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; low &amp;lt; high:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; low &amp;lt; high &lt;span class=&quot;keyword&quot;&gt;and&lt;/span&gt; num[high] &amp;gt;= pivot:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            high -= &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; low &amp;lt; high &lt;span class=&quot;keyword&quot;&gt;and&lt;/span&gt; num[high] &amp;lt;= pivot:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            num[low] = num[high]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            low += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            num[high] = num[low]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    num[low] = pivot&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; low&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;quicksort&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(num, low, high)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; low &amp;lt; high:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        key_index = partition(num, low, high) &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        quicksort(num, low, key_index)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        quicksort(num, key_index+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, high)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; __name__ == &lt;span class=&quot;string&quot;&gt;&quot;__main__&quot;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    num = [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    quicksort(num, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, len(num) - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(num)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;2.对登录界面进行测试&lt;br&gt;有用户名,密码,验证码,登录按钮等信息&lt;/p&gt;
&lt;p&gt;具体需求： 有一个登陆页面， （假如上面有2个textbox, 一个提交按钮。 请针对这个页面设计30个以上的test case.）  &lt;/p&gt;
&lt;p&gt;此题的考察目的： 面试者是否熟悉各种测试方法，是否有丰富的Web测试经验， 是否了解Web开发，以及设计Test case的能力  &lt;/p&gt;
&lt;p&gt;这个题目还是相当有难度的， 一般的人很难把这个题目回答好。  &lt;/p&gt;
&lt;p&gt;首先，你要了解用户的需求，比如这个登录界面应该是弹出窗口式的，还是直接在网页里面。对用户名的长度，和密码的强度（就是是不是必须多少位，大小写，特殊字符混搭）等。还有比如用户对界面的美观是不是有特殊的要求？（即是否要进行UI测试）。剩下的就是设计用例了 ，等价类，边界值等等。&lt;br&gt;请你记住一点，任何测试，不管测什么都是从了解需求开始的。  &lt;/p&gt;
&lt;p&gt;功能测试(Function test)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  0. 什么都不输入，点击提交按钮，看提示信息。

1.输入正确的用户名和密码，点击提交按钮，验证是否能正确登录。

2.输入错误的用户名或者密码, 验证登录会失败，并且提示相应的错误信息。

3.登录成功后能否能否跳转到正确的页面

4.用户名和密码，如果太短或者太长，应该怎么处理

5.用户名和密码，中有特殊字符（比如空格），和其他非英文的情况

6.记住用户名的功能

7.登陆失败后，不能记录密码的功能

8.用户名和密码前后有空格的处理

  9.密码是否加密显示（星号圆点等）

  10.牵扯到验证码的，还要考虑文字是否扭曲过度导致辨认难度大，考虑颜色（色盲使用者），刷新或换一个按钮是否好用

  11.登录页面中的注册、忘记密码，登出用另一帐号登陆等链接是否正确

  12.输入密码的时候，大写键盘开启的时候要有提示信息。
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;界面测试(UI Test)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1.布局是否合理，2个testbox 和一个按钮是否对齐

2.testbox和按钮的长度，高度是否复合要求

3. 界面的设计风格是否与UI的设计风格统一

4. 界面中的文字简洁易懂，没有错别字。
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;性能测试(performance test)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1.打开登录页面，需要几秒

2.输入正确的用户名和密码后，登录成功跳转到新页面，不超过5秒
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;安全性测试(Security test)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;　　1.登录成功后生成的Cookie，是否是httponly (否则容易被脚本盗取)

　　2.用户名和密码是否通过加密的方式，发送给Web服务器

　　3.用户名和密码的验证，应该是用服务器端验证， 而不能单单是在客户端用javascript验证

　　4.用户名和密码的输入框，应该屏蔽SQL 注入攻击

　　5.用户名和密码的的输入框，应该禁止输入脚本 （防止XSS攻击）

　　6.错误登陆的次数限制（防止暴力破解）

7. 考虑是否支持多用户在同一机器上登录；

8. 考虑一用户在多台机器上登录
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;可用性测试(Usability Test)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1. 是否可以全用键盘操作，是否有快捷键

2. 输入用户名，密码后按回车，是否可以登陆

3. 输入框能否可以以Tab键切换
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;兼容性测试（Compatibility Test）&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1.主流的浏览器下能否显示正常已经功能正常（IE,6,7,8,9, Firefox, Chrome, Safari,等）

2.不同的平台是否能正常工作，比如Windows, Mac

3.移动设备上是否正常工作，比如Iphone, Andriod

4.不同的分辨率
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;本地化测试 （Localization test）&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1. 不同语言环境下，页面的显示是否正确。
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;软件辅助性测试 （Accessibility test）&lt;/p&gt;
&lt;p&gt;　　软件辅助功能测试是指测试软件是否向残疾用户提供足够的辅助功能&lt;/p&gt;
&lt;p&gt;　　1. 高对比度下能否显示正常 （视力不好的人使用）&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;职位要求：&quot;&gt;&lt;a href=&quot;#职位要求：&quot; class=&quot;headerlink&quot; title=&quot;职位要求：&quot;&gt;&lt;/a&gt;职位要求：&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;计算机软件、通讯相关专业本科或以上。&lt;/li&gt;
&lt;li&gt;熟悉基本数据结构和算法设计，熟悉C/C++、Java、PHP,、shell、OC中至少一门编程语言。&lt;/li&gt;
&lt;li&gt;了解linux/Unix/windows操作系统原理、熟悉linux下的命令行操作。&lt;/li&gt;
&lt;li&gt;学习能力强，永远挑战新领域，拥抱变化。&lt;/li&gt;
&lt;li&gt;强烈的上进心和求知欲，具备良好的沟通能力和团队合作精神。&lt;/li&gt;
&lt;li&gt;符合以下条件之一优先考虑：&lt;br&gt;-开源社区活跃、项目经验丰富。&lt;br&gt;-之前在公司有过实习经验。
    
    </summary>
    
      <category term="面试" scheme="http://yoursite.com/categories/%E9%9D%A2%E8%AF%95/"/>
    
      <category term="测试开发" scheme="http://yoursite.com/categories/%E9%9D%A2%E8%AF%95/%E6%B5%8B%E8%AF%95%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="jobs" scheme="http://yoursite.com/tags/jobs/"/>
    
  </entry>
  
  <entry>
    <title>浅试Django-简单的个人博客搭建</title>
    <link href="http://yoursite.com/2016/07/04/Python/Django/"/>
    <id>http://yoursite.com/2016/07/04/Python/Django/</id>
    <published>2016-07-04T11:59:59.000Z</published>
    <updated>2016-07-04T14:51:02.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;Python已经学了有大半年的时间，之前面试阿里的时候，被问，为什么喜欢python，觉得python更好？当时就懵逼了，喜欢一个人还需要理由吗？显然在面试中喜欢一门语言需要理由，况且java作为我人生接触的第一门编程语言，还是有着迷之难以舍弃的感情，之后我会更新一些java面试的准备问题，最近还又入手了java编程思想，本科那本正版的丢了TnT…&lt;br&gt;怎么扯到爪哇身上啦？言归正传，先推一篇&lt;a href=&quot;http://www.36dsj.com/archives/36732&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;为什么选择python语言作为数据分析语言？&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;Django框架基础知识：&quot;&gt;&lt;a href=&quot;#Django框架基础知识：&quot; class=&quot;headerlink&quot; title=&quot;Django框架基础知识：&quot;&gt;&lt;/a&gt;Django框架基础知识：&lt;/h3&gt;&lt;p&gt;Django特点：  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;完全免费并开源源代码  &lt;/li&gt;
&lt;li&gt;快速高效开发  &lt;/li&gt;
&lt;li&gt;使用MTV架构(熟悉Web开发的应该会说是MVC架构)  &lt;/li&gt;
&lt;li&gt;强大的可扩展性.  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;类似于java开发中的MVC模式，Django的模式是：&lt;strong&gt;MTV&lt;/strong&gt;  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;M:model   &lt;/li&gt;
&lt;li&gt;T:template  &lt;/li&gt;
&lt;li&gt;V:view&lt;br&gt;用一张图来展示三者之间的关系：   &lt;/li&gt;
&lt;/ul&gt;
&lt;center&gt;&lt;img src=&quot;http://7xskaf.com1.z0.glb.clouddn.com/DjangoWork.png&quot; alt=&quot;MTV&quot;&gt;&lt;/center&gt;

&lt;p&gt;图示的过程就是：用户在浏览器中输入URL后回车，浏览器对URL进行检查，首先判断协议，如果是http就按照web来处理，然后调用&lt;strong&gt;DNS查询&lt;/strong&gt;，将域名转换为IP地址，然后经过网络传输到达对应web服务器，服务器对URL进行解析后，调用view中的逻辑，其中涉及到model，与数据库进行交互，将数据发送到template中进行渲染，然后发送到浏览器，呈现给用户。&lt;/p&gt;
&lt;h3 id=&quot;图解介绍目录结构&quot;&gt;&lt;a href=&quot;#图解介绍目录结构&quot; class=&quot;headerlink&quot; title=&quot;图解介绍目录结构&quot;&gt;&lt;/a&gt;图解介绍目录结构&lt;/h3&gt;&lt;p&gt;MTV结构&lt;br&gt;&lt;img src=&quot;http://7xskaf.com1.z0.glb.clouddn.com/main-list.PNG&quot; alt=&quot;main-list&quot;&gt; &lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;settings.py的配置：&lt;br&gt;&lt;img src=&quot;http://7xskaf.com1.z0.glb.clouddn.com/detail-list.PNG&quot; alt=&quot;detail-list&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;总结&quot;&gt;&lt;a href=&quot;#总结&quot; class=&quot;headerlink&quot; title=&quot;总结&quot;&gt;&lt;/a&gt;总结&lt;/h3&gt;&lt;p&gt;具体的代码就不想再贴在这里了，网络上有很多的教程，我自己也只是实现了很简单的一个博客的框架，简单的了解了一下Django做网站开发的套路，全都是套路。以后有时间的话，再进行进一步的完善吧。本来野心勃勃的想搭建一个个人博客，但是发现还得买域名，服务器，啊哈哈哈，服务器每个月的价格太贵了，还是暂时依托在github上吧。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;Python已经学了有大半年的时间，之前面试阿里的时候，被问，为什么喜欢python，觉得python更好？当时就懵逼了，喜欢一个人还需要理由吗？显然在面试中喜欢一门语言需要理由，况且java作为我人生接触的第一门编程语言，还是有着迷之难以舍弃的感情，之后我会更新一些java面试的准备问题，最近还又入手了java编程思想，本科那本正版的丢了TnT…&lt;br&gt;怎么扯到爪哇身上啦？言归正传，先推一篇&lt;a href=&quot;http://www.36dsj.com/archives/36732&quot;&gt;为什么选择python语言作为数据分析语言？&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Python" scheme="http://yoursite.com/categories/Python/"/>
    
      <category term="Django" scheme="http://yoursite.com/categories/Python/Django/"/>
    
    
      <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
      <category term="Django" scheme="http://yoursite.com/tags/Django/"/>
    
      <category term="web" scheme="http://yoursite.com/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>动态规划算法</title>
    <link href="http://yoursite.com/2016/06/22/Algorithm/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    <id>http://yoursite.com/2016/06/22/Algorithm/动态规划/</id>
    <published>2016-06-22T11:59:59.000Z</published>
    <updated>2016-06-29T09:29:42.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;最近一直在梳理自己的心情，确切的来说应该是感情，剪不断，理还乱，六月份要悄悄的溜走了，身边的人和事也发生了一些变化，时常在想，如果倒回到某个结点，我还会做一样的事情吗？may not （ps 跟分手没关系）&lt;/p&gt;
&lt;p&gt;越来越觉得有时候，是我把人想的太坏，不敢去相信，害怕被欺骗，其实哪里有那么复杂，人心再怎么险恶，也是肉长的，哎，长大的感觉真的是太不好了，越是想要追求快乐，越是难得到，渐渐明白，并不是所有的事情所有的人都会按照你想要的去发展，付出和收获往往也不能成正比。一直信以为仰的感情都是相互的，也渐渐的被现实证明为假命题，六月份七月份，赶紧过去吧，因为有一个傻逼已经老态龙钟了。&lt;/p&gt;
&lt;p&gt;本文内容参考自知乎：&lt;a href=&quot;https://www.zhihu.com/question/23995189/answer/35324479&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;动态规划&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;基本概念&quot;&gt;&lt;a href=&quot;#基本概念&quot; class=&quot;headerlink&quot; title=&quot;基本概念&quot;&gt;&lt;/a&gt;基本概念&lt;/h3&gt;&lt;p&gt;动态规划的过程：每次决策依赖于当前的状态，又随即引起状态的转移。一个决策序列就是在变化的状态中产生出来的。所以，多阶段的最优化决策解决问题的过程称为动态规划。  &lt;/p&gt;
&lt;p&gt;wiki的定义：&lt;strong&gt;dynamic programming&lt;/strong&gt; is a method for solving a complex problem by breaking it down into a collection of simpler subproblems.  &lt;/p&gt;
&lt;p&gt;动态规划的本质：对问题&lt;strong&gt;状态的定义&lt;/strong&gt;和&lt;strong&gt;状态转移方程的定义&lt;/strong&gt;。&lt;br&gt;通过拆分问题，定义问题状态和状态之间的关系，使得问题能够以递推（或者说分治）的方式去解决。&lt;/p&gt;
&lt;h3 id=&quot;适用情况&quot;&gt;&lt;a href=&quot;#适用情况&quot; class=&quot;headerlink&quot; title=&quot;适用情况&quot;&gt;&lt;/a&gt;适用情况&lt;/h3&gt;&lt;p&gt;能采用动态规划求解的问题的一般要具有3个性质：&lt;br&gt;(1) 最优化原理：如果问题的最优解所包含的子问题的解也是最优的，就称该问题具有最优子结构，即满足最优化原理。&lt;br&gt;(2) 无后效性：即某阶段状态一旦确定，就不受这个状态以后决策的影响。也就是说，某状态以后的过程不会影响以前的状态，只与当前状态有关。&lt;br&gt;(3) 有重叠子问题：即子问题之间是不独立的，一个子问题在下一阶段决策中可能被多次使用到。（该性质并不是动态规划适用的必要条件，但是如果没有这条性质，动态规划算法同其他算法相比就不具备优势）&lt;/p&gt;
&lt;h3 id=&quot;状态的定义&quot;&gt;&lt;a href=&quot;#状态的定义&quot; class=&quot;headerlink&quot; title=&quot;状态的定义&quot;&gt;&lt;/a&gt;状态的定义&lt;/h3&gt;&lt;p&gt;题目描述：  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;给定一个数列，长度为N，&lt;br&gt;求这个数列的最长上升（递增）子数列（LIS）的长度.&lt;br&gt;以&lt;br&gt;1 7 2 8 3 4&lt;br&gt;为例。&lt;br&gt;这个数列的最长递增子数列是 1 2 3 4，长度为4；&lt;br&gt;次长的长度为3， 包括 1 7 8; 1 2 3 等.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;要求解这个问题先要，定义这个问题。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;给定一个数列，长度为N，&lt;br&gt;设 F(k) 为：以数列中第k项结尾的最长递增子序列的长度.&lt;br&gt;求F(1)..F(N) 中的最大值.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;状态转移方程的定义&quot;&gt;&lt;a href=&quot;#状态转移方程的定义&quot; class=&quot;headerlink&quot; title=&quot;状态转移方程的定义&quot;&gt;&lt;/a&gt;状态转移方程的定义&lt;/h3&gt;&lt;p&gt;比如，对于LIS问题，我们的第一种定义：&lt;br&gt;设为：以数列中第k项结尾的最长递增子序列的长度.&lt;br&gt;设A为题中数列，状态转移方程为：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;F(1) = 1 （根据状态定义导出边界情况）&lt;br&gt;F(k)=max(F(1) + 1 | A(k)&amp;gt;A(i), i in (1..k-1)) (k&amp;gt;1)&lt;br&gt; （根据状态定义导出边界情况）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;用文字解释一下是：&lt;br&gt;以第k项结尾的LIS的长度是：保证第i项比第k项小的情况下，以第i项结尾的LIS长度加一的最大值，取遍i的所有值（i小于k）。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;最近一直在梳理自己的心情，确切的来说应该是感情，剪不断，理还乱，六月份要悄悄的溜走了，身边的人和事也发生了一些变化，时常在想，如果倒回到某个结点，我还会做一样的事情吗？may not （ps 跟分手没关系）&lt;/p&gt;
&lt;p&gt;越来越觉得有时候，是我把人想的太坏，不敢去相信，害怕被欺骗，其实哪里有那么复杂，人心再怎么险恶，也是肉长的，哎，长大的感觉真的是太不好了，越是想要追求快乐，越是难得到，渐渐明白，并不是所有的事情所有的人都会按照你想要的去发展，付出和收获往往也不能成正比。一直信以为仰的感情都是相互的，也渐渐的被现实证明为假命题，六月份七月份，赶紧过去吧，因为有一个傻逼已经老态龙钟了。&lt;/p&gt;
&lt;p&gt;本文内容参考自知乎：&lt;a href=&quot;https://www.zhihu.com/question/23995189/answer/35324479&quot;&gt;动态规划&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Algorithm" scheme="http://yoursite.com/categories/Algorithm/"/>
    
      <category term="动态规划" scheme="http://yoursite.com/categories/Algorithm/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
    
      <category term="algorithm" scheme="http://yoursite.com/tags/algorithm/"/>
    
      <category term="jobs" scheme="http://yoursite.com/tags/jobs/"/>
    
  </entry>
  
  <entry>
    <title>leetcode:343--Integer Break</title>
    <link href="http://yoursite.com/2016/06/22/leetcode/integer-break/"/>
    <id>http://yoursite.com/2016/06/22/leetcode/integer-break/</id>
    <published>2016-06-22T11:59:59.000Z</published>
    <updated>2016-06-22T15:30:18.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;题目描述：&lt;br&gt;给定给一个正整数n，将其分解成至少两个正整数的和，使这些整数的积最大化。返回可以得到的最大乘积。&lt;/p&gt;
&lt;p&gt;测试用例如题目描述。&lt;/p&gt;
&lt;p&gt;注意：你可以假设n不小于2.&lt;br&gt;提示：&lt;br&gt;   题目存在O(n)的解法。&lt;br&gt;   你可以通过演算n为7到10的整数来寻找规律。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;My-Solution：&quot;&gt;&lt;a href=&quot;#My-Solution：&quot; class=&quot;headerlink&quot; title=&quot;My Solution：&quot;&gt;&lt;/a&gt;My Solution：&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;算法思想：&lt;/strong&gt;  &lt;/p&gt;
&lt;h4 id=&quot;1-演算法得到规律：&quot;&gt;&lt;a href=&quot;#1-演算法得到规律：&quot; class=&quot;headerlink&quot; title=&quot;1.演算法得到规律：&quot;&gt;&lt;/a&gt;1.演算法得到规律：&lt;/h4&gt;&lt;pre&gt;&lt;code&gt;2  - 1 * 1
3  - 2 * 1
4  - 2 * 2
5  - 3 * 2
6  - 3 * 3
7  - 3 * 2 * 2
8  - 3 * 3 * 2
9  - 3 * 3 * 3
10 - 3 * 3 * 2 * 2
11 - 3 * 3 * 3 * 2
12 - 3 * 3 * 3 * 3
13 - 3 * 3 * 3 * 2 * 2
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;规律如下：  &lt;/p&gt;
&lt;pre&gt;&lt;code&gt;n / 3 &amp;lt;= 1 时，分为两个数的乘积，尽量均摊
n / 3 &amp;gt; 1 时，分为若干个3和2的乘积
n % 3 == 0 时，分为n个3的乘积
n % 3 == 1 时，分为n-1个3和两个2的乘积
n % 3 == 2 时，分为n个3和一个2的乘积
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;Python Code:&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Solution&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(object)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;integerBreak&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, n)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        :type n: int&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        :rtype: int&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        div = n / &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; div &amp;lt;= &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; (n / &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;) * (n / &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; + n % &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mod = n % &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; mod == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; ** div&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;elif&lt;/span&gt; mod == &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; ** (div - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) * &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;elif&lt;/span&gt; mod == &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; ** div * &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;动态规划求解：&quot;&gt;&lt;a href=&quot;#动态规划求解：&quot; class=&quot;headerlink&quot; title=&quot;动态规划求解：&quot;&gt;&lt;/a&gt;动态规划求解：&lt;/h4&gt;&lt;p&gt;状态转移方程：&lt;code&gt;dp[x] = max(3 * dp[x - 3], 2 * dp[x - 2])&lt;/code&gt;&lt;br&gt;&lt;strong&gt;Python Code:&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Solution&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(object)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;integerBreak&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, n)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        :type n: int&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        :rtype: int&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; n &amp;lt;= &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;: &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; n - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        dp = [&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] * (n + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        dp[&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;], dp[&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;] = &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; x &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;, n + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            dp[x] = max(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; * dp[x - &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;], &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; * dp[x - &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; dp[n]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;My-Problem&quot;&gt;&lt;a href=&quot;#My-Problem&quot; class=&quot;headerlink&quot; title=&quot;My Problem:&quot;&gt;&lt;/a&gt;My Problem:&lt;/h3&gt;&lt;p&gt;NO&lt;/p&gt;
&lt;h3 id=&quot;My-Answer&quot;&gt;&lt;a href=&quot;#My-Answer&quot; class=&quot;headerlink&quot; title=&quot;My Answer&quot;&gt;&lt;/a&gt;My Answer&lt;/h3&gt;&lt;p&gt;参考&lt;a href=&quot;&quot;&gt;动态规划&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;题目描述：&lt;br&gt;给定给一个正整数n，将其分解成至少两个正整数的和，使这些整数的积最大化。返回可以得到的最大乘积。&lt;/p&gt;
&lt;p&gt;测试用例如题目描述。&lt;/p&gt;
&lt;p&gt;注意：你可以假设n不小于2.&lt;br&gt;提示：&lt;br&gt;   题目存在O(n)的解法。&lt;br&gt;   你可以通过演算n为7到10的整数来寻找规律。&lt;br&gt;
    
    </summary>
    
      <category term="Python" scheme="http://yoursite.com/categories/Python/"/>
    
      <category term="leetcode" scheme="http://yoursite.com/categories/Python/leetcode/"/>
    
      <category term="动态规划" scheme="http://yoursite.com/categories/Python/leetcode/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
    
      <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
      <category term="leetcode" scheme="http://yoursite.com/tags/leetcode/"/>
    
      <category term="动态规划" scheme="http://yoursite.com/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
  </entry>
  
  <entry>
    <title>leetcode:347--Top K Frequent Elements</title>
    <link href="http://yoursite.com/2016/06/16/leetcode/top-k-frequent-elements/"/>
    <id>http://yoursite.com/2016/06/16/leetcode/top-k-frequent-elements/</id>
    <published>2016-06-16T11:59:59.000Z</published>
    <updated>2016-06-22T15:39:34.000Z</updated>
    
    <content type="html">&lt;p&gt;题目描述：&lt;br&gt;Given a non-empty array of integers, return the k most frequent elements.  &lt;/p&gt;
&lt;p&gt;For example,&lt;br&gt;Given [1,1,1,2,2,3] and k = 2, return [1,2].  &lt;/p&gt;
&lt;p&gt;Note:&lt;br&gt;You may assume k is always valid, 1 ≤ k ≤ number of unique elements.&lt;br&gt;Your algorithm’s time complexity must be better than O(n log n), where n is the array’s size.  &lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;My-Solution：&quot;&gt;&lt;a href=&quot;#My-Solution：&quot; class=&quot;headerlink&quot; title=&quot;My Solution：&quot;&gt;&lt;/a&gt;My Solution：&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;算法思想：&lt;/strong&gt;  &lt;/p&gt;
&lt;h4 id=&quot;My-way&quot;&gt;&lt;a href=&quot;#My-way&quot; class=&quot;headerlink&quot; title=&quot;My way:&quot;&gt;&lt;/a&gt;My way:&lt;/h4&gt;&lt;p&gt;我的想法就是：  O(n^2)&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;set过滤掉重复的元素，将不同的元素罗列出来作为dict的key值，而在nums中出现的次数作为value值，遍历nums，与key值比较，进行计数。&lt;/li&gt;
&lt;li&gt;将计数成功的countdict按照value值的大小进行排序，从大到小降序排序，参考了网上的一些value降序排序的方法：&lt;code&gt;sorted(countdict.items(), key=lambda d:d[1], reverse = True)&lt;/code&gt;得到的是一个countlist&lt;/li&gt;
&lt;li&gt;对countlist是一个二维数组，取前k个的第0个元素,即key值进行return。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;结果呢，就是严重的超时，因为双重循环的缘故吧~&lt;/p&gt;
&lt;h4 id=&quot;Reference&quot;&gt;&lt;a href=&quot;#Reference&quot; class=&quot;headerlink&quot; title=&quot;Reference&quot;&gt;&lt;/a&gt;Reference&lt;/h4&gt;&lt;p&gt;桶排序（Bucket Sort） 时间复杂度O(n)&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;遍历数组nums，利用字典cntDict统计各元素出现次数。&lt;/li&gt;
&lt;li&gt;遍历cntDict，利用嵌套列表freqList记录出现次数为i（ i∈[1, n] ）的所有元素&lt;/li&gt;
&lt;li&gt;逆序遍历freqList，将其中的前k个元素输出。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Python Code:&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#-*- coding:utf-8 -*-&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#又是超时的一个杰作 呵呵呵呵呵&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Solution&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(object)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;topKFrequent&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, nums, k)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;#sortednums = sorted(nums)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        nosamenums = set(nums)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;#countdict = dict() 这样使用会有UnboundLocalError: local variable &#39;dict&#39; referenced before assignment&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        countdict = &amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        res = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;#初始化countdict&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; e &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; nosamenums:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            countdict[e] = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#test:这个输出的是key的值        &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#       for k in countdict:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#           print(k)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;#test : print(countdict)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; key &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; countdict:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; nums:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; i == key:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    countdict[key] += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        countlist = sorted(countdict.items(), key=&lt;span class=&quot;keyword&quot;&gt;lambda&lt;/span&gt; d:d[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;], reverse = &lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;#test : print(countlist)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; n &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(k):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            res.append(countlist[n][&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; res&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; __name__ == &lt;span class=&quot;string&quot;&gt;&quot;__main__&quot;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;#nums = [1, 2, 3 , 1, 3, 1]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    nums = [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(Solution().topKFrequent(nums, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;参考代码：(思想看懂了，代码不是很懂)&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Solution&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(object)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;topKFrequent&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, nums, k)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        :type nums: List[int]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        :type k: int&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        :rtype: List[int]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        n = len(nums)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        cntDict = collections.defaultdict(int)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; nums:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            cntDict[i] += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        freqList = [[] &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(n + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; p &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; cntDict:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            freqList[cntDict[p]] += p,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ans = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; p &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(n, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ans += freqList[p]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; ans[:k]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;上述代码知识点：  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;表达式后边的&lt;code&gt;,&lt;/code&gt;表示会自动得到一个tuple对象。  &lt;/li&gt;
&lt;li&gt;ans[:k]表达的是list取前k个元素（python切片）&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h4 id=&quot;Another-way&quot;&gt;&lt;a href=&quot;#Another-way&quot; class=&quot;headerlink&quot; title=&quot;Another way:&quot;&gt;&lt;/a&gt;Another way:&lt;/h4&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Solution2&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(object)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;topKFrequent&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, nums, k)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [key &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; key, _ &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; collections.Counter(nums).most_common(k)]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;直接用python自带的collections函数&lt;/p&gt;
&lt;h3 id=&quot;My-Problem&quot;&gt;&lt;a href=&quot;#My-Problem&quot; class=&quot;headerlink&quot; title=&quot;My Problem:&quot;&gt;&lt;/a&gt;My Problem:&lt;/h3&gt;&lt;p&gt;看完了refer代码，也觉得看不懂，不知道哪里用到了桶排序，还是补充一下python中的切片吧&lt;/p&gt;
&lt;h3 id=&quot;My-Answer&quot;&gt;&lt;a href=&quot;#My-Answer&quot; class=&quot;headerlink&quot; title=&quot;My Answer&quot;&gt;&lt;/a&gt;My Answer&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000/001431756919644a792ee4ead724ef7afab3f7f771b04f5000&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;切片&lt;/a&gt;：&lt;br&gt;取list或者tuple或string的部分元素[n:m]&lt;br&gt;n省略就是前m个元素  &lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;题目描述：&lt;br&gt;Given a non-empty array of integers, return the k most frequent elements.  &lt;/p&gt;
&lt;p&gt;For example,&lt;br&gt;Given [1,1,1,2,2,3] and k = 2, return [1,2].  &lt;/p&gt;
&lt;p&gt;Note:&lt;br&gt;You may assume k is always valid, 1 ≤ k ≤ number of unique elements.&lt;br&gt;Your algorithm’s time complexity must be better than O(n log n), where n is the array’s size.  &lt;/p&gt;
    
    </summary>
    
      <category term="Python" scheme="http://yoursite.com/categories/Python/"/>
    
      <category term="leetcode" scheme="http://yoursite.com/categories/Python/leetcode/"/>
    
      <category term="dict" scheme="http://yoursite.com/categories/Python/leetcode/dict/"/>
    
    
      <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
      <category term="leetcode" scheme="http://yoursite.com/tags/leetcode/"/>
    
      <category term="dict，切片" scheme="http://yoursite.com/tags/dict%EF%BC%8C%E5%88%87%E7%89%87/"/>
    
  </entry>
  
  <entry>
    <title>leetcode:42--Trapping Rain Water</title>
    <link href="http://yoursite.com/2016/06/13/leetcode/trapping-rain-water/"/>
    <id>http://yoursite.com/2016/06/13/leetcode/trapping-rain-water/</id>
    <published>2016-06-13T11:59:59.000Z</published>
    <updated>2016-06-13T13:27:00.000Z</updated>
    
    <content type="html">&lt;p&gt;题目描述：&lt;br&gt;Given n non-negative integers representing an elevation map where the width of each bar is 1, compute how much water it is able to trap after raining.  &lt;/p&gt;
&lt;p&gt;For example,&lt;br&gt;Given [0,1,0,2,1,0,1,3,2,1,2,1], return 6.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xskaf.com1.z0.glb.clouddn.com/rainwatertrap.png&quot; alt=&quot;png&quot;&gt;&lt;/p&gt;
&lt;p&gt;题目的意思就是蓝色的地方是注水的，黑色的地方的高度就是Given A[0,1,0,2,1,0,1,3,2,1,2,1], 要求的就是根据给定的黑色部分，求出注水部分的体积。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;My-Solution：&quot;&gt;&lt;a href=&quot;#My-Solution：&quot; class=&quot;headerlink&quot; title=&quot;My Solution：&quot;&gt;&lt;/a&gt;My Solution：&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;算法思想：&lt;/strong&gt;&lt;br&gt;这道题被归到了贪心算法里面，思想就是，对于A[i]地方的注水，得到推导公式：&lt;br&gt;    &lt;code&gt;min(leftmostheight,rightmostheight) - A[i]&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Python Code:&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#-*- coding:utf-8 -*-&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#当前柱状的左边最高的和当前柱状右边最高的进行比较&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Solution&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(object)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;trap&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, height)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;#初始化leftmostheight为0，因为从左到右遍历，所以随着i移动，leftmostheight是值会变化的数组&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        leftmostheight = [&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(len(height))]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;#这个是左边最大的&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        leftmax = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(len(height)):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; height[i] &amp;gt; leftmax:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                leftmax = height[i]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            leftmostheight[i] = leftmax&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sum = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        rightmax = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;#从右向左遍历，随着i移动，rightmax不必再存储到rightmostheight里面，因为leftmostheight已经有了&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; reversed(range(len(height))):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; height[i] &amp;gt; rightmax:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                rightmax = height[i]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; min(rightmax, leftmostheight[i]) &amp;gt; height[i]:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                sum += min(rightmax, leftmostheight[i]) - height[i]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; sum&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; __name__ == &lt;span class=&quot;string&quot;&gt;&quot;__main__&quot;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    height = [&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(Solution().trap(height))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;My-Problem&quot;&gt;&lt;a href=&quot;#My-Problem&quot; class=&quot;headerlink&quot; title=&quot;My Problem:&quot;&gt;&lt;/a&gt;My Problem:&lt;/h3&gt;&lt;p&gt;NO&lt;/p&gt;
&lt;h3 id=&quot;My-Answer&quot;&gt;&lt;a href=&quot;#My-Answer&quot; class=&quot;headerlink&quot; title=&quot;My Answer&quot;&gt;&lt;/a&gt;My Answer&lt;/h3&gt;&lt;p&gt;NO&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;题目描述：&lt;br&gt;Given n non-negative integers representing an elevation map where the width of each bar is 1, compute how much water it is able to trap after raining.  &lt;/p&gt;
&lt;p&gt;For example,&lt;br&gt;Given [0,1,0,2,1,0,1,3,2,1,2,1], return 6.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xskaf.com1.z0.glb.clouddn.com/rainwatertrap.png&quot; alt=&quot;png&quot;&gt;&lt;/p&gt;
&lt;p&gt;题目的意思就是蓝色的地方是注水的，黑色的地方的高度就是Given A[0,1,0,2,1,0,1,3,2,1,2,1], 要求的就是根据给定的黑色部分，求出注水部分的体积。&lt;/p&gt;
    
    </summary>
    
      <category term="Python" scheme="http://yoursite.com/categories/Python/"/>
    
      <category term="leetcode" scheme="http://yoursite.com/categories/Python/leetcode/"/>
    
      <category term="Greedy" scheme="http://yoursite.com/categories/Python/leetcode/Greedy/"/>
    
    
      <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
      <category term="leetcode" scheme="http://yoursite.com/tags/leetcode/"/>
    
      <category term="Greedy" scheme="http://yoursite.com/tags/Greedy/"/>
    
  </entry>
  
  <entry>
    <title>leetcode:357--Count Numbers with Unique Digits</title>
    <link href="http://yoursite.com/2016/06/13/leetcode/count-numbers-with-unique-digits/"/>
    <id>http://yoursite.com/2016/06/13/leetcode/count-numbers-with-unique-digits/</id>
    <published>2016-06-13T11:59:59.000Z</published>
    <updated>2016-06-13T15:25:27.000Z</updated>
    
    <content type="html">&lt;p&gt;题目描述：&lt;br&gt;Given a non-negative integer n, count all numbers with unique digits, x, where 0 ≤ x &amp;lt; 10n.  &lt;/p&gt;
&lt;p&gt;Example:&lt;br&gt;Given n = 2, return 91. (The answer should be the total numbers in the range of 0 ≤ x &amp;lt; 100, excluding [11,22,33,44,55,66,77,88,99])  &lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;My-Solution：&quot;&gt;&lt;a href=&quot;#My-Solution：&quot; class=&quot;headerlink&quot; title=&quot;My Solution：&quot;&gt;&lt;/a&gt;My Solution：&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;算法思想：&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight erlang-repl&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;这个题目的主要算法思想就是,排列组合!!!!!!  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;这道题目的题意是:给定一个n,然后 &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&amp;lt;=N&amp;lt;&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;^n ,在N的取值范围内,找出unique的number,  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;比如,n = &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;时,N取值范围是[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;),那就要排除[&lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;22&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;33&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;44&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;55&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;66&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;77&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;88&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;99&lt;/span&gt;], return &lt;span class=&quot;number&quot;&gt;91&lt;/span&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;这就是一道排列组合的题目:  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;对于两位数,高位取值:(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;)---&amp;gt;&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;个选择 低位为了不与高位重复:(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;) - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;(高位选择)---&amp;gt;&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;个选择   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;对于三位数,高位取值:(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;)  中间位取值:(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;)-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;(高位选择)  低位取值:中间位取值 - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;(中间位选择)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;规律:&lt;code&gt;f(k) = 9 * 9 * 8 ...(9 - k + 2) sum = f(1) + f(2) + ... + f(k)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Python Code:&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Solution&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(object)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;countNumbersWithUniqueDigits&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, n)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; n == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        f = &lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        result = &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, n + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            f *= &lt;span class=&quot;number&quot;&gt;9&lt;/span&gt; - i + &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            result += f&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; result&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; __name__ == &lt;span class=&quot;string&quot;&gt;&quot;__main__&quot;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    n = &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(Solution().countNumbersWithUniqueDigits(n))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;My-Problem&quot;&gt;&lt;a href=&quot;#My-Problem&quot; class=&quot;headerlink&quot; title=&quot;My Problem:&quot;&gt;&lt;/a&gt;My Problem:&lt;/h3&gt;&lt;p&gt;我特么就是个傻逼!!!!什么事情都特么做不好!!!&lt;/p&gt;
&lt;h3 id=&quot;My-Answer&quot;&gt;&lt;a href=&quot;#My-Answer&quot; class=&quot;headerlink&quot; title=&quot;My Answer&quot;&gt;&lt;/a&gt;My Answer&lt;/h3&gt;&lt;p&gt;NO&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;题目描述：&lt;br&gt;Given a non-negative integer n, count all numbers with unique digits, x, where 0 ≤ x &amp;lt; 10n.  &lt;/p&gt;
&lt;p&gt;Example:&lt;br&gt;Given n = 2, return 91. (The answer should be the total numbers in the range of 0 ≤ x &amp;lt; 100, excluding [11,22,33,44,55,66,77,88,99])  &lt;/p&gt;
    
    </summary>
    
      <category term="Python" scheme="http://yoursite.com/categories/Python/"/>
    
      <category term="leetcode" scheme="http://yoursite.com/categories/Python/leetcode/"/>
    
      <category term="智力题" scheme="http://yoursite.com/categories/Python/leetcode/%E6%99%BA%E5%8A%9B%E9%A2%98/"/>
    
    
      <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
      <category term="leetcode" scheme="http://yoursite.com/tags/leetcode/"/>
    
      <category term="数学题" scheme="http://yoursite.com/tags/%E6%95%B0%E5%AD%A6%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>leetcode:11--Container With Most Water</title>
    <link href="http://yoursite.com/2016/06/06/leetcode/container-with-most-water/"/>
    <id>http://yoursite.com/2016/06/06/leetcode/container-with-most-water/</id>
    <published>2016-06-06T11:59:59.000Z</published>
    <updated>2016-06-13T13:35:06.000Z</updated>
    
    <content type="html">&lt;p&gt;题目描述：&lt;br&gt;Given n non-negative integers a1, a2, …, an, where each represents a point at coordinate (i, ai). n vertical lines are drawn such that the two endpoints of line i is at (i, ai) and (i, 0). Find two lines, which together with x-axis forms a container, such that the container contains the most water.  &lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;My-Solution：&quot;&gt;&lt;a href=&quot;#My-Solution：&quot; class=&quot;headerlink&quot; title=&quot;My Solution：&quot;&gt;&lt;/a&gt;My Solution：&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;算法思想：&lt;/strong&gt;&lt;br&gt;由小的一根（短板）决定高度。中间看过网上的解答，思路是O(n)的，略巧妙。其实就是基于这样一个直觉，先把L1设为最左，R1设为最右，这样宽度最大，然后缩小宽度，那么高度就要比原来高。缩小宽度的逻辑是，如果L1比R1小，那么L1往右移，否则反之。可以做简单证明。&lt;/p&gt;
&lt;p&gt;如图，L1&lt;r1&lt;r2&lt;l2，那么在l1移动到l2和r1移动到r2的过程中，存在的lx和rx都满足lx &lt;=&quot;&quot; l1，=&quot;&quot; rx=&quot;&quot; r1。假设lx=&quot;&quot; rx，那么lx*=&quot;&quot; d(rx=&quot;&quot; -=&quot;&quot; lx)=&quot;&quot; l1*d(rx-lx)=&quot;&quot; l1=&quot;&quot; *=&quot;&quot; (=&quot;&quot; r1=&quot;&quot; l1)。若lx=&quot;&quot;&gt; Rx，则Rx &lt;em&gt; d(Rx - Lx) &amp;lt; Rx &lt;/em&gt; d(R1 - L1) &amp;lt; L1 * d(R1 - L1) (因为Rx,Lx都小于L1&amp;lt;R1)。直观的想就是，如果宽度减少，同时左右两侧的板都比原来的还要矮，怎么可能容纳更多的水呢？  &lt;/r1&lt;r2&lt;l2，那么在l1移动到l2和r1移动到r2的过程中，存在的lx和rx都满足lx&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Python Code:&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#-*- coding:utf-8 -*-&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#题目要求：这道题是要求找出最大的容量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#先把L1设为最左，R1设为最右，这样宽度最大，然后缩小宽度，那么高度就要比原来高。缩小宽度的逻辑是，如果L1比R1小，那么L1往右移，否则反之&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Solution&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(object)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;maxArea&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, height)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;#初始化&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;#最左边l的坐标是0，&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        l = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;#最右边r的初始值是最右边坐标&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        r = len(height) - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;#print(&#39;r value: %s&#39; % r)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;#test:print(r)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;#res 来存放最后的结果&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        res = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;#tmp存放临时的结果&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        tmp = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; l &amp;lt; r:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;#r-l是宽度， min()里是左右最小的高度，因为容量取决于短板&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            tmp = min(height[l], height[r]) * (r - l)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;#res = max(res, min(height[r], height[l]) * (r - l))&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;#test:print(tmp)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;#如果tmp比较大的话，&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; tmp &amp;gt; res:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                res = tmp&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; height[l] &amp;lt; height[r]:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;#左边的小于右边的，容量取决于左边，于是从左边找有没有更大的高度&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                lastl = height[l]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; l &amp;lt; r &lt;span class=&quot;keyword&quot;&gt;and&lt;/span&gt; height[l] &amp;lt;= lastl:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    l += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;#右边的小于左边的，取决于右边,从右边找有没有更大的高度&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                lastr = height[r]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; l &amp;lt; r &lt;span class=&quot;keyword&quot;&gt;and&lt;/span&gt; height[r] &amp;lt;= lastr:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    r -= &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; res&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; __name__ == &lt;span class=&quot;string&quot;&gt;&#39;__main__&#39;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    height = [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(Solution().maxArea(height))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;简化代码：&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Solution&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;# @return an integer&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;maxArea&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, height)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        max_area, i, j = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, len(height) - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; i &amp;lt; j:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            max_area = max(max_area, min(height[i], height[j]) * (j - i))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; height[i] &amp;lt; height[j]:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                i += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                j -= &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; max_area&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; __name__ == &lt;span class=&quot;string&quot;&gt;&quot;__main__&quot;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    height = [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    result = Solution().maxArea(height)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; result&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;My-Problem&quot;&gt;&lt;a href=&quot;#My-Problem&quot; class=&quot;headerlink&quot; title=&quot;My Problem:&quot;&gt;&lt;/a&gt;My Problem:&lt;/h3&gt;&lt;p&gt;NO&lt;/p&gt;
&lt;h3 id=&quot;My-Answer&quot;&gt;&lt;a href=&quot;#My-Answer&quot; class=&quot;headerlink&quot; title=&quot;My Answer&quot;&gt;&lt;/a&gt;My Answer&lt;/h3&gt;&lt;p&gt;NO&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;题目描述：&lt;br&gt;Given n non-negative integers a1, a2, …, an, where each represents a point at coordinate (i, ai). n vertical lines are drawn such that the two endpoints of line i is at (i, ai) and (i, 0). Find two lines, which together with x-axis forms a container, such that the container contains the most water.  &lt;/p&gt;
    
    </summary>
    
      <category term="Python" scheme="http://yoursite.com/categories/Python/"/>
    
      <category term="leetcode" scheme="http://yoursite.com/categories/Python/leetcode/"/>
    
      <category term="Greedy" scheme="http://yoursite.com/categories/Python/leetcode/Greedy/"/>
    
    
      <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
      <category term="leetcode" scheme="http://yoursite.com/tags/leetcode/"/>
    
      <category term="Greedy" scheme="http://yoursite.com/tags/Greedy/"/>
    
      <category term="贪心" scheme="http://yoursite.com/tags/%E8%B4%AA%E5%BF%83/"/>
    
  </entry>
  
  <entry>
    <title>贪心算法</title>
    <link href="http://yoursite.com/2016/06/03/Algorithm/%E8%B4%AA%E5%BF%83%E6%B3%95/"/>
    <id>http://yoursite.com/2016/06/03/Algorithm/贪心法/</id>
    <published>2016-06-03T11:59:59.000Z</published>
    <updated>2016-06-03T13:59:23.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;序言：开刷leetcode的medium难度的题目，一开始就出现贪心法这样的基本算法，然而我作为本科计算机专业水水过来的渣渣，基本什么都不懂…还是趁现在年轻研究一下吧~&lt;br&gt;参考文章：  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.cnblogs.com/steven_oyj/archive/2010/05/22/1741375.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;五大常用算法之三：贪心算法&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.csdn.net/tengweitw/article/details/17054009&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;贪心算法之背包问题&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://love-oriented.com/pack/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;背包问题&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;基本概念&quot;&gt;&lt;a href=&quot;#基本概念&quot; class=&quot;headerlink&quot; title=&quot;基本概念&quot;&gt;&lt;/a&gt;基本概念&lt;/h3&gt;&lt;p&gt;贪心算法是指，在对问题求解时，总是&lt;font color=&quot;green&quot;&gt;做出在当前看来是最好的选择。&lt;/font&gt;  也就是说，不从整体最优上加以考虑—-&lt;font color=&quot;green&quot; size=&quot;4&quot;&gt;局部最优解.&lt;/font&gt;&lt;br&gt;贪心算法没有固定的算法框架，算法设计的关键是贪心策略的选择。必须注意的是，贪心算法不是对所有问题都能得到整体最优解，选择的贪心策略必须&lt;font color=&quot;green&quot;&gt;具备无后效性&lt;/font&gt;，即某个状态以后的过程不会影响以前的状态，只与当前状态有关。  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;所以关键是采用贪心策略一定要分析是否满足无后效性！！！&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&quot;基本思路&quot;&gt;&lt;a href=&quot;#基本思路&quot; class=&quot;headerlink&quot; title=&quot;基本思路&quot;&gt;&lt;/a&gt;基本思路&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;建立数学模型来描述问题。&lt;/li&gt;
&lt;li&gt;把求解的问题分成若干个子问题。&lt;/li&gt;
&lt;li&gt;对每一个子问题求解，得到子问题的局部最优解。&lt;/li&gt;
&lt;li&gt;把子问题的解局部最优解合成原来解问题的一个解。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;贪心算法使用的问题&quot;&gt;&lt;a href=&quot;#贪心算法使用的问题&quot; class=&quot;headerlink&quot; title=&quot;贪心算法使用的问题&quot;&gt;&lt;/a&gt;贪心算法使用的问题&lt;/h3&gt;&lt;p&gt;贪心策略适用的前提是：局部最优策略能导致产生全局最优解。&lt;br&gt;实际上，贪心算法适用的情况很少。一般，对一个问题分析是否适用于贪心算法，可以先选择该问题下的几个实际数据进行分析，就可做出判断。&lt;/p&gt;
&lt;h3 id=&quot;贪心算法的实现框架&quot;&gt;&lt;a href=&quot;#贪心算法的实现框架&quot; class=&quot;headerlink&quot; title=&quot;贪心算法的实现框架&quot;&gt;&lt;/a&gt;贪心算法的实现框架&lt;/h3&gt;&lt;p&gt;从问题的某一初始解出发；&lt;br&gt;    &lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; （能朝给定总目标前进一步）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      利用可行的决策，求出可行解的一个解元素；&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;由所有解元素组合成问题的一个可行解；&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;贪心策略的选择&quot;&gt;&lt;a href=&quot;#贪心策略的选择&quot; class=&quot;headerlink&quot; title=&quot;贪心策略的选择&quot;&gt;&lt;/a&gt;贪心策略的选择&lt;/h3&gt;&lt;p&gt; 因为用贪心算法只能通过解局部最优解的策略来达到全局最优解，因此，一定要注意判断问题是否适合采用贪心算法策略，找到的解是否一定是问题的最优解。  &lt;/p&gt;
&lt;h3 id=&quot;例题分析—背包问题&quot;&gt;&lt;a href=&quot;#例题分析—背包问题&quot; class=&quot;headerlink&quot; title=&quot;例题分析—背包问题&quot;&gt;&lt;/a&gt;例题分析—背包问题&lt;/h3&gt;&lt;h4 id=&quot;问题描述：&quot;&gt;&lt;a href=&quot;#问题描述：&quot; class=&quot;headerlink&quot; title=&quot;问题描述：&quot;&gt;&lt;/a&gt;问题描述：&lt;/h4&gt;&lt;p&gt;[0-1背包问题]有一个背包，背包的容量M=150。有7个物品，物品只能完整的取。要求尽可能让装入背包的物品总价值最大，但不能超过总容量。  &lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Goods&lt;/th&gt;
&lt;th&gt;A&lt;/th&gt;
&lt;th&gt;B&lt;/th&gt;
&lt;th&gt;C&lt;/th&gt;
&lt;th&gt;D&lt;/th&gt;
&lt;th&gt;E&lt;/th&gt;
&lt;th&gt;F&lt;/th&gt;
&lt;th&gt;G&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Weight&lt;/td&gt;
&lt;td&gt;35&lt;/td&gt;
&lt;td&gt;30&lt;/td&gt;
&lt;td&gt;60&lt;/td&gt;
&lt;td&gt;50&lt;/td&gt;
&lt;td&gt;40&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;25&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Value&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;40&lt;/td&gt;
&lt;td&gt;30&lt;/td&gt;
&lt;td&gt;50&lt;/td&gt;
&lt;td&gt;35&lt;/td&gt;
&lt;td&gt;40&lt;/td&gt;
&lt;td&gt;30&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&quot;问题分析：&quot;&gt;&lt;a href=&quot;#问题分析：&quot; class=&quot;headerlink&quot; title=&quot;问题分析：&quot;&gt;&lt;/a&gt;问题分析：&lt;/h4&gt;&lt;h5 id=&quot;分析：&quot;&gt;&lt;a href=&quot;#分析：&quot; class=&quot;headerlink&quot; title=&quot;分析：&quot;&gt;&lt;/a&gt;分析：&lt;/h5&gt;&lt;pre&gt;&lt;code&gt;目标函数： ∑pi最大  
约束条件是装入的物品总重量不超过背包容量：∑wi&amp;lt;=M( M=150)  
（1）根据贪心的策略，每次挑选价值最大的物品装入背包，得到的结果是否最优？  
（2）每次挑选所占重量最小的物品装入是否能得到最优解？  
（3）每次选取单位重量价值最大的物品，成为解本题的策略。  
值得注意的是，贪心算法并不是完全不可以使用，贪心策略一旦经过证明成立后，它就是一种高效的算法。  
贪心算法还是很常见的算法之一，这是由于它简单易行，构造贪心策略不是很困难。  
可惜的是，它需要证明后才能真正运用到题目的算法中。  
一般来说，贪心算法的证明围绕着：整个问题的最优解一定由在贪心策略中存在的子问题的最优解得来的。  
对于例题中的3种贪心策略，都是无法成立（无法被证明）的，解释如下：  
（1）贪心策略：选取价值最大者。反例：  
W=30  
物品：A B C  
重量：28 12 12  
价值：30 20 20  
根据策略，首先选取物品A，接下来就无法再选取了，可是，选取B、C则更好。  
（2）贪心策略：选取重量最小。它的反例与第一种策略的反例差不多。  
（3）贪心策略：选取单位重量价值最大的物品。反例：   
W=30  
物品：A B C  
重量：28 20 10  
价值：28 20 10  
根据策略，三种物品单位重量价值一样，程序无法依据现有策略作出判断，如果选择A，则答案错误。  
&lt;/code&gt;&lt;/pre&gt;&lt;h5 id=&quot;结论：&quot;&gt;&lt;a href=&quot;#结论：&quot; class=&quot;headerlink&quot; title=&quot;结论：&quot;&gt;&lt;/a&gt;结论：&lt;/h5&gt;&lt;p&gt;   贪心算法只是贪心的选择当下最优的解，并没有从全局的角度考虑，所以在解决0-1背包问题的时候，并不能得到最优解，这时候就要考虑动态规划了。&lt;/p&gt;
&lt;h3 id=&quot;贪心和动态规划：&quot;&gt;&lt;a href=&quot;#贪心和动态规划：&quot; class=&quot;headerlink&quot; title=&quot;贪心和动态规划：&quot;&gt;&lt;/a&gt;贪心和动态规划：&lt;/h3&gt;&lt;p&gt;   贪心不一定能得到最优解，得到最优解需要满足：  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;贪心选择性质：&lt;/strong&gt;一个全局最优解可以通过局部最优解来得到。that is to say,当考虑如何做选择时，我们只考虑对当前问题最佳的选择而不考虑子问题的结果。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;最优子结构：&lt;/strong&gt;全局最优解包含子问题的最优解。&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;贪心和动态规划的区别：&lt;/strong&gt;在动态规划中，每一步都要做出选择，但是这些选择都依赖于子问题的解。因此，解动态规划问题一般是自底向上，由子问题到问题。在贪心算法中，我们总是做出当前的最好选择，而这些选择都不是依赖子问题，选择后再解决选择之后出现的子问题。因此，解贪心算法问题一般是自顶向下，一个一个地做出贪心选择。  &lt;/p&gt;
&lt;p&gt;从上面的描述可知，动态规划中解决问题，需要先解决子问题，因此可能用到递归（当然可以将递归化为非递归），计算复杂度要比贪心算法高。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;序言：开刷leetcode的medium难度的题目，一开始就出现贪心法这样的基本算法，然而我作为本科计算机专业水水过来的渣渣，基本什么都不懂…还是趁现在年轻研究一下吧~&lt;br&gt;参考文章：  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.cnblogs.com/steven_oyj/archive/2010/05/22/1741375.html&quot;&gt;五大常用算法之三：贪心算法&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.csdn.net/tengweitw/article/details/17054009&quot;&gt;贪心算法之背包问题&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://love-oriented.com/pack/&quot;&gt;背包问题&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Algorithm" scheme="http://yoursite.com/categories/Algorithm/"/>
    
      <category term="贪心算法" scheme="http://yoursite.com/categories/Algorithm/%E8%B4%AA%E5%BF%83%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="algorithm" scheme="http://yoursite.com/tags/algorithm/"/>
    
      <category term="jobs" scheme="http://yoursite.com/tags/jobs/"/>
    
  </entry>
  
  <entry>
    <title>Pyhton I/O进行文件读写(持续更新)</title>
    <link href="http://yoursite.com/2016/06/03/Python/python%20IO/"/>
    <id>http://yoursite.com/2016/06/03/Python/python IO/</id>
    <published>2016-06-03T11:59:59.000Z</published>
    <updated>2016-06-13T13:23:46.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言:&quot;&gt;&lt;/a&gt;前言:&lt;/h2&gt;&lt;p&gt;自从成为小杂碎之后,各种修改bug,这次要求的是check IODM的value值, check的是一个文件里面enabled和enableSSLv3的值, 刚开始我写了一个shell script,但是被各种批评,对于文件的操作python更有优势,其实我并不能苟同这样的观点,但是经过今天写了这段python的代码,发现python能用较少的代码实现,而且,可以避免调用shell脚本,这个过程更加easy一点.&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;Python-I-O操作&quot;&gt;&lt;a href=&quot;#Python-I-O操作&quot; class=&quot;headerlink&quot; title=&quot;Python I/O操作:&quot;&gt;&lt;/a&gt;Python I/O操作:&lt;/h2&gt;&lt;p&gt;下面这段代码里面用的是正则表达式中的search和sub的方法,进行字符串匹配和替换.&lt;br&gt;基本思想是每读取一行文件,看是否值是正确的,如果不正确,就进行替换并且将这一行line加入到字符串w_str中,如果正确,则直接将此行加入到字符串w_str中.&lt;br&gt;这种方式,更方便的达到查找和替换的目的!!!&lt;br&gt;基本的格式:  &lt;/p&gt;
&lt;pre&gt;&lt;code&gt;filename = &amp;quot;&amp;quot; 
fread = open(filename, &amp;apos;r&amp;apos;)
fwrite = open(filename, &amp;apos;w&amp;apos;)
w_str = &amp;quot;&amp;quot;
for line in fread:
    #将line加入到文件中
    fwrite.write(line)
fread.close()
fwrite.close()
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;============================================================&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;comment&quot;&gt;#-*- coding:utf-8 -*-&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; re&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;filedir = &lt;span class=&quot;string&quot;&gt;&quot;/Users/congyingw/Desktop/sfcb.cfg&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;f1 = open(filedir, &lt;span class=&quot;string&quot;&gt;&#39;r&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;w_str = &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;flag = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; line &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; f1:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;#check has enableSSLv3 or not&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; re.search(&lt;span class=&quot;string&quot;&gt;&quot;enableSSLv3&quot;&lt;/span&gt;, line):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       flag = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       flag = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;#check enabled and enableSSLv3 value&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; re.search(&lt;span class=&quot;string&quot;&gt;&quot;enabled:true&quot;&lt;/span&gt;, line) &lt;span class=&quot;keyword&quot;&gt;and&lt;/span&gt; re.search(&lt;span class=&quot;string&quot;&gt;&quot;enableSSLv3:true&quot;&lt;/span&gt;, line):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        w_str += line &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print(&lt;span class=&quot;string&quot;&gt;&quot;right value&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;elif&lt;/span&gt; re.search(&lt;span class=&quot;string&quot;&gt;&quot;enabled:false&quot;&lt;/span&gt;, line):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        line = re.sub(&lt;span class=&quot;string&quot;&gt;&quot;enabled:false&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;enabled:true&quot;&lt;/span&gt;, line)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        w_str += line&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; :&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        line = re.sub(&lt;span class=&quot;string&quot;&gt;&quot;enableSSLv3:false&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;enableSSLv3:true&quot;&lt;/span&gt;, line)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        w_str += line&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; flag == &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     w_str += &lt;span class=&quot;string&quot;&gt;&quot;\nenableSSLv3:true&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(w_str)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;f2=open(filedir, &lt;span class=&quot;string&quot;&gt;&#39;w&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;f2.write(w_str)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;f1.close()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;f2.close()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;一般文件读写都是用 with open() as f:这样就省去了try catch语块,不然还要考虑这种情况!&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&#39;&#39;&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;This function to check if values in /etc/sfcb/sfcb.cfg are right.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@return True/False&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&#39;&#39;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;remote = STAFRemote(self.hostname)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;remote.CopyFromHost(&lt;span class=&quot;string&quot;&gt;&quot;/etc/sfcb/sfcb.cfg&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;/tmp&quot;&lt;/span&gt;, self.Launcher_VM)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;checkf_name = &lt;span class=&quot;string&quot;&gt;&quot;/tmp/sfcb.cfg&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;w_str = &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;isenableSSLv3 = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;with&lt;/span&gt; open(checkf_name, &lt;span class=&quot;string&quot;&gt;&#39;r&#39;&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; f:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; line &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; f:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;comment&quot;&gt;#check has enableSSLv3 or not&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; re.search(&lt;span class=&quot;string&quot;&gt;&quot;enableSSLv3&quot;&lt;/span&gt;, line):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           isenableSSLv3 = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           isenableSSLv3 = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;comment&quot;&gt;#check enabled and enableSSLv3 value&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; re.search(&lt;span class=&quot;string&quot;&gt;&quot;enabled:        true&quot;&lt;/span&gt;, line):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           log.debug(&lt;span class=&quot;string&quot;&gt;&quot;enabled in /etc/sfcb/sfcb.cfg, and values of it is true.&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           w_str += line&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;elif&lt;/span&gt; re.search(&lt;span class=&quot;string&quot;&gt;&quot;enableSSLv3:    true&quot;&lt;/span&gt;, line):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           log.debug(&lt;span class=&quot;string&quot;&gt;&quot;enableSSLv3 in /etc/sfcb/sfcb.cfg, and values of it is true.&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           w_str += line&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;elif&lt;/span&gt; re.search(&lt;span class=&quot;string&quot;&gt;&quot;enabled:        false&quot;&lt;/span&gt;, line):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           log.debug(&lt;span class=&quot;string&quot;&gt;&quot;enabled in /etc/sfcb/sfcb.cfg, but value of it is false.&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           line = re.sub(&lt;span class=&quot;string&quot;&gt;&quot;enabled:        false&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;enabled:        true&quot;&lt;/span&gt;, line)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           w_str += line&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;elif&lt;/span&gt; re.search(&lt;span class=&quot;string&quot;&gt;&quot;enableSSLv3:    false&quot;&lt;/span&gt;, line):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           log.debug(&lt;span class=&quot;string&quot;&gt;&quot;enableSSLv3 in /etc/sfcb/sfcb.cfg, but value of it is false.&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           line = re.sub(&lt;span class=&quot;string&quot;&gt;&quot;enableSSLv3:    false&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;enableSSLv3:    true&quot;&lt;/span&gt;, line)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           w_str += line&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           w_str += line&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; isenableSSLv3 == &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        w_str += &lt;span class=&quot;string&quot;&gt;&quot;enableSSLv3:    true&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        log.debug(&lt;span class=&quot;string&quot;&gt;&quot;enableSSLv3 not in /etc/sfcb/sfcb.cfg.We should add enableSSLv3 in /etc/sfcb/sfcb.cfg&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;with&lt;/span&gt; open(checkf_name, &lt;span class=&quot;string&quot;&gt;&#39;w&#39;&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; f:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    f.write(w_str)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;remote.CopyToHost(&lt;span class=&quot;string&quot;&gt;&quot;/tmp/sfcb.cfg&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;/etc/sfcb/sfcb.cfg&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rc, result = remote.ExecuteCmd(&lt;span class=&quot;string&quot;&gt;&quot;/etc/init.d/sfcbd-watchdog&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;start&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; rc != ReVal.PASSED:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   log.error(&lt;span class=&quot;string&quot;&gt;&quot;Restart /etc/init.d/sfcbd-watchdog failed, please check param again.&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;False&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;hr&gt;
&lt;p&gt;lani给我的烂代码提供了一些简化的意见&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;CheckIODMValues&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;string&quot;&gt;&#39;&#39;&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       This function to check if values in /etc/sfcb/sfcb.cfg are right.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       @return True/False&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &#39;&#39;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       remote = STAFRemote(self.hostname)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       data = remote.GetFileContent(&lt;span class=&quot;string&quot;&gt;&quot;/etc/sfcb/sfcb.cfg&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       w_str = &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; line &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; data.split(&lt;span class=&quot;string&quot;&gt;&#39;\n&#39;&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;comment&quot;&gt;#check has enableSSLv3 or not&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          isenableSSLv3 = &lt;span class=&quot;string&quot;&gt;&#39;enableSSLv3&#39;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; line&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;comment&quot;&gt;#check enabled and enableSSLv3 value&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; line.startswith(&lt;span class=&quot;string&quot;&gt;&#39;enabled:&#39;&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              w_str += &lt;span class=&quot;string&quot;&gt;&#39;enabled:        true\n&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              log.debug(&lt;span class=&quot;string&quot;&gt;&quot;Set value of enabled to true.&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;keyword&quot;&gt;elif&lt;/span&gt; line.startswith(&lt;span class=&quot;string&quot;&gt;&#39;enableSSLv3:&#39;&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              w_str += &lt;span class=&quot;string&quot;&gt;&#39;enableSSLv3:    true\n&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              log.debug(&lt;span class=&quot;string&quot;&gt;&quot;Set value of enableSSLv3 to true.&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; line:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                  w_str += line + &lt;span class=&quot;string&quot;&gt;&#39;\n&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;not&lt;/span&gt; isenableSSLv3:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           w_str += &lt;span class=&quot;string&quot;&gt;&#39;enableSSLv3:    true\n&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           log.debug(&lt;span class=&quot;string&quot;&gt;&quot;enableSSLv3 not in /etc/sfcb/sfcb.cfg.We should add enableSSLv3 in /etc/sfcb/sfcb.cfg&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       remote.WriteFile(&lt;span class=&quot;string&quot;&gt;&quot;/etc/sfcb/sfcb.cfg&quot;&lt;/span&gt;, w_str)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       rc, result = remote.ExecuteCmd(&lt;span class=&quot;string&quot;&gt;&quot;/etc/init.d/sfcbd-watchdog&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;start&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; rc != ReVal.PASSED:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          log.error(&lt;span class=&quot;string&quot;&gt;&quot;Restart /etc/init.d/sfcbd-watchdog failed. Error : %s&quot;&lt;/span&gt; % result)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;False&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;=========================================================================================&lt;br&gt;这个是最后提交的代码,并没有体现python文件读写,因为用了公司写好的现成的接口!!!待更新(从dashboard上扒一扒)&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言:&quot;&gt;&lt;/a&gt;前言:&lt;/h2&gt;&lt;p&gt;自从成为小杂碎之后,各种修改bug,这次要求的是check IODM的value值, check的是一个文件里面enabled和enableSSLv3的值, 刚开始我写了一个shell script,但是被各种批评,对于文件的操作python更有优势,其实我并不能苟同这样的观点,但是经过今天写了这段python的代码,发现python能用较少的代码实现,而且,可以避免调用shell脚本,这个过程更加easy一点.&lt;br&gt;
    
    </summary>
    
      <category term="Python" scheme="http://yoursite.com/categories/Python/"/>
    
      <category term="I/O" scheme="http://yoursite.com/categories/Python/I-O/"/>
    
    
      <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
      <category term="I/O" scheme="http://yoursite.com/tags/I-O/"/>
    
      <category term="实习生" scheme="http://yoursite.com/tags/%E5%AE%9E%E4%B9%A0%E7%94%9F/"/>
    
  </entry>
  
  <entry>
    <title>shell脚本进行文件读写操作(持续更新中...)</title>
    <link href="http://yoursite.com/2016/06/03/Shell/shell%20script/"/>
    <id>http://yoursite.com/2016/06/03/Shell/shell script/</id>
    <published>2016-06-03T11:59:59.000Z</published>
    <updated>2016-06-03T12:20:39.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;这是自己第一次写的可执行的shell脚本，不得不说，shell脚本是个好用的东西，在测试中，尤其是自动化测试中起着关键的作用，这段shell代码是上个月写的，也是测试IODM的时候，对于cfg文件的一个属性值得判断，虽然最后还是用Python代替了这一判断，但是我个人认为shell还是读取文件的一把好手！！！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;Problem&quot;&gt;&lt;a href=&quot;#Problem&quot; class=&quot;headerlink&quot; title=&quot;Problem&quot;&gt;&lt;/a&gt;Problem&lt;/h3&gt;&lt;p&gt;该脚本解决了从目标文件进行读写，修改指定值的问题。&lt;br&gt;基本上涉及了：shell脚本进行文件读写操作-&amp;gt;sed&lt;/p&gt;
&lt;h3 id=&quot;My-Solution：&quot;&gt;&lt;a href=&quot;#My-Solution：&quot; class=&quot;headerlink&quot; title=&quot;My Solution：&quot;&gt;&lt;/a&gt;My Solution：&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Shell Code:&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#!/bin/bash&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;isenableSSLv3=$(cat /etc/sfcb/sfcb.cfg | grep &lt;span class=&quot;string&quot;&gt;&quot;enableSSLv3&quot;&lt;/span&gt; | wc &lt;span class=&quot;_&quot;&gt;-l&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;lineNumber=$(cat /etc/sfcb/sfcb.cfg |wc &lt;span class=&quot;_&quot;&gt;-l&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;lineNumber is &lt;span class=&quot;variable&quot;&gt;$lineNumber&lt;/span&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;isenableSSLv3 is &lt;span class=&quot;variable&quot;&gt;$isenableSSLv3&lt;/span&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; [ &lt;span class=&quot;variable&quot;&gt;$isenableSSLv3&lt;/span&gt; &lt;span class=&quot;_&quot;&gt;-ne&lt;/span&gt; 0 ];&lt;span class=&quot;keyword&quot;&gt;then&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;enableSSLv3 has add&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;enableSSLv3 is not added,we should add it&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   sed &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$lineNumber&lt;/span&gt; aenableSSLv3:    true&quot;&lt;/span&gt; -i /etc/sfcb/sfcb.cfg&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;fi&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#check enabled and enableSSLv3 are true or not&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;enable&lt;/span&gt;SSLv3Value=$(cat /etc/sfcb/sfcb.cfg | grep &lt;span class=&quot;string&quot;&gt;&quot;enableSSLv3&quot;&lt;/span&gt; | awk &lt;span class=&quot;string&quot;&gt;&#39;&amp;#123;print $2&amp;#125;&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;enabledValue=$(cat /etc/sfcb/sfcb.cfg | grep &lt;span class=&quot;string&quot;&gt;&quot;enabled&quot;&lt;/span&gt; | awk &lt;span class=&quot;string&quot;&gt;&#39;&amp;#123;print $2&amp;#125;&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;enableSSLv3Value is &lt;span class=&quot;variable&quot;&gt;$enableSSLv3Value&lt;/span&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;enabledValue is &lt;span class=&quot;variable&quot;&gt;$enabledValue&lt;/span&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; [ &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$enabledValue&lt;/span&gt;&quot;&lt;/span&gt; == &lt;span class=&quot;string&quot;&gt;&quot;true&quot;&lt;/span&gt; ] &amp;amp;&amp;amp; [ &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$enableSSLv3Value&lt;/span&gt;&quot;&lt;/span&gt; == &lt;span class=&quot;string&quot;&gt;&quot;true&quot;&lt;/span&gt; ]; &lt;span class=&quot;keyword&quot;&gt;then&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;set value right&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;elif&lt;/span&gt; [ &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$enabledValue&lt;/span&gt;&quot;&lt;/span&gt; == &lt;span class=&quot;string&quot;&gt;&quot;false&quot;&lt;/span&gt; ]; &lt;span class=&quot;keyword&quot;&gt;then&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;enabled value is false,we change it to true&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sed -i &lt;span class=&quot;string&quot;&gt;&#39;s/enabled:        false/enabled:        true/g&#39;&lt;/span&gt; /etc/sfcb/sfcb.cfg&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;enableSSLv3 value is false,we change it to true&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sed -i &lt;span class=&quot;string&quot;&gt;&#39;s/enableSSLv3:    false/enableSSLv3:    true/g&#39;&lt;/span&gt; /etc/sfcb/sfcb.cfg&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;fi&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;sed&quot;&gt;&lt;a href=&quot;#sed&quot; class=&quot;headerlink&quot; title=&quot;sed&quot;&gt;&lt;/a&gt;sed&lt;/h3&gt;&lt;p&gt;sed是管道命令，是用shell进行文件读写的关键，待补充！！！&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;这是自己第一次写的可执行的shell脚本，不得不说，shell脚本是个好用的东西，在测试中，尤其是自动化测试中起着关键的作用，这段shell代码是上个月写的，也是测试IODM的时候，对于cfg文件的一个属性值得判断，虽然最后还是用Python代替了这一判断，但是我个人认为shell还是读取文件的一把好手！！！&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Shell" scheme="http://yoursite.com/categories/Shell/"/>
    
      <category term="Sed文件读写" scheme="http://yoursite.com/categories/Shell/Sed%E6%96%87%E4%BB%B6%E8%AF%BB%E5%86%99/"/>
    
    
      <category term="shell" scheme="http://yoursite.com/tags/shell/"/>
    
      <category term="if-else" scheme="http://yoursite.com/tags/if-else/"/>
    
  </entry>
  
  <entry>
    <title>leetcode:122--Best Time to Buy and Sell Stock II</title>
    <link href="http://yoursite.com/2016/06/01/leetcode/best-time-to-buy-and-sell-stock-ii/"/>
    <id>http://yoursite.com/2016/06/01/leetcode/best-time-to-buy-and-sell-stock-ii/</id>
    <published>2016-06-01T11:59:59.000Z</published>
    <updated>2016-06-13T13:28:14.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;题目描述：&lt;br&gt;Say you have an array for which the ith element is the price of a given stock on day i.&lt;/p&gt;
&lt;p&gt;Design an algorithm to find the maximum profit. You may complete as many transactions as you like (ie, buy one and sell one share of the stock multiple times). However, you may not engage in multiple transactions at the same time (ie, you must sell the stock before you buy again).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;My-Solution：&quot;&gt;&lt;a href=&quot;#My-Solution：&quot; class=&quot;headerlink&quot; title=&quot;My Solution：&quot;&gt;&lt;/a&gt;My Solution：&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;算法思想：&lt;/strong&gt;&lt;br&gt;最佳时间买入卖出股票：你有一个数组保存了股票在第i天的价钱，现在你可以进行多次买入卖出，但同一时间你手上只能保持一个股票，如何赚的最多。&lt;br&gt;贪心法，和第一道股票的题目不同之处在于可以多次买卖股票，从而累积赚取所有的价格差。因此使用贪心算法，基本思想是锁定一个低价，然后在价格升到局部最高点（下一天的价格就下降）的时候，抛出股票，然后把下一天价格较低的股票买入。&lt;br&gt;核心就是&lt;strong&gt;局部最优化&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Python Code:&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#贪心法：局部最优化&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Solution&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;maxProfit&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, prices)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        profit = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(len(prices) - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            profit += max(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, prices[i + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;] - prices[i])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; profit&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; __name__ == &lt;span class=&quot;string&quot;&gt;&#39;__main__&#39;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    result = Solution().maxProfit([&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;54&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;56&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(result)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;My-Problem&quot;&gt;&lt;a href=&quot;#My-Problem&quot; class=&quot;headerlink&quot; title=&quot;My Problem:&quot;&gt;&lt;/a&gt;My Problem:&lt;/h3&gt;&lt;p&gt;这里延伸一下贪心算法：&lt;a href=&quot;http://www.cnblogs.com/steven_oyj/archive/2010/05/22/1741375.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;参考链接&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;My-Answer&quot;&gt;&lt;a href=&quot;#My-Answer&quot; class=&quot;headerlink&quot; title=&quot;My Answer&quot;&gt;&lt;/a&gt;My Answer&lt;/h3&gt;&lt;p&gt;下一篇单独学一下贪心法。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;题目描述：&lt;br&gt;Say you have an array for which the ith element is the price of a given stock on day i.&lt;/p&gt;
&lt;p&gt;Design an algorithm to find the maximum profit. You may complete as many transactions as you like (ie, buy one and sell one share of the stock multiple times). However, you may not engage in multiple transactions at the same time (ie, you must sell the stock before you buy again).&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Python" scheme="http://yoursite.com/categories/Python/"/>
    
      <category term="leetcode" scheme="http://yoursite.com/categories/Python/leetcode/"/>
    
      <category term="Greedy" scheme="http://yoursite.com/categories/Python/leetcode/Greedy/"/>
    
    
      <category term="jobs" scheme="http://yoursite.com/tags/jobs/"/>
    
      <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
      <category term="leetcode" scheme="http://yoursite.com/tags/leetcode/"/>
    
      <category term="Greedy" scheme="http://yoursite.com/tags/Greedy/"/>
    
  </entry>
  
  <entry>
    <title>5月份计划</title>
    <link href="http://yoursite.com/2016/05/31/plan/5%E6%9C%88%E4%BB%BD%E8%AE%A1%E5%88%92/"/>
    <id>http://yoursite.com/2016/05/31/plan/5月份计划/</id>
    <published>2016-05-31T11:59:59.000Z</published>
    <updated>2016-06-03T12:06:56.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;Summary&lt;br&gt;五月份,还是觉得过得超级快,要完成的计划,差的还很远,看看那百分之0的进度条吧,MY GOD,时间都去哪里了…MD&lt;br&gt;虽然计划没有完成,也并非没有收获,开始测试NOVA case,学了些统计学知识.学了python的知识&lt;br&gt;在此,感谢丁丁耐心的给我写下了进度条应该怎么实现:）&lt;br&gt;希望自己能心无旁骛的过好自己的人生!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h4 id=&quot;学习计划&quot;&gt;&lt;a href=&quot;#学习计划&quot; class=&quot;headerlink&quot; title=&quot;学习计划:&quot;&gt;&lt;/a&gt;学习计划:&lt;/h4&gt;&lt;p&gt;1.leetcode上的&lt;del&gt;easy&lt;/del&gt;和medium难度的题目一定要刷完了!!!&lt;br&gt;easy:&lt;div class=&quot;process&quot; style=&quot;width:500px;height:20px;background:white;position:relative;border:1px solid black;&quot;&gt;&lt;div style=&quot;width:500px;height:20px;background:green;postion:absolute;top:0;left:0;z-index:1;&quot;&gt;&lt;span style=&quot;position:absolute;left:50%;top:0;z-index:2;color:black&quot;&gt;100%&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;br&gt;medium:&lt;div class=&quot;process&quot; style=&quot;width:500px;height:20px;background:white;position:relative;border:1px solid black;&quot;&gt;&lt;div style=&quot;width:15px;height:20px;background:green;postion:absolute;top:0;left:0;z-index:1;&quot;&gt;&lt;span style=&quot;position:absolute;left:50%;top:0;z-index:2;color:black&quot;&gt;3%&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;br&gt;2.开始准备雅思考试啦,每天背雅思单词,一定坚持下来!!! 每天可以看一下英语视频.&lt;br&gt;单词:&lt;div class=&quot;process&quot; style=&quot;width:500px;height:20px;background:white;position:relative;border:1px solid black;&quot;&gt;&lt;div style=&quot;width:250px;height:20px;background:green;postion:absolute;top:0;left:0;z-index:1;&quot;&gt;&lt;span style=&quot;position:absolute;left:50%;top:0;z-index:2;&quot;&gt;50%&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;br&gt;视频:&lt;div class=&quot;process&quot; style=&quot;width:500px;height:20px;background:white;position:relative;border:1px solid black;&quot;&gt;&lt;div style=&quot;width:0px;height:20px;background:green;postion:absolute;top:0;left:0;z-index:1;&quot;&gt;&lt;span style=&quot;position:absolute;left:50%;top:0;z-index:2;&quot;&gt;0%&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;br&gt;3.Python和java的基本知识要完善,基本的数据结构要过一遍.(java看java编程思想,python工作中完善)  &lt;/p&gt;
&lt;div class=&quot;process&quot; style=&quot;width:500px;height:20px;background:white;position:relative;border:1px solid black;&quot;&gt;&lt;div style=&quot;width:0px;height:20px;background:green;postion:absolute;top:0;left:0;z-index:1;&quot;&gt;&lt;span style=&quot;position:absolute;left:50%;top:0;z-index:2;&quot;&gt;0%&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;br&gt;4.这个月每天晚上看1-2节的机器学习,白天补充一下统计学的知识.一定把台大的那门课给看完!!!&lt;br&gt;台大视频课:&lt;div class=&quot;process&quot; style=&quot;width:500px;height:20px;background:white;position:relative;border:1px solid black;&quot;&gt;&lt;div style=&quot;width:0px;height:20px;background:green;postion:absolute;top:0;left:0;z-index:1;&quot;&gt;&lt;span style=&quot;position:absolute;left:50%;top:0;z-index:2;&quot;&gt;0%&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;br&gt;统计学基础:&lt;div class=&quot;process&quot; style=&quot;width:500px;height:20px;background:white;position:relative;border:1px solid black;&quot;&gt;&lt;div style=&quot;width:50px;height:20px;background:green;postion:absolute;top:0;left:0;z-index:1;&quot;&gt;&lt;span style=&quot;position:absolute;left:50%;top:0;z-index:2;&quot;&gt;10%&lt;/span&gt;&lt;/div&gt;&lt;/div&gt; 


&lt;h4 id=&quot;阅读计划&quot;&gt;&lt;a href=&quot;#阅读计划&quot; class=&quot;headerlink&quot; title=&quot;阅读计划:&quot;&gt;&lt;/a&gt;阅读计划:&lt;/h4&gt;&lt;p&gt;1.技术类:统计学基础电子版&lt;br&gt;2.小说类:百年孤独  &lt;/p&gt;
&lt;h4 id=&quot;娱乐计划&quot;&gt;&lt;a href=&quot;#娱乐计划&quot; class=&quot;headerlink&quot; title=&quot;娱乐计划:&quot;&gt;&lt;/a&gt;娱乐计划:&lt;/h4&gt;&lt;p&gt;1.单反上的照片的归纳整理,打印出来几张好的照片,在网上做成明信片.(已经整理好,纠结于选择什么材质)&lt;br&gt;&lt;del&gt;2.有时间的话把欢乐颂追完,没时间的话再说吧(弃剧,原因是觉得20集的电视剧非得演成42集,啰嗦)&lt;/del&gt;&lt;br&gt;&lt;del&gt;3.约小伙伴出来次饭.(小伙伴顺利找到工作,可喜可贺~)&lt;/del&gt;  &lt;/p&gt;
&lt;h4 id=&quot;财务计划&quot;&gt;&lt;a href=&quot;#财务计划&quot; class=&quot;headerlink&quot; title=&quot;财务计划:&quot;&gt;&lt;/a&gt;财务计划:&lt;/h4&gt;&lt;p&gt;&lt;del&gt;不能再拖啦 把存折上的钱转到银行卡!!!再整到支付宝上!!!!(已经搞定!遇到了营业厅超级有耐心的小帅哥帮我消了之前网银)&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;刚巴爹!!!&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;Summary&lt;br&gt;五月份,还是觉得过得超级快,要完成的计划,差的还很远,看看那百分之0的进度条吧,MY GOD,时间都去哪里了…MD&lt;br&gt;虽然计划没有完成,也并非没有收获,开始测试NOVA case,学了些统计学知识.学了python的知识&lt;br&gt;在此,感谢丁丁耐心的给我写下了进度条应该怎么实现:）&lt;br&gt;希望自己能心无旁骛的过好自己的人生!&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="计划" scheme="http://yoursite.com/categories/%E8%AE%A1%E5%88%92/"/>
    
    
      <category term="plan" scheme="http://yoursite.com/tags/plan/"/>
    
  </entry>
  
  <entry>
    <title>XML语言（转载整理）</title>
    <link href="http://yoursite.com/2016/05/24/Python/5-24-Python%20%E5%AE%9E%E7%8E%B0%E8%A7%A3%E6%9E%90XML/"/>
    <id>http://yoursite.com/2016/05/24/Python/5-24-Python 实现解析XML/</id>
    <published>2016-05-24T11:59:59.000Z</published>
    <updated>2016-05-24T14:18:49.000Z</updated>
    
    <content type="html">&lt;p&gt;原文链接：&lt;a href=&quot;http://codingpy.com/article/parsing-xml-using-python/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;深入解读Python解析XML的几种方式&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;什么是XML?&lt;br&gt;XML -&amp;gt; Extensible Markup Language 可扩展标记语言  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;XML特点：&quot;&gt;&lt;a href=&quot;#XML特点：&quot; class=&quot;headerlink&quot; title=&quot;XML特点：&quot;&gt;&lt;/a&gt;XML特点：&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;设计宗旨：&lt;strong&gt;传输数据&lt;/strong&gt;，而非显示数据&lt;/li&gt;
&lt;li&gt;标签没有被预定义，需要自定义标签&lt;/li&gt;
&lt;li&gt;被设计为具有自我描述性&lt;/li&gt;
&lt;li&gt;W3C的推荐标准&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;XML是各种应用程序之间进行数据传输的最常用的工具  &lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xskaf.com1.z0.glb.clouddn.com/XML.jpg&quot; alt=&quot;XML&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;Python解析XML包&quot;&gt;&lt;a href=&quot;#Python解析XML包&quot; class=&quot;headerlink&quot; title=&quot;Python解析XML包&quot;&gt;&lt;/a&gt;Python解析XML包&lt;/h3&gt;&lt;h4 id=&quot;1-xml-dom&quot;&gt;&lt;a href=&quot;#1-xml-dom&quot; class=&quot;headerlink&quot; title=&quot;1.xml.dom&quot;&gt;&lt;/a&gt;1.xml.dom&lt;/h4&gt;&lt;p&gt;这个就是之前学爬虫的时候学的dom树(用dom解析器)。&lt;br&gt;&lt;img src=&quot;http://7xskaf.com1.z0.glb.clouddn.com/domtree.jpg&quot; alt=&quot;dom树&quot;&gt;&lt;br&gt;DOM解析器在任何处理开始之前，必须把基于XML文件生成的树状数据放在内存(一次性将整个dom树放进去)，所以&lt;strong&gt;DOM解析器的内存使用量完全根据输入资料的大小&lt;/strong&gt;。&lt;/p&gt;
&lt;h4 id=&quot;2-ElementTree&quot;&gt;&lt;a href=&quot;#2-ElementTree&quot; class=&quot;headerlink&quot; title=&quot;2.ElementTree&quot;&gt;&lt;/a&gt;2.ElementTree&lt;/h4&gt;&lt;p&gt;这个是主要用的！！！&lt;br&gt;&lt;img src=&quot;http://7xskaf.com1.z0.glb.clouddn.com/ET.gif&quot; alt=&quot;ET&quot;&gt;  &lt;/p&gt;
&lt;p&gt;xml.etree.ElementTree模块提供了一个轻量级、Pythonic的API，同时还有一个高效的C语言实现，即xml.etree.cElementTree。&lt;strong&gt;与DOM相比，&lt;/strong&gt;ET的速度更快，API使用更直接、方便。&lt;strong&gt;与SAX相比，&lt;/strong&gt;ET.iterparse函数同样提供了  &lt;strong&gt;按需解析的功能&lt;/strong&gt;，不会一次性在内存中读入整个文档。ET的性能与SAX模块大致相仿，&lt;strong&gt;但是它的API更加高层次，用户使用起来更加便捷。&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&quot;利用ElementTree解析XML&quot;&gt;&lt;a href=&quot;#利用ElementTree解析XML&quot; class=&quot;headerlink&quot; title=&quot;利用ElementTree解析XML&quot;&gt;&lt;/a&gt;利用ElementTree解析XML&lt;/h3&gt;&lt;p&gt;Python标准库中，提供了ET的两种实现。&lt;strong&gt;一个是&lt;/strong&gt;纯Python实现的xml.etree.ElementTree，&lt;strong&gt;另一个是&lt;/strong&gt;速度更快的C语言实现xml.etree.cElementTree。请记住始终使用C语言实现，因为它的速度要快很多，而且内存消耗也要少很多。如果你所使用的Python版本中没有cElementTree所需的加速模块，你可以这样导入模块：  &lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;Python&quot;&gt;
&lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt;:
    &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; xml.etree.cElementTree &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; ET
&lt;span class=&quot;keyword&quot;&gt;except&lt;/span&gt; ImportError:
    &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; xml.etree.ElementTree &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; ET
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;如果某个API存在不同的实现，上面是常见的导入方式。当然，很可能你直接导入第一个模块时，并不会出现问题。请注意&lt;strong&gt;，自Python 3.3之后，就不用采用上面的导入方法，因为ElemenTree模块会自动优先使用C加速器，如果不存在C实现，则会使用Python实现。&lt;/strong&gt;因此，使用Python 3.3+的朋友，只需要import xml.etree.ElementTree即可。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;原文链接：&lt;a href=&quot;http://codingpy.com/article/parsing-xml-using-python/&quot;&gt;深入解读Python解析XML的几种方式&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;什么是XML?&lt;br&gt;XML -&amp;gt; Extensible Markup Language 可扩展标记语言  &lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Python" scheme="http://yoursite.com/categories/Python/"/>
    
      <category term="XML" scheme="http://yoursite.com/categories/Python/XML/"/>
    
    
      <category term="jobs" scheme="http://yoursite.com/tags/jobs/"/>
    
      <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
      <category term="XML" scheme="http://yoursite.com/tags/XML/"/>
    
  </entry>
  
  <entry>
    <title>linux下的挂载命令</title>
    <link href="http://yoursite.com/2016/05/18/vmware/work-bugzilla/"/>
    <id>http://yoursite.com/2016/05/18/vmware/work-bugzilla/</id>
    <published>2016-05-18T11:59:59.000Z</published>
    <updated>2016-05-18T12:05:26.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;最近呢，嗨得很，工作忙成狗了，几乎没有办法刷题and看统计学，忙归忙，但始终是学到了很多东西，在加入NOVA这个team之后，基本上刷新了我对vmware所有产品的认知，&lt;strong&gt;vsphere client？VMware Horizion Client？VMware vSphere PowerCLI？vCenter？&lt;/strong&gt;之前不了解的这些，现在也是有入门级的水平了，感叹vmware这个公司还是挺强悍的，技术上绝对top，能学的东西太多太多。&lt;br&gt;今天写一下工作中上传size&amp;gt;10M的文件到bugzilla的方法！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;开bug的时候就要new bug，在NOVA team要求bug有的信息包括：&lt;/p&gt;
&lt;p&gt;Report a bug:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Screehshots&lt;/li&gt;
&lt;li&gt;vm-support&lt;/li&gt;
&lt;li&gt;/var/log/weasel.log&lt;/li&gt;
&lt;li&gt;localcli storage core adapter list&lt;/li&gt;
&lt;li&gt;localcli network nic list&lt;/li&gt;
&lt;li&gt;localcli device driver list&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;干货&quot;&gt;&lt;a href=&quot;#干货&quot; class=&quot;headerlink&quot; title=&quot;干货&quot;&gt;&lt;/a&gt;干货&lt;/h3&gt;&lt;p&gt;其中最重要的就属vm-support这个环境的collect了，但是attachment size要小于10M，这玩意儿大于10M。我们就要通过手动的方式上传，how to do this？  &lt;/p&gt;
&lt;p&gt;贴心的bugzilla team 给了我们一些 reference：&lt;br&gt;&lt;a href=&quot;https://wiki.eng.vmware.com/RDDevTools/Bugzilla/UsersGuide#About_Attachments&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Bugzilla User Guide&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;All Bugzilla attachments are stored on three shares: bugs.eng.vmware.com:/bugs, bugs-archive.eng.vmware.com:/bugs-archive, and bugs-archive2.eng.vmware.com:/bugs-archive2 . Everyone has r/w access to /bugs and r/o access to the archives. Attachments can be uploaded to /bugs by:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;The edit bug form in Bugzilla’s web interface (has 10M and/or 4 file limit)&lt;/li&gt;
&lt;li&gt;CIFS mount (map “\bugs.eng.vmware.com\bugs” as a network drive in windows) (no file size limitation)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;NFS mount (automount or manual mount) of bugs.eng.vmware.com:/bugs (automount mounts it on /mts/bugs) from linux (no file size limitation)&lt;/strong&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;   Our automation takes care of migrating attachments from the ‘active’ location to the appropriate ‘archival’ location. Once content has been uploaded, the files are copied to the archival location as soon as possible (usually within 1 week) to protect against accidental deletion. The ‘active’ filer uses faster hardware for high-performance hosting of content attached to open or recently resolved bugs. During a bug’s lifecycle, the files should be present on both the active and one of the archival locations. Once a bug has been closed a week or resolved for 3 months, the copy on the active mount is deleted and only the archival copy remains. All files (that should be compressed) are compressed on both the active and archival location when they are initially copied from the active to the archive.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;用的是NFS挂载的方式，应为是tree的结构，我们从bugs.eng.vmware.com把bugs文件挂载到launcher上，launcher就是自己的linux。  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在launcher上创建/mts/bugs用来挂载file。  &lt;/li&gt;
&lt;li&gt;command：&lt;code&gt;mount bugs.eng.vmware.com:/bugs /mts/bugs&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;这时候bugs下就有files了，bug号默认是8位的，现在我们用到了七位 cd files/0/…../到了这下面，你就可以看到其他的attachment了  &lt;/li&gt;
&lt;li&gt;恭喜恭喜，你把vm-support cp到这个文件夹下就好啦~  &lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;推荐&quot;&gt;&lt;a href=&quot;#推荐&quot; class=&quot;headerlink&quot; title=&quot;推荐&quot;&gt;&lt;/a&gt;推荐&lt;/h3&gt;&lt;p&gt;再仔细的学一下linux命令吧~&lt;/p&gt;
&lt;h3 id=&quot;内心os&quot;&gt;&lt;a href=&quot;#内心os&quot; class=&quot;headerlink&quot; title=&quot;内心os&quot;&gt;&lt;/a&gt;内心os&lt;/h3&gt;&lt;p&gt;今天team的另一个实习生妹子，一直不停的问我，心中万匹草泥马奔腾，不会自己去学啊，我特么也是一个字一个字的看文档的…真心希望自学能力能稍微好一下，不懂就问是好，但是不要不懂不查就问，真的显得人好白痴~&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;最近呢，嗨得很，工作忙成狗了，几乎没有办法刷题and看统计学，忙归忙，但始终是学到了很多东西，在加入NOVA这个team之后，基本上刷新了我对vmware所有产品的认知，&lt;strong&gt;vsphere client？VMware Horizion Client？VMware vSphere PowerCLI？vCenter？&lt;/strong&gt;之前不了解的这些，现在也是有入门级的水平了，感叹vmware这个公司还是挺强悍的，技术上绝对top，能学的东西太多太多。&lt;br&gt;今天写一下工作中上传size&amp;gt;10M的文件到bugzilla的方法！&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="工作" scheme="http://yoursite.com/categories/%E5%B7%A5%E4%BD%9C/"/>
    
      <category term="bugzilla" scheme="http://yoursite.com/categories/%E5%B7%A5%E4%BD%9C/bugzilla/"/>
    
    
      <category term="jobs" scheme="http://yoursite.com/tags/jobs/"/>
    
      <category term="linux" scheme="http://yoursite.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>泛化能力(5.17号读书笔记)</title>
    <link href="http://yoursite.com/2016/05/17/statistics/statistics-05/"/>
    <id>http://yoursite.com/2016/05/17/statistics/statistics-05/</id>
    <published>2016-05-17T11:59:59.000Z</published>
    <updated>2016-05-17T15:25:12.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;泛化误差&quot;&gt;&lt;a href=&quot;#泛化误差&quot; class=&quot;headerlink&quot; title=&quot;泛化误差&quot;&gt;&lt;/a&gt;泛化误差&lt;/h3&gt;&lt;h4 id=&quot;泛化能力定义&quot;&gt;&lt;a href=&quot;#泛化能力定义&quot; class=&quot;headerlink&quot; title=&quot;泛化能力定义:&quot;&gt;&lt;/a&gt;泛化能力定义:&lt;/h4&gt;&lt;p&gt;简言之,泛化能力就是对学习方法泛化能力的分析.  &lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt; &lt;img src=&quot;http://7xskaf.com1.z0.glb.clouddn.com/5.17generalization%20ability.png&quot; alt=&quot;泛化能力&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;泛化误差的定义&quot;&gt;&lt;a href=&quot;#泛化误差的定义&quot; class=&quot;headerlink&quot; title=&quot;泛化误差的定义:&quot;&gt;&lt;/a&gt;泛化误差的定义:&lt;/h4&gt;&lt;p&gt;泛化误差:如果学到的模型是f,那么用这个模型对未知数据预测的误差即为&lt;strong&gt;泛化误差(学习到模型的期望风险)&lt;/strong&gt;.&lt;br&gt; &lt;img src=&quot;http://7xskaf.com1.z0.glb.clouddn.com/5.17%E6%B3%9B%E5%8C%96%E8%AF%AF%E5%B7%AE.png&quot; alt=&quot;泛化误差&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;泛化误差上界&quot;&gt;&lt;a href=&quot;#泛化误差上界&quot; class=&quot;headerlink&quot; title=&quot;泛化误差上界&quot;&gt;&lt;/a&gt;泛化误差上界&lt;/h4&gt;&lt;p&gt;学习方法的泛化能力分析通过研究泛化误差的概率上界进行的.&lt;br&gt;首先通过training data得到假设空间F(f的集合),然后从F中选取f,得到f的期望风险(我们期望的不能直接得到)和经验风险(根据给定的训练集得到的):&lt;br&gt;&lt;img src=&quot;http://7xskaf.com1.z0.glb.clouddn.com/5.17f.png&quot; alt=&quot;期望风险和经验风险&quot;&gt;&lt;br&gt;然后找到经验风险最小化函数f(n),我们关心的就是f(n)的泛化能力.&lt;br&gt;&lt;img src=&quot;http://7xskaf.com1.z0.glb.clouddn.com/5.17fn%E7%9A%84%E6%9C%9F%E6%9C%9B.png&quot; alt=&quot;f(n)的期望&quot;&gt;   &lt;/p&gt;
&lt;h5 id=&quot;泛化误差上界定义&quot;&gt;&lt;a href=&quot;#泛化误差上界定义&quot; class=&quot;headerlink&quot; title=&quot;泛化误差上界定义:&quot;&gt;&lt;/a&gt;泛化误差上界定义:&lt;/h5&gt;&lt;p&gt;&lt;img src=&quot;http://7xskaf.com1.z0.glb.clouddn.com/5.17%E6%B3%9B%E5%8C%96%E8%AF%AF%E5%B7%AE%E4%B8%8A%E7%95%8C.png&quot; alt=&quot;泛化误差上界&quot;&gt;  &lt;/p&gt;
&lt;p&gt;泛化误差与训练误差有关,训练误差越大泛化误差越大.  &lt;/p&gt;
&lt;h5 id=&quot;My-Problem&quot;&gt;&lt;a href=&quot;#My-Problem&quot; class=&quot;headerlink&quot; title=&quot;My Problem:&quot;&gt;&lt;/a&gt;My Problem:&lt;/h5&gt;&lt;p&gt;测试误差呢?不是说测试误差是衡量预测能力的更好的吗?  &lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;泛化误差&quot;&gt;&lt;a href=&quot;#泛化误差&quot; class=&quot;headerlink&quot; title=&quot;泛化误差&quot;&gt;&lt;/a&gt;泛化误差&lt;/h3&gt;&lt;h4 id=&quot;泛化能力定义&quot;&gt;&lt;a href=&quot;#泛化能力定义&quot; class=&quot;headerlink&quot; title=&quot;泛化能力定义:&quot;&gt;&lt;/a&gt;泛化能力定义:&lt;/h4&gt;&lt;p&gt;简言之,泛化能力就是对学习方法泛化能力的分析.  &lt;/p&gt;
    
    </summary>
    
      <category term="机器学习" scheme="http://yoursite.com/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="统计学学习方法" scheme="http://yoursite.com/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E7%BB%9F%E8%AE%A1%E5%AD%A6%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95/"/>
    
    
      <category term="read" scheme="http://yoursite.com/tags/read/"/>
    
      <category term="机器学习" scheme="http://yoursite.com/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="统计学学习方法" scheme="http://yoursite.com/tags/%E7%BB%9F%E8%AE%A1%E5%AD%A6%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>NOVA测试中ILO问题解决</title>
    <link href="http://yoursite.com/2016/05/11/vmware/ILO%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/"/>
    <id>http://yoursite.com/2016/05/11/vmware/ILO问题解决/</id>
    <published>2016-05-11T11:59:59.000Z</published>
    <updated>2016-05-24T14:21:26.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;前言：NOVA是vmware为了应付德国官司开发的本地的native driver。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;对于prme-hwe-drv-stor-016这个老旧 driver，从打开ILO开始遇到了很多的问题。  &lt;/p&gt;
&lt;h4 id=&quot;1）重启ILO&quot;&gt;&lt;a href=&quot;#1）重启ILO&quot; class=&quot;headerlink&quot; title=&quot;1）重启ILO&quot;&gt;&lt;/a&gt;1）重启ILO&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;Q:&lt;/strong&gt;打不开ilo地址？&lt;br&gt;&lt;strong&gt;A:&lt;/strong&gt;ilo地址挂了，要reset一下ilo，方法是：  &lt;code&gt;ssh username@prme-hwe-drv-stor-016-ilo  -&amp;gt; help  -&amp;gt;resetsp&lt;/code&gt;等待重启  &lt;/p&gt;
&lt;h4 id=&quot;2）remote-console&quot;&gt;&lt;a href=&quot;#2）remote-console&quot; class=&quot;headerlink&quot; title=&quot;2）remote console&quot;&gt;&lt;/a&gt;2）remote console&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;Q:&lt;/strong&gt;打不开remote console?&lt;br&gt;&lt;strong&gt;A:&lt;/strong&gt;  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1）检查java。   &lt;/li&gt;
&lt;li&gt;2）ping prme-hwe-drv-stor-016 (may be 这里是ping XXXXXX-ilo?)  &lt;/li&gt;
&lt;li&gt;3）如果能ping 通，获得ip地址，通过ip地址打开ilo。    &lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;3）reboot&quot;&gt;&lt;a href=&quot;#3）reboot&quot; class=&quot;headerlink&quot; title=&quot;3）reboot&quot;&gt;&lt;/a&gt;3）reboot&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;Q:&lt;/strong&gt;reboot之后，起不来esxi？&lt;br&gt;&lt;strong&gt;A:&lt;/strong&gt;F12–&amp;gt;BOOT Manager选项–&amp;gt;add boot–&amp;gt;boot from file –&amp;gt;找到esxi-scsi开头的文件，这个文件就是我装在local disk上的系统。然后选一个貌似是x86_64结尾的东东？    &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Summary:&lt;/strong&gt;根据近日的装系统,装好的系统起不来,一定是因为,boot的选项不对,050这台机器,按F2进入boot选项,然后对boot first选项进行修改.  &lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;前言：NOVA是vmware为了应付德国官司开发的本地的native driver。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="工作" scheme="http://yoursite.com/categories/%E5%B7%A5%E4%BD%9C/"/>
    
      <category term="ilo" scheme="http://yoursite.com/categories/%E5%B7%A5%E4%BD%9C/ilo/"/>
    
    
      <category term="vmware" scheme="http://yoursite.com/tags/vmware/"/>
    
      <category term="NOVA" scheme="http://yoursite.com/tags/NOVA/"/>
    
  </entry>
  
  <entry>
    <title>模型选择:正则化与交叉验证(5.10号读书笔记)</title>
    <link href="http://yoursite.com/2016/05/10/statistics/statistics-04/"/>
    <id>http://yoursite.com/2016/05/10/statistics/statistics-04/</id>
    <published>2016-05-10T11:59:59.000Z</published>
    <updated>2016-05-10T14:47:05.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;正则化-结构风险最小化&quot;&gt;&lt;a href=&quot;#正则化-结构风险最小化&quot; class=&quot;headerlink&quot; title=&quot;正则化(结构风险最小化)&quot;&gt;&lt;/a&gt;正则化(结构风险最小化)&lt;/h3&gt;&lt;h4 id=&quot;定义&quot;&gt;&lt;a href=&quot;#定义&quot; class=&quot;headerlink&quot; title=&quot;定义&quot;&gt;&lt;/a&gt;定义&lt;/h4&gt;&lt;p&gt;结构风险最小化策略的实现,是在经验风险上加一个正则化项或罚项.正则化项一般是模型复杂度的单调递增函数,模型越复杂,正则化值越大.&lt;br&gt;&lt;img src=&quot;http://7xskaf.com1.z0.glb.clouddn.com/%E6%AD%A3%E5%88%99%E5%8C%96%E5%BD%A2%E5%BC%8F.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;公式项含义&quot;&gt;&lt;a href=&quot;#公式项含义&quot; class=&quot;headerlink&quot; title=&quot;公式项含义&quot;&gt;&lt;/a&gt;公式项含义&lt;/h4&gt;&lt;p&gt;第一项是经验风险,第二项是正则化项,拉姆达&amp;gt;=0调整两者之间的关系系数.&lt;br&gt;第一项的经验风险比较小的模型可能比较复杂,这时第二项的模型复杂度会较大,&lt;strong&gt;正则化的作用&lt;/strong&gt;是选择经验风险与模型复杂度同时较小的模型.&lt;/p&gt;
&lt;h3 id=&quot;交叉验证&quot;&gt;&lt;a href=&quot;#交叉验证&quot; class=&quot;headerlink&quot; title=&quot;交叉验证&quot;&gt;&lt;/a&gt;交叉验证&lt;/h3&gt;&lt;h4 id=&quot;选择交叉验证的情况&quot;&gt;&lt;a href=&quot;#选择交叉验证的情况&quot; class=&quot;headerlink&quot; title=&quot;选择交叉验证的情况&quot;&gt;&lt;/a&gt;选择交叉验证的情况&lt;/h4&gt;&lt;p&gt;给定的样本数据充足时,数据随机切分为训练集(用于训练模型),验证集(用于模型选择),测试集(学习方法评估)&lt;br&gt;不充足时常发生,这时可以&lt;strong&gt;选择交叉验证&lt;/strong&gt;  &lt;/p&gt;
&lt;h4 id=&quot;基本思想&quot;&gt;&lt;a href=&quot;#基本思想&quot; class=&quot;headerlink&quot; title=&quot;基本思想&quot;&gt;&lt;/a&gt;基本思想&lt;/h4&gt;&lt;p&gt;重复的使用数据:把给定的数据切分,将切分的数据集组合为&lt;strong&gt;训练集&lt;/strong&gt;和&lt;strong&gt;测试集&lt;/strong&gt;,在此基础上,反复训练,测试以及模型选择.  &lt;/p&gt;
&lt;h4 id=&quot;1-简单交叉验证&quot;&gt;&lt;a href=&quot;#1-简单交叉验证&quot; class=&quot;headerlink&quot; title=&quot;1.简单交叉验证&quot;&gt;&lt;/a&gt;1.简单交叉验证&lt;/h4&gt;&lt;p&gt;&lt;img src=&quot;http://7xskaf.com1.z0.glb.clouddn.com/%E7%AE%80%E5%8D%95%E4%BA%A4%E5%8F%89%E9%AA%8C%E8%AF%81.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;2-s折交叉验证&quot;&gt;&lt;a href=&quot;#2-s折交叉验证&quot; class=&quot;headerlink&quot; title=&quot;2.s折交叉验证&quot;&gt;&lt;/a&gt;2.s折交叉验证&lt;/h4&gt;&lt;p&gt;&lt;img src=&quot;http://7xskaf.com1.z0.glb.clouddn.com/s%E6%8A%98%E4%BA%A4%E5%8F%89%E9%AA%8C%E8%AF%81.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;3-留一交叉验证&quot;&gt;&lt;a href=&quot;#3-留一交叉验证&quot; class=&quot;headerlink&quot; title=&quot;3.留一交叉验证&quot;&gt;&lt;/a&gt;3.留一交叉验证&lt;/h4&gt;&lt;p&gt;&lt;img src=&quot;http://7xskaf.com1.z0.glb.clouddn.com/%E7%95%99%E4%B8%80%E4%BA%A4%E5%8F%89%E9%AA%8C%E8%AF%81.png&quot; alt=&quot;&quot;&gt;  &lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;正则化-结构风险最小化&quot;&gt;&lt;a href=&quot;#正则化-结构风险最小化&quot; class=&quot;headerlink&quot; title=&quot;正则化(结构风险最小化)&quot;&gt;&lt;/a&gt;正则化(结构风险最小化)&lt;/h3&gt;&lt;h4 id=&quot;定义&quot;&gt;&lt;a href=&quot;#定义&quot; class=&quot;he
    
    </summary>
    
      <category term="机器学习" scheme="http://yoursite.com/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="统计学学习方法" scheme="http://yoursite.com/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E7%BB%9F%E8%AE%A1%E5%AD%A6%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95/"/>
    
    
      <category term="read" scheme="http://yoursite.com/tags/read/"/>
    
      <category term="机器学习" scheme="http://yoursite.com/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="统计学学习方法" scheme="http://yoursite.com/tags/%E7%BB%9F%E8%AE%A1%E5%AD%A6%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95/"/>
    
  </entry>
  
</feed>
