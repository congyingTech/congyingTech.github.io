<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>MohnTech</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2016-05-24T16:22:00.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Mohn</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>5月份计划</title>
    <link href="http://yoursite.com/2016/05/25/plan/5%E6%9C%88%E4%BB%BD%E8%AE%A1%E5%88%92/"/>
    <id>http://yoursite.com/2016/05/25/plan/5月份计划/</id>
    <published>2016-05-24T16:22:53.507Z</published>
    <updated>2016-05-24T16:22:00.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;Summary&lt;br&gt;五月份,还是觉得过得超级快,要完成的计划,差的还很远,看看那百分之0的进度条吧,MY GOD,时间都去哪里了…MD&lt;br&gt;虽然计划没有完成,也并非没有收获,开始测试NOVA case,学了些统计学知识.学了python的知识&lt;br&gt;在此,感谢丁丁耐心的给我写下了进度条应该怎么实现:）&lt;br&gt;希望自己能心无旁骛的过好自己的人生!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h4 id=&quot;学习计划&quot;&gt;&lt;a href=&quot;#学习计划&quot; class=&quot;headerlink&quot; title=&quot;学习计划:&quot;&gt;&lt;/a&gt;学习计划:&lt;/h4&gt;&lt;p&gt;1.leetcode上的&lt;del&gt;easy&lt;/del&gt;和medium难度的题目一定要刷完了!!!&lt;br&gt;easy:&lt;div class=&quot;process&quot; style=&quot;width:500px;height:20px;background:white;position:relative;border:1px solid black;&quot;&gt;&lt;div style=&quot;width:500px;height:20px;background:green;postion:absolute;top:0;left:0;z-index:1;&quot;&gt;&lt;span style=&quot;position:absolute;left:50%;top:0;z-index:2;color:black&quot;&gt;100%&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;br&gt;medium:&lt;div class=&quot;process&quot; style=&quot;width:500px;height:20px;background:white;position:relative;border:1px solid black;&quot;&gt;&lt;div style=&quot;width:15px;height:20px;background:green;postion:absolute;top:0;left:0;z-index:1;&quot;&gt;&lt;span style=&quot;position:absolute;left:50%;top:0;z-index:2;color:black&quot;&gt;3%&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;br&gt;2.开始准备雅思考试啦,每天背雅思单词,一定坚持下来!!! 每天可以看一下英语视频.&lt;br&gt;单词:&lt;div class=&quot;process&quot; style=&quot;width:500px;height:20px;background:white;position:relative;border:1px solid black;&quot;&gt;&lt;div style=&quot;width:250px;height:20px;background:green;postion:absolute;top:0;left:0;z-index:1;&quot;&gt;&lt;span style=&quot;position:absolute;left:50%;top:0;z-index:2;&quot;&gt;50%&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;br&gt;视频:&lt;div class=&quot;process&quot; style=&quot;width:500px;height:20px;background:white;position:relative;border:1px solid black;&quot;&gt;&lt;div style=&quot;width:0px;height:20px;background:green;postion:absolute;top:0;left:0;z-index:1;&quot;&gt;&lt;span style=&quot;position:absolute;left:50%;top:0;z-index:2;&quot;&gt;0%&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;br&gt;3.Python和java的基本知识要完善,基本的数据结构要过一遍.(java看java编程思想,python工作中完善)  &lt;/p&gt;
&lt;div class=&quot;process&quot; style=&quot;width:500px;height:20px;background:white;position:relative;border:1px solid black;&quot;&gt;&lt;div style=&quot;width:0px;height:20px;background:green;postion:absolute;top:0;left:0;z-index:1;&quot;&gt;&lt;span style=&quot;position:absolute;left:50%;top:0;z-index:2;&quot;&gt;0%&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;br&gt;4.这个月每天晚上看1-2节的机器学习,白天补充一下统计学的知识.一定把台大的那门课给看完!!!&lt;br&gt;台大视频课:&lt;div class=&quot;process&quot; style=&quot;width:500px;height:20px;background:white;position:relative;border:1px solid black;&quot;&gt;&lt;div style=&quot;width:0px;height:20px;background:green;postion:absolute;top:0;left:0;z-index:1;&quot;&gt;&lt;span style=&quot;position:absolute;left:50%;top:0;z-index:2;&quot;&gt;0%&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;br&gt;统计学基础:&lt;div class=&quot;process&quot; style=&quot;width:500px;height:20px;background:white;position:relative;border:1px solid black;&quot;&gt;&lt;div style=&quot;width:50px;height:20px;background:green;postion:absolute;top:0;left:0;z-index:1;&quot;&gt;&lt;span style=&quot;position:absolute;left:50%;top:0;z-index:2;&quot;&gt;10%&lt;/span&gt;&lt;/div&gt;&lt;/div&gt; 


&lt;h4 id=&quot;阅读计划&quot;&gt;&lt;a href=&quot;#阅读计划&quot; class=&quot;headerlink&quot; title=&quot;阅读计划:&quot;&gt;&lt;/a&gt;阅读计划:&lt;/h4&gt;&lt;p&gt;1.技术类:统计学基础电子版&lt;br&gt;2.小说类:百年孤独  &lt;/p&gt;
&lt;h4 id=&quot;娱乐计划&quot;&gt;&lt;a href=&quot;#娱乐计划&quot; class=&quot;headerlink&quot; title=&quot;娱乐计划:&quot;&gt;&lt;/a&gt;娱乐计划:&lt;/h4&gt;&lt;p&gt;1.单反上的照片的归纳整理,打印出来几张好的照片,在网上做成明信片.(已经整理好,纠结于选择什么材质)&lt;br&gt;&lt;del&gt;2.有时间的话把欢乐颂追完,没时间的话再说吧(弃剧,原因是觉得20集的电视剧非得演成42集,啰嗦)&lt;/del&gt;&lt;br&gt;&lt;del&gt;3.约小伙伴出来次饭.(小伙伴顺利找到工作,可喜可贺~)&lt;/del&gt;  &lt;/p&gt;
&lt;h4 id=&quot;财务计划&quot;&gt;&lt;a href=&quot;#财务计划&quot; class=&quot;headerlink&quot; title=&quot;财务计划:&quot;&gt;&lt;/a&gt;财务计划:&lt;/h4&gt;&lt;p&gt;&lt;del&gt;不能再拖啦 把存折上的钱转到银行卡!!!再整到支付宝上!!!!(已经搞定!遇到了营业厅超级有耐心的小帅哥帮我消了之前网银)&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;刚巴爹!!!&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;Summary&lt;br&gt;五月份,还是觉得过得超级快,要完成的计划,差的还很远,看看那百分之0的进度条吧,MY GOD,时间都去哪里了…MD&lt;br&gt;虽然计划没有完成,也并非没有收获,开始测试NOVA case,学了些统计学知识.学了python的知识&lt;br&gt;在此,感谢丁丁耐心的给我写下了进度条应该怎么实现:）&lt;br&gt;希望自己能心无旁骛的过好自己的人生!&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="计划" scheme="http://yoursite.com/categories/%E8%AE%A1%E5%88%92/"/>
    
    
      <category term="plan" scheme="http://yoursite.com/tags/plan/"/>
    
  </entry>
  
  <entry>
    <title>Pyhton I/O进行文件读写</title>
    <link href="http://yoursite.com/2016/05/24/vmware/python%20IO/"/>
    <id>http://yoursite.com/2016/05/24/vmware/python IO/</id>
    <published>2016-05-24T11:59:59.000Z</published>
    <updated>2016-05-24T14:14:31.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言:&quot;&gt;&lt;/a&gt;前言:&lt;/h2&gt;&lt;p&gt;自从成为小杂碎之后,各种修改bug,这次要求的是check IODM的value值, check的是一个文件里面enabled和enableSSLv3的值, 刚开始我写了一个shell script,但是被各种批评,对于文件的操作python更有优势,其实我并不能苟同这样的观点,但是经过今天写了这段python的代码,发现python能用较少的代码实现,而且,可以避免调用shell脚本,这个过程更加easy一点.&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;Python-I-O操作&quot;&gt;&lt;a href=&quot;#Python-I-O操作&quot; class=&quot;headerlink&quot; title=&quot;Python I/O操作:&quot;&gt;&lt;/a&gt;Python I/O操作:&lt;/h2&gt;&lt;p&gt;下面这段代码里面用的是正则表达式中的search和sub的方法,进行字符串匹配和替换.&lt;br&gt;基本思想是每读取一行文件,看是否值是正确的,如果不正确,就进行替换并且将这一行line加入到字符串w_str中,如果正确,则直接将此行加入到字符串w_str中.&lt;br&gt;这种方式,更方便的达到查找和替换的目的!!!&lt;br&gt;基本的格式:  &lt;/p&gt;
&lt;pre&gt;&lt;code&gt;filename = &amp;quot;&amp;quot; 
fread = open(filename, &amp;apos;r&amp;apos;)
fwrite = open(filename, &amp;apos;w&amp;apos;)
w_str = &amp;quot;&amp;quot;
for line in fread:
    #将line加入到文件中
    fwrite.write(line)
fread.close()
fwrite.close()
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;============================================================&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;comment&quot;&gt;#-*- coding:utf-8 -*-&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; re&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;filedir = &lt;span class=&quot;string&quot;&gt;&quot;/Users/congyingw/Desktop/sfcb.cfg&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;f1 = open(filedir, &lt;span class=&quot;string&quot;&gt;&#39;r&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;w_str = &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;flag = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; line &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; f1:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;#check has enableSSLv3 or not&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; re.search(&lt;span class=&quot;string&quot;&gt;&quot;enableSSLv3&quot;&lt;/span&gt;, line):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       flag = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       flag = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;#check enabled and enableSSLv3 value&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; re.search(&lt;span class=&quot;string&quot;&gt;&quot;enabled:true&quot;&lt;/span&gt;, line) &lt;span class=&quot;keyword&quot;&gt;and&lt;/span&gt; re.search(&lt;span class=&quot;string&quot;&gt;&quot;enableSSLv3:true&quot;&lt;/span&gt;, line):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        w_str += line &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print(&lt;span class=&quot;string&quot;&gt;&quot;right value&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;elif&lt;/span&gt; re.search(&lt;span class=&quot;string&quot;&gt;&quot;enabled:false&quot;&lt;/span&gt;, line):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        line = re.sub(&lt;span class=&quot;string&quot;&gt;&quot;enabled:false&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;enabled:true&quot;&lt;/span&gt;, line)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        w_str += line&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; :&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        line = re.sub(&lt;span class=&quot;string&quot;&gt;&quot;enableSSLv3:false&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;enableSSLv3:true&quot;&lt;/span&gt;, line)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        w_str += line&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; flag == &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     w_str += &lt;span class=&quot;string&quot;&gt;&quot;\nenableSSLv3:true&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(w_str)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;f2=open(filedir, &lt;span class=&quot;string&quot;&gt;&#39;w&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;f2.write(w_str)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;f1.close()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;f2.close()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;==================================================================================&lt;br&gt;待更新(lani给我的烂代码提供了一些简化的意见)&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言:&quot;&gt;&lt;/a&gt;前言:&lt;/h2&gt;&lt;p&gt;自从成为小杂碎之后,各种修改bug,这次要求的是check IODM的value值, check的是一个文件里面enabled和enableSSLv3的值, 刚开始我写了一个shell script,但是被各种批评,对于文件的操作python更有优势,其实我并不能苟同这样的观点,但是经过今天写了这段python的代码,发现python能用较少的代码实现,而且,可以避免调用shell脚本,这个过程更加easy一点.&lt;br&gt;
    
    </summary>
    
      <category term="Python" scheme="http://yoursite.com/categories/Python/"/>
    
      <category term="I/O" scheme="http://yoursite.com/categories/Python/I-O/"/>
    
    
      <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
      <category term="I/O" scheme="http://yoursite.com/tags/I-O/"/>
    
      <category term="实习生" scheme="http://yoursite.com/tags/%E5%AE%9E%E4%B9%A0%E7%94%9F/"/>
    
  </entry>
  
  <entry>
    <title>XML语言（转载整理）</title>
    <link href="http://yoursite.com/2016/05/24/Python/5-24-Python%20%E5%AE%9E%E7%8E%B0%E8%A7%A3%E6%9E%90XML/"/>
    <id>http://yoursite.com/2016/05/24/Python/5-24-Python 实现解析XML/</id>
    <published>2016-05-24T11:59:59.000Z</published>
    <updated>2016-05-24T14:18:49.000Z</updated>
    
    <content type="html">&lt;p&gt;原文链接：&lt;a href=&quot;http://codingpy.com/article/parsing-xml-using-python/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;深入解读Python解析XML的几种方式&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;什么是XML?&lt;br&gt;XML -&amp;gt; Extensible Markup Language 可扩展标记语言  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;XML特点：&quot;&gt;&lt;a href=&quot;#XML特点：&quot; class=&quot;headerlink&quot; title=&quot;XML特点：&quot;&gt;&lt;/a&gt;XML特点：&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;设计宗旨：&lt;strong&gt;传输数据&lt;/strong&gt;，而非显示数据&lt;/li&gt;
&lt;li&gt;标签没有被预定义，需要自定义标签&lt;/li&gt;
&lt;li&gt;被设计为具有自我描述性&lt;/li&gt;
&lt;li&gt;W3C的推荐标准&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;XML是各种应用程序之间进行数据传输的最常用的工具  &lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xskaf.com1.z0.glb.clouddn.com/XML.jpg&quot; alt=&quot;XML&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;Python解析XML包&quot;&gt;&lt;a href=&quot;#Python解析XML包&quot; class=&quot;headerlink&quot; title=&quot;Python解析XML包&quot;&gt;&lt;/a&gt;Python解析XML包&lt;/h3&gt;&lt;h4 id=&quot;1-xml-dom&quot;&gt;&lt;a href=&quot;#1-xml-dom&quot; class=&quot;headerlink&quot; title=&quot;1.xml.dom&quot;&gt;&lt;/a&gt;1.xml.dom&lt;/h4&gt;&lt;p&gt;这个就是之前学爬虫的时候学的dom树(用dom解析器)。&lt;br&gt;&lt;img src=&quot;http://7xskaf.com1.z0.glb.clouddn.com/domtree.jpg&quot; alt=&quot;dom树&quot;&gt;&lt;br&gt;DOM解析器在任何处理开始之前，必须把基于XML文件生成的树状数据放在内存(一次性将整个dom树放进去)，所以&lt;strong&gt;DOM解析器的内存使用量完全根据输入资料的大小&lt;/strong&gt;。&lt;/p&gt;
&lt;h4 id=&quot;2-ElementTree&quot;&gt;&lt;a href=&quot;#2-ElementTree&quot; class=&quot;headerlink&quot; title=&quot;2.ElementTree&quot;&gt;&lt;/a&gt;2.ElementTree&lt;/h4&gt;&lt;p&gt;这个是主要用的！！！&lt;br&gt;&lt;img src=&quot;http://7xskaf.com1.z0.glb.clouddn.com/ET.gif&quot; alt=&quot;ET&quot;&gt;  &lt;/p&gt;
&lt;p&gt;xml.etree.ElementTree模块提供了一个轻量级、Pythonic的API，同时还有一个高效的C语言实现，即xml.etree.cElementTree。&lt;strong&gt;与DOM相比，&lt;/strong&gt;ET的速度更快，API使用更直接、方便。&lt;strong&gt;与SAX相比，&lt;/strong&gt;ET.iterparse函数同样提供了  &lt;strong&gt;按需解析的功能&lt;/strong&gt;，不会一次性在内存中读入整个文档。ET的性能与SAX模块大致相仿，&lt;strong&gt;但是它的API更加高层次，用户使用起来更加便捷。&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&quot;利用ElementTree解析XML&quot;&gt;&lt;a href=&quot;#利用ElementTree解析XML&quot; class=&quot;headerlink&quot; title=&quot;利用ElementTree解析XML&quot;&gt;&lt;/a&gt;利用ElementTree解析XML&lt;/h3&gt;&lt;p&gt;Python标准库中，提供了ET的两种实现。&lt;strong&gt;一个是&lt;/strong&gt;纯Python实现的xml.etree.ElementTree，&lt;strong&gt;另一个是&lt;/strong&gt;速度更快的C语言实现xml.etree.cElementTree。请记住始终使用C语言实现，因为它的速度要快很多，而且内存消耗也要少很多。如果你所使用的Python版本中没有cElementTree所需的加速模块，你可以这样导入模块：  &lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;Python&quot;&gt;
&lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt;:
    &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; xml.etree.cElementTree &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; ET
&lt;span class=&quot;keyword&quot;&gt;except&lt;/span&gt; ImportError:
    &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; xml.etree.ElementTree &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; ET
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;如果某个API存在不同的实现，上面是常见的导入方式。当然，很可能你直接导入第一个模块时，并不会出现问题。请注意&lt;strong&gt;，自Python 3.3之后，就不用采用上面的导入方法，因为ElemenTree模块会自动优先使用C加速器，如果不存在C实现，则会使用Python实现。&lt;/strong&gt;因此，使用Python 3.3+的朋友，只需要import xml.etree.ElementTree即可。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;原文链接：&lt;a href=&quot;http://codingpy.com/article/parsing-xml-using-python/&quot;&gt;深入解读Python解析XML的几种方式&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;什么是XML?&lt;br&gt;XML -&amp;gt; Extensible Markup Language 可扩展标记语言  &lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Python" scheme="http://yoursite.com/categories/Python/"/>
    
      <category term="XML" scheme="http://yoursite.com/categories/Python/XML/"/>
    
    
      <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
      <category term="jobs" scheme="http://yoursite.com/tags/jobs/"/>
    
      <category term="XML" scheme="http://yoursite.com/tags/XML/"/>
    
  </entry>
  
  <entry>
    <title>linux下的挂载命令</title>
    <link href="http://yoursite.com/2016/05/18/vmware/work-bugzilla/"/>
    <id>http://yoursite.com/2016/05/18/vmware/work-bugzilla/</id>
    <published>2016-05-18T11:59:59.000Z</published>
    <updated>2016-05-18T12:05:26.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;最近呢，嗨得很，工作忙成狗了，几乎没有办法刷题and看统计学，忙归忙，但始终是学到了很多东西，在加入NOVA这个team之后，基本上刷新了我对vmware所有产品的认知，&lt;strong&gt;vsphere client？VMware Horizion Client？VMware vSphere PowerCLI？vCenter？&lt;/strong&gt;之前不了解的这些，现在也是有入门级的水平了，感叹vmware这个公司还是挺强悍的，技术上绝对top，能学的东西太多太多。&lt;br&gt;今天写一下工作中上传size&amp;gt;10M的文件到bugzilla的方法！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;开bug的时候就要new bug，在NOVA team要求bug有的信息包括：&lt;/p&gt;
&lt;p&gt;Report a bug:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Screehshots&lt;/li&gt;
&lt;li&gt;vm-support&lt;/li&gt;
&lt;li&gt;/var/log/weasel.log&lt;/li&gt;
&lt;li&gt;localcli storage core adapter list&lt;/li&gt;
&lt;li&gt;localcli network nic list&lt;/li&gt;
&lt;li&gt;localcli device driver list&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;干货&quot;&gt;&lt;a href=&quot;#干货&quot; class=&quot;headerlink&quot; title=&quot;干货&quot;&gt;&lt;/a&gt;干货&lt;/h3&gt;&lt;p&gt;其中最重要的就属vm-support这个环境的collect了，但是attachment size要小于10M，这玩意儿大于10M。我们就要通过手动的方式上传，how to do this？  &lt;/p&gt;
&lt;p&gt;贴心的bugzilla team 给了我们一些 reference：&lt;br&gt;&lt;a href=&quot;https://wiki.eng.vmware.com/RDDevTools/Bugzilla/UsersGuide#About_Attachments&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Bugzilla User Guide&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;All Bugzilla attachments are stored on three shares: bugs.eng.vmware.com:/bugs, bugs-archive.eng.vmware.com:/bugs-archive, and bugs-archive2.eng.vmware.com:/bugs-archive2 . Everyone has r/w access to /bugs and r/o access to the archives. Attachments can be uploaded to /bugs by:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;The edit bug form in Bugzilla’s web interface (has 10M and/or 4 file limit)&lt;/li&gt;
&lt;li&gt;CIFS mount (map “\bugs.eng.vmware.com\bugs” as a network drive in windows) (no file size limitation)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;NFS mount (automount or manual mount) of bugs.eng.vmware.com:/bugs (automount mounts it on /mts/bugs) from linux (no file size limitation)&lt;/strong&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;   Our automation takes care of migrating attachments from the ‘active’ location to the appropriate ‘archival’ location. Once content has been uploaded, the files are copied to the archival location as soon as possible (usually within 1 week) to protect against accidental deletion. The ‘active’ filer uses faster hardware for high-performance hosting of content attached to open or recently resolved bugs. During a bug’s lifecycle, the files should be present on both the active and one of the archival locations. Once a bug has been closed a week or resolved for 3 months, the copy on the active mount is deleted and only the archival copy remains. All files (that should be compressed) are compressed on both the active and archival location when they are initially copied from the active to the archive.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;用的是NFS挂载的方式，应为是tree的结构，我们从bugs.eng.vmware.com把bugs文件挂载到launcher上，launcher就是自己的linux。  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在launcher上创建/mts/bugs用来挂载file。  &lt;/li&gt;
&lt;li&gt;command：&lt;code&gt;mount bugs.eng.vmware.com:/bugs /mts/bugs&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;这时候bugs下就有files了，bug号默认是8位的，现在我们用到了七位 cd files/0/…../到了这下面，你就可以看到其他的attachment了  &lt;/li&gt;
&lt;li&gt;恭喜恭喜，你把vm-support cp到这个文件夹下就好啦~  &lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;推荐&quot;&gt;&lt;a href=&quot;#推荐&quot; class=&quot;headerlink&quot; title=&quot;推荐&quot;&gt;&lt;/a&gt;推荐&lt;/h3&gt;&lt;p&gt;再仔细的学一下linux命令吧~&lt;/p&gt;
&lt;h3 id=&quot;内心os&quot;&gt;&lt;a href=&quot;#内心os&quot; class=&quot;headerlink&quot; title=&quot;内心os&quot;&gt;&lt;/a&gt;内心os&lt;/h3&gt;&lt;p&gt;今天team的另一个实习生妹子，一直不停的问我，心中万匹草泥马奔腾，不会自己去学啊，我特么也是一个字一个字的看文档的…真心希望自学能力能稍微好一下，不懂就问是好，但是不要不懂不查就问，真的显得人好白痴~&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;最近呢，嗨得很，工作忙成狗了，几乎没有办法刷题and看统计学，忙归忙，但始终是学到了很多东西，在加入NOVA这个team之后，基本上刷新了我对vmware所有产品的认知，&lt;strong&gt;vsphere client？VMware Horizion Client？VMware vSphere PowerCLI？vCenter？&lt;/strong&gt;之前不了解的这些，现在也是有入门级的水平了，感叹vmware这个公司还是挺强悍的，技术上绝对top，能学的东西太多太多。&lt;br&gt;今天写一下工作中上传size&amp;gt;10M的文件到bugzilla的方法！&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="工作" scheme="http://yoursite.com/categories/%E5%B7%A5%E4%BD%9C/"/>
    
      <category term="bugzilla" scheme="http://yoursite.com/categories/%E5%B7%A5%E4%BD%9C/bugzilla/"/>
    
    
      <category term="jobs" scheme="http://yoursite.com/tags/jobs/"/>
    
      <category term="linux" scheme="http://yoursite.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>泛化能力(5.17号读书笔记)</title>
    <link href="http://yoursite.com/2016/05/17/statistics/statistics-05/"/>
    <id>http://yoursite.com/2016/05/17/statistics/statistics-05/</id>
    <published>2016-05-17T11:59:59.000Z</published>
    <updated>2016-05-17T15:25:12.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;泛化误差&quot;&gt;&lt;a href=&quot;#泛化误差&quot; class=&quot;headerlink&quot; title=&quot;泛化误差&quot;&gt;&lt;/a&gt;泛化误差&lt;/h3&gt;&lt;h4 id=&quot;泛化能力定义&quot;&gt;&lt;a href=&quot;#泛化能力定义&quot; class=&quot;headerlink&quot; title=&quot;泛化能力定义:&quot;&gt;&lt;/a&gt;泛化能力定义:&lt;/h4&gt;&lt;p&gt;简言之,泛化能力就是对学习方法泛化能力的分析.  &lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt; &lt;img src=&quot;http://7xskaf.com1.z0.glb.clouddn.com/5.17generalization%20ability.png&quot; alt=&quot;泛化能力&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;泛化误差的定义&quot;&gt;&lt;a href=&quot;#泛化误差的定义&quot; class=&quot;headerlink&quot; title=&quot;泛化误差的定义:&quot;&gt;&lt;/a&gt;泛化误差的定义:&lt;/h4&gt;&lt;p&gt;泛化误差:如果学到的模型是f,那么用这个模型对未知数据预测的误差即为&lt;strong&gt;泛化误差(学习到模型的期望风险)&lt;/strong&gt;.&lt;br&gt; &lt;img src=&quot;http://7xskaf.com1.z0.glb.clouddn.com/5.17%E6%B3%9B%E5%8C%96%E8%AF%AF%E5%B7%AE.png&quot; alt=&quot;泛化误差&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;泛化误差上界&quot;&gt;&lt;a href=&quot;#泛化误差上界&quot; class=&quot;headerlink&quot; title=&quot;泛化误差上界&quot;&gt;&lt;/a&gt;泛化误差上界&lt;/h4&gt;&lt;p&gt;学习方法的泛化能力分析通过研究泛化误差的概率上界进行的.&lt;br&gt;首先通过training data得到假设空间F(f的集合),然后从F中选取f,得到f的期望风险(我们期望的不能直接得到)和经验风险(根据给定的训练集得到的):&lt;br&gt;&lt;img src=&quot;http://7xskaf.com1.z0.glb.clouddn.com/5.17f.png&quot; alt=&quot;期望风险和经验风险&quot;&gt;&lt;br&gt;然后找到经验风险最小化函数f(n),我们关心的就是f(n)的泛化能力.&lt;br&gt;&lt;img src=&quot;http://7xskaf.com1.z0.glb.clouddn.com/5.17fn%E7%9A%84%E6%9C%9F%E6%9C%9B.png&quot; alt=&quot;f(n)的期望&quot;&gt;   &lt;/p&gt;
&lt;h5 id=&quot;泛化误差上界定义&quot;&gt;&lt;a href=&quot;#泛化误差上界定义&quot; class=&quot;headerlink&quot; title=&quot;泛化误差上界定义:&quot;&gt;&lt;/a&gt;泛化误差上界定义:&lt;/h5&gt;&lt;p&gt;&lt;img src=&quot;http://7xskaf.com1.z0.glb.clouddn.com/5.17%E6%B3%9B%E5%8C%96%E8%AF%AF%E5%B7%AE%E4%B8%8A%E7%95%8C.png&quot; alt=&quot;泛化误差上界&quot;&gt;  &lt;/p&gt;
&lt;p&gt;泛化误差与训练误差有关,训练误差越大泛化误差越大.  &lt;/p&gt;
&lt;h5 id=&quot;My-Problem&quot;&gt;&lt;a href=&quot;#My-Problem&quot; class=&quot;headerlink&quot; title=&quot;My Problem:&quot;&gt;&lt;/a&gt;My Problem:&lt;/h5&gt;&lt;p&gt;测试误差呢?不是说测试误差是衡量预测能力的更好的吗?  &lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;泛化误差&quot;&gt;&lt;a href=&quot;#泛化误差&quot; class=&quot;headerlink&quot; title=&quot;泛化误差&quot;&gt;&lt;/a&gt;泛化误差&lt;/h3&gt;&lt;h4 id=&quot;泛化能力定义&quot;&gt;&lt;a href=&quot;#泛化能力定义&quot; class=&quot;headerlink&quot; title=&quot;泛化能力定义:&quot;&gt;&lt;/a&gt;泛化能力定义:&lt;/h4&gt;&lt;p&gt;简言之,泛化能力就是对学习方法泛化能力的分析.  &lt;/p&gt;
    
    </summary>
    
      <category term="机器学习" scheme="http://yoursite.com/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="统计学学习方法" scheme="http://yoursite.com/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E7%BB%9F%E8%AE%A1%E5%AD%A6%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95/"/>
    
    
      <category term="read" scheme="http://yoursite.com/tags/read/"/>
    
      <category term="机器学习" scheme="http://yoursite.com/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="统计学学习方法" scheme="http://yoursite.com/tags/%E7%BB%9F%E8%AE%A1%E5%AD%A6%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>NOVA测试中ILO问题解决</title>
    <link href="http://yoursite.com/2016/05/11/vmware/ILO%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/"/>
    <id>http://yoursite.com/2016/05/11/vmware/ILO问题解决/</id>
    <published>2016-05-11T11:59:59.000Z</published>
    <updated>2016-05-24T14:21:26.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;前言：NOVA是vmware为了应付德国官司开发的本地的native driver。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;对于prme-hwe-drv-stor-016这个老旧 driver，从打开ILO开始遇到了很多的问题。  &lt;/p&gt;
&lt;h4 id=&quot;1）重启ILO&quot;&gt;&lt;a href=&quot;#1）重启ILO&quot; class=&quot;headerlink&quot; title=&quot;1）重启ILO&quot;&gt;&lt;/a&gt;1）重启ILO&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;Q:&lt;/strong&gt;打不开ilo地址？&lt;br&gt;&lt;strong&gt;A:&lt;/strong&gt;ilo地址挂了，要reset一下ilo，方法是：  &lt;code&gt;ssh username@prme-hwe-drv-stor-016-ilo  -&amp;gt; help  -&amp;gt;resetsp&lt;/code&gt;等待重启  &lt;/p&gt;
&lt;h4 id=&quot;2）remote-console&quot;&gt;&lt;a href=&quot;#2）remote-console&quot; class=&quot;headerlink&quot; title=&quot;2）remote console&quot;&gt;&lt;/a&gt;2）remote console&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;Q:&lt;/strong&gt;打不开remote console?&lt;br&gt;&lt;strong&gt;A:&lt;/strong&gt;  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1）检查java。   &lt;/li&gt;
&lt;li&gt;2）ping prme-hwe-drv-stor-016 (may be 这里是ping XXXXXX-ilo?)  &lt;/li&gt;
&lt;li&gt;3）如果能ping 通，获得ip地址，通过ip地址打开ilo。    &lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;3）reboot&quot;&gt;&lt;a href=&quot;#3）reboot&quot; class=&quot;headerlink&quot; title=&quot;3）reboot&quot;&gt;&lt;/a&gt;3）reboot&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;Q:&lt;/strong&gt;reboot之后，起不来esxi？&lt;br&gt;&lt;strong&gt;A:&lt;/strong&gt;F12–&amp;gt;BOOT Manager选项–&amp;gt;add boot–&amp;gt;boot from file –&amp;gt;找到esxi-scsi开头的文件，这个文件就是我装在local disk上的系统。然后选一个貌似是x86_64结尾的东东？    &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Summary:&lt;/strong&gt;根据近日的装系统,装好的系统起不来,一定是因为,boot的选项不对,050这台机器,按F2进入boot选项,然后对boot first选项进行修改.  &lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;前言：NOVA是vmware为了应付德国官司开发的本地的native driver。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="工作" scheme="http://yoursite.com/categories/%E5%B7%A5%E4%BD%9C/"/>
    
      <category term="ilo" scheme="http://yoursite.com/categories/%E5%B7%A5%E4%BD%9C/ilo/"/>
    
    
      <category term="vmware" scheme="http://yoursite.com/tags/vmware/"/>
    
      <category term="NOVA" scheme="http://yoursite.com/tags/NOVA/"/>
    
  </entry>
  
  <entry>
    <title>leetcode:278--First Bad Version</title>
    <link href="http://yoursite.com/2016/05/10/leetcode/first-bad-version/"/>
    <id>http://yoursite.com/2016/05/10/leetcode/first-bad-version/</id>
    <published>2016-05-10T11:59:59.000Z</published>
    <updated>2016-05-10T06:21:56.000Z</updated>
    
    <content type="html">&lt;p&gt;题目描述：&lt;br&gt;你是一名产品经理，正在领导团队开发一个新产品。不幸的是，产品的最新版本没有通过质量检测。由于每一个版本都是基于上一个版本开发的，某一个损坏的版本之后的所有版本全都是坏的。  &lt;/p&gt;
&lt;p&gt;假设有n个版本[1, 2, …, n]，你想要找出第一个损坏的版本，它导致所有后面的版本都坏掉了。  &lt;/p&gt;
&lt;p&gt;给你一个API bool isBadVersion(version)，返回某一个版本是否损坏。实现一个函数找出第一个损坏的版本。你应该最小化调用API的次数。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;My-Solution：&quot;&gt;&lt;a href=&quot;#My-Solution：&quot; class=&quot;headerlink&quot; title=&quot;My Solution：&quot;&gt;&lt;/a&gt;My Solution：&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;算法思想：&lt;/strong&gt;  &lt;/p&gt;
&lt;p&gt;二分法（Binary Search）&lt;br&gt;最后return的一定要是left，因为要找到的是最初的损坏的版本。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Python Code:&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#-*-coding:utf-8-*-&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Solution&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(object)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;firstBadVersion&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, n)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        left, right =&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, n&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; left &amp;lt;= right:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mid = (left + right) / &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; isBadVersion(mid):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                right = mid - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                left = mid + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; left&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;My-Problem&quot;&gt;&lt;a href=&quot;#My-Problem&quot; class=&quot;headerlink&quot; title=&quot;My Problem:&quot;&gt;&lt;/a&gt;My Problem:&lt;/h3&gt;&lt;p&gt;No&lt;/p&gt;
&lt;h3 id=&quot;My-Answer&quot;&gt;&lt;a href=&quot;#My-Answer&quot; class=&quot;headerlink&quot; title=&quot;My Answer&quot;&gt;&lt;/a&gt;My Answer&lt;/h3&gt;&lt;p&gt;No&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;题目描述：&lt;br&gt;你是一名产品经理，正在领导团队开发一个新产品。不幸的是，产品的最新版本没有通过质量检测。由于每一个版本都是基于上一个版本开发的，某一个损坏的版本之后的所有版本全都是坏的。  &lt;/p&gt;
&lt;p&gt;假设有n个版本[1, 2, …, n]，你想要找出第一个损坏的版本，它导致所有后面的版本都坏掉了。  &lt;/p&gt;
&lt;p&gt;给你一个API bool isBadVersion(version)，返回某一个版本是否损坏。实现一个函数找出第一个损坏的版本。你应该最小化调用API的次数。&lt;/p&gt;
    
    </summary>
    
      <category term="Python" scheme="http://yoursite.com/categories/Python/"/>
    
      <category term="leetcode" scheme="http://yoursite.com/categories/Python/leetcode/"/>
    
      <category term="jobs" scheme="http://yoursite.com/categories/Python/leetcode/jobs/"/>
    
    
      <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
      <category term="jobs" scheme="http://yoursite.com/tags/jobs/"/>
    
      <category term="leetcode" scheme="http://yoursite.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>leetcode:1--Two Sum</title>
    <link href="http://yoursite.com/2016/05/10/leetcode/two-sum/"/>
    <id>http://yoursite.com/2016/05/10/leetcode/two-sum/</id>
    <published>2016-05-10T11:59:59.000Z</published>
    <updated>2016-05-10T02:04:08.000Z</updated>
    
    <content type="html">&lt;p&gt;题目描述：&lt;br&gt;Given an array of integers, return indices of the two numbers such that they add up to a specific target.&lt;br&gt;Example:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Given nums = [2, 7, 11, 15], target = 9,

Because nums[0] + nums[1] = 2 + 7 = 9,
return [0, 1].
&lt;/code&gt;&lt;/pre&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;My-Solution：&quot;&gt;&lt;a href=&quot;#My-Solution：&quot; class=&quot;headerlink&quot; title=&quot;My Solution：&quot;&gt;&lt;/a&gt;My Solution：&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;算法思想：&lt;/strong&gt;&lt;br&gt;1）双重循环，最暴力直接的解决办法，当然这种笨方法是我自己的解法&lt;br&gt;2）利用字典，灰常心机的解法，只要一层循环就够了~&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Python Code:&lt;/strong&gt;&lt;br&gt;1)双重循环&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# -*-coding:utf-8-*-&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Solution&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(object)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;twoSum&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, nums, target)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        length = len(nums)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, length):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;#test:print(i)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;#test:print(nums[i])&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; j &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(i + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, length):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;#test:print(j)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;#test:print(nums[j])&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; nums[i] + nums[j] == target:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [i, j]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; __name__ == &lt;span class=&quot;string&quot;&gt;&quot;__main__&quot;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(Solution().twoSum([&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;], &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;2)一层循环&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# -*-coding:utf-8-*-&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Solution&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(object)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;twoSum&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, nums, target)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  		lookup = &amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;#其中i是index，num是元素&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i, num &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; enumerate(nums):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; target - num &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; loopup:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [lookup[target - num], i]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;#lookup[value] = key加入到字典lookup中&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            lookup[num] = i&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; __name__ == &lt;span class=&quot;string&quot;&gt;&quot;__main__&quot;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       print(Solution().twoSum([&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;], &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;My-Problem&quot;&gt;&lt;a href=&quot;#My-Problem&quot; class=&quot;headerlink&quot; title=&quot;My Problem:&quot;&gt;&lt;/a&gt;My Problem:&lt;/h3&gt;&lt;p&gt;No&lt;/p&gt;
&lt;h3 id=&quot;My-Answer&quot;&gt;&lt;a href=&quot;#My-Answer&quot; class=&quot;headerlink&quot; title=&quot;My Answer&quot;&gt;&lt;/a&gt;My Answer&lt;/h3&gt;&lt;p&gt;No&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;题目描述：&lt;br&gt;Given an array of integers, return indices of the two numbers such that they add up to a specific target.&lt;br&gt;Example:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Given nums = [2, 7, 11, 15], target = 9,

Because nums[0] + nums[1] = 2 + 7 = 9,
return [0, 1].
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="Python" scheme="http://yoursite.com/categories/Python/"/>
    
      <category term="leetcode" scheme="http://yoursite.com/categories/Python/leetcode/"/>
    
      <category term="jobs" scheme="http://yoursite.com/categories/Python/leetcode/jobs/"/>
    
    
      <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
      <category term="jobs" scheme="http://yoursite.com/tags/jobs/"/>
    
      <category term="leetcode" scheme="http://yoursite.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>模型选择:正则化与交叉验证(5.10号读书笔记)</title>
    <link href="http://yoursite.com/2016/05/10/statistics/statistics-04/"/>
    <id>http://yoursite.com/2016/05/10/statistics/statistics-04/</id>
    <published>2016-05-10T11:59:59.000Z</published>
    <updated>2016-05-10T14:47:05.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;正则化-结构风险最小化&quot;&gt;&lt;a href=&quot;#正则化-结构风险最小化&quot; class=&quot;headerlink&quot; title=&quot;正则化(结构风险最小化)&quot;&gt;&lt;/a&gt;正则化(结构风险最小化)&lt;/h3&gt;&lt;h4 id=&quot;定义&quot;&gt;&lt;a href=&quot;#定义&quot; class=&quot;headerlink&quot; title=&quot;定义&quot;&gt;&lt;/a&gt;定义&lt;/h4&gt;&lt;p&gt;结构风险最小化策略的实现,是在经验风险上加一个正则化项或罚项.正则化项一般是模型复杂度的单调递增函数,模型越复杂,正则化值越大.&lt;br&gt;&lt;img src=&quot;http://7xskaf.com1.z0.glb.clouddn.com/%E6%AD%A3%E5%88%99%E5%8C%96%E5%BD%A2%E5%BC%8F.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;公式项含义&quot;&gt;&lt;a href=&quot;#公式项含义&quot; class=&quot;headerlink&quot; title=&quot;公式项含义&quot;&gt;&lt;/a&gt;公式项含义&lt;/h4&gt;&lt;p&gt;第一项是经验风险,第二项是正则化项,拉姆达&amp;gt;=0调整两者之间的关系系数.&lt;br&gt;第一项的经验风险比较小的模型可能比较复杂,这时第二项的模型复杂度会较大,&lt;strong&gt;正则化的作用&lt;/strong&gt;是选择经验风险与模型复杂度同时较小的模型.&lt;/p&gt;
&lt;h3 id=&quot;交叉验证&quot;&gt;&lt;a href=&quot;#交叉验证&quot; class=&quot;headerlink&quot; title=&quot;交叉验证&quot;&gt;&lt;/a&gt;交叉验证&lt;/h3&gt;&lt;h4 id=&quot;选择交叉验证的情况&quot;&gt;&lt;a href=&quot;#选择交叉验证的情况&quot; class=&quot;headerlink&quot; title=&quot;选择交叉验证的情况&quot;&gt;&lt;/a&gt;选择交叉验证的情况&lt;/h4&gt;&lt;p&gt;给定的样本数据充足时,数据随机切分为训练集(用于训练模型),验证集(用于模型选择),测试集(学习方法评估)&lt;br&gt;不充足时常发生,这时可以&lt;strong&gt;选择交叉验证&lt;/strong&gt;  &lt;/p&gt;
&lt;h4 id=&quot;基本思想&quot;&gt;&lt;a href=&quot;#基本思想&quot; class=&quot;headerlink&quot; title=&quot;基本思想&quot;&gt;&lt;/a&gt;基本思想&lt;/h4&gt;&lt;p&gt;重复的使用数据:把给定的数据切分,将切分的数据集组合为&lt;strong&gt;训练集&lt;/strong&gt;和&lt;strong&gt;测试集&lt;/strong&gt;,在此基础上,反复训练,测试以及模型选择.  &lt;/p&gt;
&lt;h4 id=&quot;1-简单交叉验证&quot;&gt;&lt;a href=&quot;#1-简单交叉验证&quot; class=&quot;headerlink&quot; title=&quot;1.简单交叉验证&quot;&gt;&lt;/a&gt;1.简单交叉验证&lt;/h4&gt;&lt;p&gt;&lt;img src=&quot;http://7xskaf.com1.z0.glb.clouddn.com/%E7%AE%80%E5%8D%95%E4%BA%A4%E5%8F%89%E9%AA%8C%E8%AF%81.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;2-s折交叉验证&quot;&gt;&lt;a href=&quot;#2-s折交叉验证&quot; class=&quot;headerlink&quot; title=&quot;2.s折交叉验证&quot;&gt;&lt;/a&gt;2.s折交叉验证&lt;/h4&gt;&lt;p&gt;&lt;img src=&quot;http://7xskaf.com1.z0.glb.clouddn.com/s%E6%8A%98%E4%BA%A4%E5%8F%89%E9%AA%8C%E8%AF%81.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;3-留一交叉验证&quot;&gt;&lt;a href=&quot;#3-留一交叉验证&quot; class=&quot;headerlink&quot; title=&quot;3.留一交叉验证&quot;&gt;&lt;/a&gt;3.留一交叉验证&lt;/h4&gt;&lt;p&gt;&lt;img src=&quot;http://7xskaf.com1.z0.glb.clouddn.com/%E7%95%99%E4%B8%80%E4%BA%A4%E5%8F%89%E9%AA%8C%E8%AF%81.png&quot; alt=&quot;&quot;&gt;  &lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;正则化-结构风险最小化&quot;&gt;&lt;a href=&quot;#正则化-结构风险最小化&quot; class=&quot;headerlink&quot; title=&quot;正则化(结构风险最小化)&quot;&gt;&lt;/a&gt;正则化(结构风险最小化)&lt;/h3&gt;&lt;h4 id=&quot;定义&quot;&gt;&lt;a href=&quot;#定义&quot; class=&quot;he
    
    </summary>
    
      <category term="机器学习" scheme="http://yoursite.com/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="统计学学习方法" scheme="http://yoursite.com/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E7%BB%9F%E8%AE%A1%E5%AD%A6%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95/"/>
    
    
      <category term="read" scheme="http://yoursite.com/tags/read/"/>
    
      <category term="机器学习" scheme="http://yoursite.com/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="统计学学习方法" scheme="http://yoursite.com/tags/%E7%BB%9F%E8%AE%A1%E5%AD%A6%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>leetcode:168--Excel Sheet Column Title</title>
    <link href="http://yoursite.com/2016/05/10/leetcode/excel-sheet-column-title/"/>
    <id>http://yoursite.com/2016/05/10/leetcode/excel-sheet-column-title/</id>
    <published>2016-05-10T11:59:59.000Z</published>
    <updated>2016-05-10T10:13:38.000Z</updated>
    
    <content type="html">&lt;p&gt;题目描述：&lt;/p&gt;
&lt;p&gt;Given a positive integer, return its corresponding column title as appear in an Excel sheet.&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1 -&amp;gt; A
2 -&amp;gt; B
3 -&amp;gt; C
...
26 -&amp;gt; Z
27 -&amp;gt; AA
28 -&amp;gt; AB 
&lt;/code&gt;&lt;/pre&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;My-Solution：&quot;&gt;&lt;a href=&quot;#My-Solution：&quot; class=&quot;headerlink&quot; title=&quot;My Solution：&quot;&gt;&lt;/a&gt;My Solution：&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;算法思想：&lt;/strong&gt;&lt;br&gt;1）我的想法是用字典将26个字母对应的key-value存起来，然后进行一一对应。&lt;br&gt;2）参考答案：哈哈哈哈，我就不说我的方法有多么二了，多么的。。。。  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Python Code:&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#-*-coding:utf-8-*-&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#这种方法太傻了。。。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; math &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; floor&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Solution&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(object)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;convertToTitle&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, n)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        lookup = &amp;#123;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&#39;Z&#39;&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&#39;A&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&#39;B&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&#39;C&#39;&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&#39;D&#39;&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&#39;E&#39;&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&#39;F&#39;&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&#39;G&#39;&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&#39;H&#39;&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&#39;I&#39;&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&#39;J&#39;&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&#39;K&#39;&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&#39;L&#39;&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;13&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&#39;M&#39;&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;14&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&#39;N&#39;&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;15&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&#39;O&#39;&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&#39;P&#39;&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;17&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&#39;Q&#39;&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;18&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&#39;R&#39;&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;19&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&#39;S&#39;&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&#39;T&#39;&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;21&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&#39;U&#39;&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;22&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&#39;V&#39;&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;23&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&#39;W&#39;&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;24&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&#39;X&#39;&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;25&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&#39;Y&#39;&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;26&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&#39;Z&#39;&lt;/span&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;#lookup = &amp;#123;&#39;A&#39;:1, &#39;B&#39;:2, &#39;C&#39;:3, &#39;D&#39;:4, &#39;E&#39;:5,&#39;F&#39;:6,&#39;G&#39;:7,&#39;H&#39;:8,&#39;I&#39;:9,&#39;J&#39;:10,&#39;K&#39;:11,&#39;L&#39;:12,&#39;M&#39;:13,&#39;N&#39;:14,&#39;O&#39;:15,&#39;P&#39;:16,&#39;Q&#39;:17,&#39;R&#39;:18,&#39;S&#39;:19,&#39;T&#39;:20,&#39;U&#39;:21,&#39;V&#39;:22,&#39;W&#39;:23,&#39;X&#39;:24,&#39;Y&#39;:25,&#39;Z&#39;:26 &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; n &amp;lt;= &lt;span class=&quot;number&quot;&gt;26&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; lookup[n] &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            w = floor((n&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;) / &lt;span class=&quot;number&quot;&gt;26&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;#test:print(w)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            res_str = &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            v = n % &lt;span class=&quot;number&quot;&gt;26&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            org_str = lookup[v]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;#test:print(v)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; w &amp;gt; &lt;span class=&quot;number&quot;&gt;26&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                v = w % &lt;span class=&quot;number&quot;&gt;26&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                w = floor((w - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)/ &lt;span class=&quot;number&quot;&gt;26&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;#test:print(w)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;#test:print(v)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                res_str += lookup[v]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;#test:print(w)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; w &amp;lt;= &lt;span class=&quot;number&quot;&gt;26&lt;/span&gt; :&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                w_str = lookup[w]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;#test:print(org_str + res_str + w_str)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            res_list = list(org_str + res_str + w_str)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;#test:print(res_list)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            res_list.reverse()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;.join(res_list)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; __name__ == &lt;span class=&quot;string&quot;&gt;&quot;__main__&quot;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(Solution().convertToTitle(&lt;span class=&quot;number&quot;&gt;702&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;参考答案&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Solution&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;# @return a string&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;convertToTitle&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, num)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        result, dvd = &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;, num&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; dvd:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            result += chr((dvd - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) % &lt;span class=&quot;number&quot;&gt;26&lt;/span&gt; + ord(&lt;span class=&quot;string&quot;&gt;&#39;A&#39;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            dvd = (dvd - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) / &lt;span class=&quot;number&quot;&gt;26&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; result[::&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; __name__ == &lt;span class=&quot;string&quot;&gt;&quot;__main__&quot;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; xrange(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;29&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; Solution().convertToTitle(i)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;My-Problem&quot;&gt;&lt;a href=&quot;#My-Problem&quot; class=&quot;headerlink&quot; title=&quot;My Problem:&quot;&gt;&lt;/a&gt;My Problem:&lt;/h3&gt;&lt;p&gt;1）根据参考答案，&lt;a href=&quot;https://docs.python.org/3/library/functions.html?highlight=ord#ord&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ord()函数&lt;/a&gt;&lt;br&gt;inverse of &lt;a href=&quot;https://docs.python.org/3/library/functions.html?highlight=ord#chr&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;chr()函数&lt;/a&gt;&lt;br&gt;ord()可以将字母代表的数字表示出来，chr相反。&lt;br&gt;2）string的逆置，我的蠢方法是变成list，然后用reverse,呵呵哒~这里直接用：&lt;strong&gt;&lt;code&gt;result[::-1]&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&quot;My-Answer&quot;&gt;&lt;a href=&quot;#My-Answer&quot; class=&quot;headerlink&quot; title=&quot;My Answer&quot;&gt;&lt;/a&gt;My Answer&lt;/h3&gt;&lt;p&gt;No&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;题目描述：&lt;/p&gt;
&lt;p&gt;Given a positive integer, return its corresponding column title as appear in an Excel sheet.&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1 -&amp;gt; A
2 -&amp;gt; B
3 -&amp;gt; C
...
26 -&amp;gt; Z
27 -&amp;gt; AA
28 -&amp;gt; AB 
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="Python" scheme="http://yoursite.com/categories/Python/"/>
    
      <category term="leetcode" scheme="http://yoursite.com/categories/Python/leetcode/"/>
    
      <category term="jobs" scheme="http://yoursite.com/categories/Python/leetcode/jobs/"/>
    
    
      <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
      <category term="jobs" scheme="http://yoursite.com/tags/jobs/"/>
    
      <category term="leetcode" scheme="http://yoursite.com/tags/leetcode/"/>
    
      <category term="字符串逆置" scheme="http://yoursite.com/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%80%86%E7%BD%AE/"/>
    
      <category term="ord()函数" scheme="http://yoursite.com/tags/ord-%E5%87%BD%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>leetcode:7--Reverse Integer</title>
    <link href="http://yoursite.com/2016/05/09/leetcode/reverse-integer/"/>
    <id>http://yoursite.com/2016/05/09/leetcode/reverse-integer/</id>
    <published>2016-05-09T12:59:59.000Z</published>
    <updated>2016-05-10T15:00:49.000Z</updated>
    
    <content type="html">&lt;p&gt;题目描述：&lt;br&gt;Reverse digits of an integer.  &lt;/p&gt;
&lt;p&gt;Example1: x = 123, return 321&lt;br&gt;Example2: x = -123, return -321&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;Solution：&quot;&gt;&lt;a href=&quot;#Solution：&quot; class=&quot;headerlink&quot; title=&quot;Solution：&quot;&gt;&lt;/a&gt;Solution：&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;算法思想：&lt;/strong&gt;&lt;br&gt;没什么算法而言,直接将int=&amp;gt;str=&amp;gt;list,然后对list的下标值进行读取,形成新的list.&lt;br&gt;值得注意的是,python中的取值范围!!!&lt;br&gt;和reverse-string没什么区别了,还是看参考答案吧&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Python Code:&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# -*-coding:utf-8-*-&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Solution&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(object)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;reverse&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, x)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        real_x = abs(x)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; x &amp;gt;= &lt;span class=&quot;number&quot;&gt;2147483647&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        x_str = str(real_x)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        length = len(x_str)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        new_x_list = [&lt;span class=&quot;keyword&quot;&gt;None&lt;/span&gt;] * length&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        res_str = &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        i = length&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;#test:print(i)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; e &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; x_str:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;#test:print(i)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            new_x_list[i - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;] = e&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            i -= &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; x &amp;lt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            res_str = &lt;span class=&quot;string&quot;&gt;&#39;-&#39;&lt;/span&gt; + &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;.join(new_x_list)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            res_str = &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;.join(new_x_list)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        res_int = int(res_str)  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; abs(res_int) &amp;lt;= &lt;span class=&quot;number&quot;&gt;2147483647&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; res_int&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; __name__ == &lt;span class=&quot;string&quot;&gt;&quot;__main__&quot;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; (Solution().reverse(&lt;span class=&quot;number&quot;&gt;1534236469&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;My-Problem&quot;&gt;&lt;a href=&quot;#My-Problem&quot; class=&quot;headerlink&quot; title=&quot;My Problem:&quot;&gt;&lt;/a&gt;My Problem:&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/congyingTech/LeetCode-1/blob/master/Python/reverse-integer.py&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;推荐解法&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;My-Answer&quot;&gt;&lt;a href=&quot;#My-Answer&quot; class=&quot;headerlink&quot; title=&quot;My Answer&quot;&gt;&lt;/a&gt;My Answer&lt;/h3&gt;&lt;p&gt;No&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;题目描述：&lt;br&gt;Reverse digits of an integer.  &lt;/p&gt;
&lt;p&gt;Example1: x = 123, return 321&lt;br&gt;Example2: x = -123, return -321&lt;/p&gt;
    
    </summary>
    
      <category term="Python" scheme="http://yoursite.com/categories/Python/"/>
    
      <category term="leetcode" scheme="http://yoursite.com/categories/Python/leetcode/"/>
    
      <category term="string" scheme="http://yoursite.com/categories/Python/leetcode/string/"/>
    
    
      <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
      <category term="jobs" scheme="http://yoursite.com/tags/jobs/"/>
    
      <category term="leetcode" scheme="http://yoursite.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>模型评估(5.9号读书笔记)</title>
    <link href="http://yoursite.com/2016/05/09/statistics/statistics-03/"/>
    <id>http://yoursite.com/2016/05/09/statistics/statistics-03/</id>
    <published>2016-05-09T11:59:59.000Z</published>
    <updated>2016-05-10T13:50:32.000Z</updated>
    
    <content type="html">&lt;p&gt;当损失函数给定时,基于损失函数的模型的training error和模型的test error成为学习方法评估的标准.&lt;br&gt;注意,统计学习方法具体采用的损失函数未必是评估时使用的损失函数.&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;训练误差与测试误差&quot;&gt;&lt;a href=&quot;#训练误差与测试误差&quot; class=&quot;headerlink&quot; title=&quot;训练误差与测试误差&quot;&gt;&lt;/a&gt;训练误差与测试误差&lt;/h3&gt;&lt;h4 id=&quot;训练误差-平均损失&quot;&gt;&lt;a href=&quot;#训练误差-平均损失&quot; class=&quot;headerlink&quot; title=&quot;训练误差: 平均损失&quot;&gt;&lt;/a&gt;训练误差: 平均损失&lt;/h4&gt;&lt;p&gt;&lt;img src=&quot;http://7xskaf.com1.z0.glb.clouddn.com/%E8%AE%AD%E7%BB%83%E6%95%B0%E6%8D%AE%E9%9B%86%E7%9A%84%E5%B9%B3%E5%9D%87%E6%8D%9F%E5%A4%B1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;测试误差-平均损失&quot;&gt;&lt;a href=&quot;#测试误差-平均损失&quot; class=&quot;headerlink&quot; title=&quot;测试误差:  平均损失&quot;&gt;&lt;/a&gt;测试误差:  平均损失&lt;/h4&gt;&lt;p&gt;&lt;img src=&quot;http://7xskaf.com1.z0.glb.clouddn.com/%E6%B5%8B%E8%AF%95%E6%95%B0%E6%8D%AE%E9%9B%86%E7%9A%84%E5%B9%B3%E5%9D%87%E6%8D%9F%E5%A4%B1.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;主要是看测试误差,测试误差小的方法有更好的预测能力,通常将学习方法对未知数据的预测能力称为&lt;strong&gt;泛化能力&lt;/strong&gt;.  &lt;/p&gt;
&lt;h3 id=&quot;过拟合&quot;&gt;&lt;a href=&quot;#过拟合&quot; class=&quot;headerlink&quot; title=&quot;过拟合&quot;&gt;&lt;/a&gt;过拟合&lt;/h3&gt;&lt;h4 id=&quot;定义&quot;&gt;&lt;a href=&quot;#定义&quot; class=&quot;headerlink&quot; title=&quot;定义:&quot;&gt;&lt;/a&gt;定义:&lt;/h4&gt;&lt;p&gt;如果一味追求提高对训练数据的预测能力,所选模型的复杂度往往会比真模型更高,这种现象称为&lt;strong&gt;过拟合.&lt;/strong&gt;&lt;br&gt;对已知数据预测的很好,但对未知数据预测的很差的现象.&lt;br&gt;可以说模型选择旨在避免过拟合并提高模型的预测能力.&lt;/p&gt;
&lt;h4 id=&quot;解决方法&quot;&gt;&lt;a href=&quot;#解决方法&quot; class=&quot;headerlink&quot; title=&quot;解决方法:&quot;&gt;&lt;/a&gt;解决方法:&lt;/h4&gt;&lt;p&gt;1)首先确定模型的复杂度,即确定多项式的次数.&lt;br&gt;2)在给定的模型复杂度下,按照&lt;strong&gt;经验风险最小化&lt;/strong&gt;的策略求解参数—多项式的系数&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;For example:&lt;/strong&gt;&lt;br&gt;M次多项式:&lt;br&gt;&lt;img src=&quot;http://7xskaf.com1.z0.glb.clouddn.com/M%E6%AC%A1%E5%A4%9A%E9%A1%B9%E5%BC%8F.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;strong&gt;目的是求w的&lt;/strong&gt;&lt;br&gt;按照上面的步骤解决问题&lt;br&gt;1)求经验风险最小化&lt;br&gt;其中1/2是为了方便计算,损失函数是平方&lt;br&gt;&lt;img src=&quot;http://7xskaf.com1.z0.glb.clouddn.com/%E7%BB%8F%E9%AA%8C%E9%A3%8E%E9%99%A9%E6%9C%80%E5%B0%8F%E5%8C%96.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;2)将模型与训练数据带入上式&lt;br&gt;&lt;img src=&quot;http://7xskaf.com1.z0.glb.clouddn.com/%E5%B8%A6%E5%85%A5%E5%90%8E%E7%9A%84%E7%BB%8F%E9%AA%8C%E9%A3%8E%E9%99%A9%E6%9C%80%E5%B0%8F%E5%8C%96.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;3)因为要求最小化,对式子系数w进行求偏导数,并令左边L(w)求偏导数后为0,求得拟合多项式系数w&lt;br&gt;&lt;img src=&quot;http://7xskaf.com1.z0.glb.clouddn.com/w%E5%80%BC.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;多项式拟合情况:&lt;br&gt;&lt;img src=&quot;http://7xskaf.com1.z0.glb.clouddn.com/%E6%8B%9F%E5%90%88%E9%97%AE%E9%A2%98%E7%BB%93%E6%9E%9C%E5%9B%BE.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;由上图知,M=9时 产生过拟合, M=3时 是比较符合测试误差较小的情况的.&lt;/p&gt;
&lt;h3 id=&quot;结论&quot;&gt;&lt;a href=&quot;#结论&quot; class=&quot;headerlink&quot; title=&quot;结论&quot;&gt;&lt;/a&gt;结论&lt;/h3&gt;&lt;p&gt;由上例中拟合情况得:&lt;br&gt;&lt;img src=&quot;http://7xskaf.com1.z0.glb.clouddn.com/%E8%AE%AD%E7%BB%83%E8%AF%AF%E5%B7%AE%E6%B5%8B%E8%AF%95%E8%AF%AF%E5%B7%AE%E4%B8%8E%E6%A8%A1%E5%9E%8B%E5%A4%8D%E6%9D%82%E5%BA%A6%E5%85%B3%E7%B3%BB.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;模型的复杂度越高,训练误差越小,测试误差先变小后变大,变大的时候发生过拟合现象,我们就是要找测试误差最低点.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;当损失函数给定时,基于损失函数的模型的training error和模型的test error成为学习方法评估的标准.&lt;br&gt;注意,统计学习方法具体采用的损失函数未必是评估时使用的损失函数.&lt;/p&gt;
    
    </summary>
    
      <category term="机器学习" scheme="http://yoursite.com/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="统计学学习方法" scheme="http://yoursite.com/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E7%BB%9F%E8%AE%A1%E5%AD%A6%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95/"/>
    
    
      <category term="read" scheme="http://yoursite.com/tags/read/"/>
    
      <category term="机器学习" scheme="http://yoursite.com/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="统计学学习方法" scheme="http://yoursite.com/tags/%E7%BB%9F%E8%AE%A1%E5%AD%A6%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>leetcode:125--Valid Palindrome</title>
    <link href="http://yoursite.com/2016/05/09/leetcode/valid-palindrome/"/>
    <id>http://yoursite.com/2016/05/09/leetcode/valid-palindrome/</id>
    <published>2016-05-09T11:59:59.000Z</published>
    <updated>2016-05-10T15:07:39.000Z</updated>
    
    <content type="html">&lt;p&gt;题目描述：Given a string, determine if it is a palindrome, considering only alphanumeric characters and ignoring cases.  &lt;/p&gt;
&lt;p&gt;For example,&lt;br&gt;“A man, a plan, a canal: Panama” is a palindrome.&lt;br&gt;“race a car” is not a palindrome.  &lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;Solution：&quot;&gt;&lt;a href=&quot;#Solution：&quot; class=&quot;headerlink&quot; title=&quot;Solution：&quot;&gt;&lt;/a&gt;Solution：&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;算法思想：&lt;/strong&gt;&lt;br&gt;判断是否是回文字符串:&lt;br&gt;1)按照alphanumeric characters(字母数字字符), Python中有现成的判断方法&lt;code&gt;bytes.isalnum()&lt;/code&gt; or &lt;code&gt;bytearray.isalnum()&lt;/code&gt;&lt;br&gt;2)设置两个指针,首指针和尾指针,将不属于alphanumeric characters的元素过滤掉,通过左移和右移实现.&lt;br&gt;3)将左右指针代表的元素转化为lower(),统一进行比较,如果有一个不同则停止比较,return False.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Python Code:&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#-*- coding:utf-8 -*-&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Solution&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(object)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;isPalindrome&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, s)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        i, j = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, len(s) - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;#外层指针控制循环,i不超过j&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; i &amp;lt; j:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;#两个while循环把不符合条件的,等元素给pass掉&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;#如果不符合isalnum的要求,左指针左移一个单位&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; i &amp;lt; j &lt;span class=&quot;keyword&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;not&lt;/span&gt; s[i].isalnum():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                i += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;#同理,右指针右移一位&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; i &amp;lt; j &lt;span class=&quot;keyword&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;not&lt;/span&gt; s[j].isalnum():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                j -= &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; s[i].lower() != s[j].lower():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;False&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            i, j = i + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, j - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; __name__ == &lt;span class=&quot;string&quot;&gt;&quot;__main__&quot;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    s = &lt;span class=&quot;string&quot;&gt;&quot;A man, a plan, a canal: Panama&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; Solution().isPalindrome(s)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;My-Problem&quot;&gt;&lt;a href=&quot;#My-Problem&quot; class=&quot;headerlink&quot; title=&quot;My Problem:&quot;&gt;&lt;/a&gt;My Problem:&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html?highlight=isalnum#bytearray.isdigit&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Python官网手册中的isalnum&lt;/a&gt;  &lt;/p&gt;
&lt;h3 id=&quot;My-Answer&quot;&gt;&lt;a href=&quot;#My-Answer&quot; class=&quot;headerlink&quot; title=&quot;My Answer&quot;&gt;&lt;/a&gt;My Answer&lt;/h3&gt;&lt;p&gt;String 是 可以用下标表示的,但是string不是可以iterable的类型.用for进行遍历是不可以的.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;题目描述：Given a string, determine if it is a palindrome, considering only alphanumeric characters and ignoring cases.  &lt;/p&gt;
&lt;p&gt;For example,&lt;br&gt;“A man, a plan, a canal: Panama” is a palindrome.&lt;br&gt;“race a car” is not a palindrome.  &lt;/p&gt;
    
    </summary>
    
      <category term="Python" scheme="http://yoursite.com/categories/Python/"/>
    
      <category term="leetcode" scheme="http://yoursite.com/categories/Python/leetcode/"/>
    
      <category term="string" scheme="http://yoursite.com/categories/Python/leetcode/string/"/>
    
    
      <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
      <category term="leetcode" scheme="http://yoursite.com/tags/leetcode/"/>
    
      <category term="首尾双指针" scheme="http://yoursite.com/tags/%E9%A6%96%E5%B0%BE%E5%8F%8C%E6%8C%87%E9%92%88/"/>
    
      <category term="isalnum()" scheme="http://yoursite.com/tags/isalnum/"/>
    
  </entry>
  
  <entry>
    <title>leetcode:6--ZigZag Conversion</title>
    <link href="http://yoursite.com/2016/05/06/leetcode/zigzag-conversion/"/>
    <id>http://yoursite.com/2016/05/06/leetcode/zigzag-conversion/</id>
    <published>2016-05-06T11:59:59.000Z</published>
    <updated>2016-05-10T15:08:48.000Z</updated>
    
    <content type="html">&lt;p&gt;题目描述：  &lt;/p&gt;
&lt;pre&gt;&lt;code&gt;numRows = 3
 P   A   H   N (0 4 8 12)
 A P L S I I G (1 3 5 7 9 11)
 Y   I   R     (2 6 10)

numRows = 4
P     I     N  (0 6 12)
A   L S   I G  (1 5 7 11 13)
Y A   H R      (2 4 8 10)
P     I        (3 9)

input numRows = 3
0 1 2 3 4 5 6 7 8 9 10 11 12 13
P A Y P A L I S H I  R  I  N  G
output
0 4 8 12 1 3 5 7 9 11 13 2 6 10
P A H  N A P L S I  I  G Y I  R
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;由输入输出可以看到,首尾的下标值是隔了4个数的，&lt;br&gt;除了首尾之外的中间的几行，是隔了两个数的&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;solution：&quot;&gt;&lt;a href=&quot;#solution：&quot; class=&quot;headerlink&quot; title=&quot;solution：&quot;&gt;&lt;/a&gt;solution：&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;算法思想：&lt;/strong&gt;&lt;br&gt;找规律，1)首尾两行的间隔是固定的数 step = numRows * 2 - 2&lt;br&gt;       2)中间的这几行的规律实在是不好找，只能参考答案了 =.= &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Python Code:&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Solution&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;convert&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, s, numRows)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; numRows == &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;#由下标的排序的规律可以知道,step的2*numRows - 2 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        step, zigzag = &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; * numRows - &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(numRows):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; j &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(i, len(s), step):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                zigzag += s[j]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;#这是 除了首尾两行之外，中间的两行的规律&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &amp;lt; i &amp;lt; numRows - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;and&lt;/span&gt; j + step - &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; * i &amp;lt; len(s):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    zigzag += s [j + step &lt;span class=&quot;number&quot;&gt;-2&lt;/span&gt; * i]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; zigzag&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; __name__ == &lt;span class=&quot;string&quot;&gt;&quot;__main__&quot;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(Solution().convert(&lt;span class=&quot;string&quot;&gt;&quot;abcdbgksf&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;My-Problem&quot;&gt;&lt;a href=&quot;#My-Problem&quot; class=&quot;headerlink&quot; title=&quot;My Problem&quot;&gt;&lt;/a&gt;My Problem&lt;/h3&gt;&lt;p&gt;No&lt;/p&gt;
&lt;h3 id=&quot;My-Answer&quot;&gt;&lt;a href=&quot;#My-Answer&quot; class=&quot;headerlink&quot; title=&quot;My Answer&quot;&gt;&lt;/a&gt;My Answer&lt;/h3&gt;&lt;p&gt;No&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;题目描述：  &lt;/p&gt;
&lt;pre&gt;&lt;code&gt;numRows = 3
 P   A   H   N (0 4 8 12)
 A P L S I I G (1 3 5 7 9 11)
 Y   I   R     (2 6 10)

numRows = 4
P     I     N  (0 6 12)
A   L S   I G  (1 5 7 11 13)
Y A   H R      (2 4 8 10)
P     I        (3 9)

input numRows = 3
0 1 2 3 4 5 6 7 8 9 10 11 12 13
P A Y P A L I S H I  R  I  N  G
output
0 4 8 12 1 3 5 7 9 11 13 2 6 10
P A H  N A P L S I  I  G Y I  R
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;由输入输出可以看到,首尾的下标值是隔了4个数的，&lt;br&gt;除了首尾之外的中间的几行，是隔了两个数的&lt;/p&gt;
    
    </summary>
    
      <category term="Python" scheme="http://yoursite.com/categories/Python/"/>
    
      <category term="leetcode" scheme="http://yoursite.com/categories/Python/leetcode/"/>
    
      <category term="智力题" scheme="http://yoursite.com/categories/Python/leetcode/%E6%99%BA%E5%8A%9B%E9%A2%98/"/>
    
    
      <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
      <category term="jobs" scheme="http://yoursite.com/tags/jobs/"/>
    
      <category term="leetcode" scheme="http://yoursite.com/tags/leetcode/"/>
    
      <category term="模拟题" scheme="http://yoursite.com/tags/%E6%A8%A1%E6%8B%9F%E9%A2%98/"/>
    
      <category term="for循环" scheme="http://yoursite.com/tags/for%E5%BE%AA%E7%8E%AF/"/>
    
  </entry>
  
  <entry>
    <title>监督学习之模型和策略（5.6号读书笔记）</title>
    <link href="http://yoursite.com/2016/05/06/statistics/statistics-02/"/>
    <id>http://yoursite.com/2016/05/06/statistics/statistics-02/</id>
    <published>2016-05-06T11:59:59.000Z</published>
    <updated>2016-05-10T14:03:10.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;模型和策略&quot;&gt;&lt;a href=&quot;#模型和策略&quot; class=&quot;headerlink&quot; title=&quot;模型和策略&quot;&gt;&lt;/a&gt;模型和策略&lt;/h2&gt;&lt;h3 id=&quot;模型&quot;&gt;&lt;a href=&quot;#模型&quot; class=&quot;headerlink&quot; title=&quot;模型&quot;&gt;&lt;/a&gt;模型&lt;/h3&gt;&lt;p&gt;监督学习过程中，模型就是所要学习的条件概率分布或决策函数。&lt;br&gt;模型的假设空间包含所有可能的条件概率分布或决策函数。  &lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;&lt;strong&gt;假设空间&lt;/strong&gt;&lt;br&gt;用F表示：&lt;br&gt;决策函数的集合：&lt;br&gt;&lt;img src=&quot;http://7xskaf.com1.z0.glb.clouddn.com/%E5%81%87%E8%AE%BE%E7%A9%BA%E9%97%B4%E5%87%BD%E6%95%B0-%E5%86%B3%E7%AD%96%E5%87%BD%E6%95%B0%E5%88%86%E5%B8%83%E6%97%8F.PNG&quot; alt=&quot;决策函数假设空间&quot;&gt;&lt;/p&gt;
&lt;p&gt;条件概率的集合：&lt;br&gt;&lt;img src=&quot;http://7xskaf.com1.z0.glb.clouddn.com/%E5%81%87%E8%AE%BE%E7%A9%BA%E9%97%B4%E5%87%BD%E6%95%B02-%E6%9D%A1%E4%BB%B6.PNG&quot; alt=&quot;条件概率假设空间&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;策略&quot;&gt;&lt;a href=&quot;#策略&quot; class=&quot;headerlink&quot; title=&quot;策略&quot;&gt;&lt;/a&gt;策略&lt;/h3&gt;&lt;p&gt;有了模型的假设空间，统计学习借着需要考虑的是按照什么样的准则学习或者选择最优的模型。  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;损失函数：&lt;/strong&gt;度量模型一次预测的好坏&lt;br&gt;&lt;strong&gt;风险函数：&lt;/strong&gt;度量平均意义下模型预测的好坏  &lt;/p&gt;
&lt;h4 id=&quot;常用的损失函数&quot;&gt;&lt;a href=&quot;#常用的损失函数&quot; class=&quot;headerlink&quot; title=&quot;常用的损失函数&quot;&gt;&lt;/a&gt;常用的损失函数&lt;/h4&gt;&lt;p&gt;&lt;img src=&quot;http://7xskaf.com1.z0.glb.clouddn.com/%E6%8D%9F%E5%A4%B1%E5%87%BD%E6%95%B0.PNG&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;损失函数值越小，模型越好。&lt;/p&gt;
&lt;h4 id=&quot;风险函数（或称为期望损失）&quot;&gt;&lt;a href=&quot;#风险函数（或称为期望损失）&quot; class=&quot;headerlink&quot; title=&quot;风险函数（或称为期望损失）&quot;&gt;&lt;/a&gt;风险函数（或称为期望损失）&lt;/h4&gt;&lt;p&gt;期望损失，就是损失函数的期望值&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xskaf.com1.z0.glb.clouddn.com/%E6%9C%9F%E6%9C%9B%E6%8D%9F%E5%A4%B1.PNG&quot; alt=&quot;&quot;&gt;  &lt;/p&gt;
&lt;p&gt; 学习的目标是选择期望风险最小的模型。然而期望损失是不能直接计算的，于是有了经验损失&lt;/p&gt;
&lt;h4 id=&quot;经验损失&quot;&gt;&lt;a href=&quot;#经验损失&quot; class=&quot;headerlink&quot; title=&quot;经验损失&quot;&gt;&lt;/a&gt;经验损失&lt;/h4&gt;&lt;p&gt;给定一个训练的数据集，模型f(X)关于训练数据集的平均损失称为经验风险或经验损失。&lt;br&gt;&lt;img src=&quot;http://7xskaf.com1.z0.glb.clouddn.com/%E7%BB%8F%E9%AA%8C%E9%A3%8E%E9%99%A9.PNG&quot; alt=&quot;&quot;&gt;&lt;br&gt;大数定律知，N趋向于无穷时，经验风险可以更好的用来估计期望风险。  &lt;/p&gt;
&lt;h4 id=&quot;经验风险最小化（ERM）&quot;&gt;&lt;a href=&quot;#经验风险最小化（ERM）&quot; class=&quot;headerlink&quot; title=&quot;经验风险最小化（ERM）&quot;&gt;&lt;/a&gt;经验风险最小化（ERM）&lt;/h4&gt;&lt;p&gt;&lt;img src=&quot;http://7xskaf.com1.z0.glb.clouddn.com/%E7%BB%8F%E9%AA%8C%E9%A3%8E%E9%99%A9%E6%9C%80%E5%B0%8F%E5%8C%96.PNG&quot; alt=&quot;&quot;&gt;&lt;br&gt;当样本足够大时，ERM能保证有很好的学习效果，然而样本小的时候，会产生过拟合，引入结构风险最小化（SRM）&lt;/p&gt;
&lt;h4 id=&quot;结构风险最小化（SRM）&quot;&gt;&lt;a href=&quot;#结构风险最小化（SRM）&quot; class=&quot;headerlink&quot; title=&quot;结构风险最小化（SRM）&quot;&gt;&lt;/a&gt;结构风险最小化（SRM）&lt;/h4&gt;&lt;p&gt;防止过拟合而产生的,等价于正则化,后面正则化有详细介绍.&lt;br&gt;定义：&lt;br&gt;&lt;img src=&quot;http://7xskaf.com1.z0.glb.clouddn.com/%E7%BB%93%E6%9E%84%E9%A3%8E%E9%99%A9.PNG&quot; alt=&quot;&quot;&gt;&lt;br&gt;J(f)为模型的复杂度 &lt;/p&gt;
&lt;p&gt;最小化：&lt;br&gt;&lt;img src=&quot;http://7xskaf.com1.z0.glb.clouddn.com/%E7%BB%93%E6%9E%84%E9%A3%8E%E9%99%A9%E6%9C%80%E5%B0%8F%E5%8C%96.PNG&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;算法&quot;&gt;&lt;a href=&quot;#算法&quot; class=&quot;headerlink&quot; title=&quot;算法&quot;&gt;&lt;/a&gt;算法&lt;/h2&gt;&lt;p&gt;最优化的解法！&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;模型和策略&quot;&gt;&lt;a href=&quot;#模型和策略&quot; class=&quot;headerlink&quot; title=&quot;模型和策略&quot;&gt;&lt;/a&gt;模型和策略&lt;/h2&gt;&lt;h3 id=&quot;模型&quot;&gt;&lt;a href=&quot;#模型&quot; class=&quot;headerlink&quot; title=&quot;模型&quot;&gt;&lt;/a&gt;模型&lt;/h3&gt;&lt;p&gt;监督学习过程中，模型就是所要学习的条件概率分布或决策函数。&lt;br&gt;模型的假设空间包含所有可能的条件概率分布或决策函数。  &lt;/p&gt;
    
    </summary>
    
      <category term="机器学习" scheme="http://yoursite.com/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="统计学学习方法" scheme="http://yoursite.com/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E7%BB%9F%E8%AE%A1%E5%AD%A6%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95/"/>
    
    
      <category term="read" scheme="http://yoursite.com/tags/read/"/>
    
      <category term="机器学习" scheme="http://yoursite.com/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="统计学学习方法" scheme="http://yoursite.com/tags/%E7%BB%9F%E8%AE%A1%E5%AD%A6%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>监督学习（5.5号读书笔记）</title>
    <link href="http://yoursite.com/2016/05/05/statistics/statistics-01/"/>
    <id>http://yoursite.com/2016/05/05/statistics/statistics-01/</id>
    <published>2016-05-05T11:59:59.000Z</published>
    <updated>2016-05-05T15:13:34.000Z</updated>
    
    <content type="html">&lt;p&gt;前言：从这个月开始阅读《统计学学习方法这本书》，不能再拖了呀！感觉再拖就真的不好啦~坚持每天下班之后读一个小时，然后在此做一下读书笔记。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;统计学简介：统计学习的方法是基于数据构建统计模型从而对数据进行预测与分析。统计学习有&lt;strong&gt;监督学习&lt;/strong&gt;、&lt;strong&gt;非监督学习&lt;/strong&gt;、&lt;strong&gt;半监督学习&lt;/strong&gt;、&lt;strong&gt;强化学习&lt;/strong&gt;等组成。&lt;br&gt;统计学习的方法可以概括如下：从给定的、有限的、用于学习的训练数据（training data）集合出发，假设数据是独立同分布产生的；并且假设要学习的模型属于某个函数的集合，称为假设空间(hypothesis space); 应用某个评价准则， 从假设空间中选取一个最优的模型， 使它对已知训练数据及未知测试数据(test data)在给定的评价标准下有最优的预测；最优模型的选取由算法实现。&lt;br&gt;这样，统计学习方法包括模型的假设空间、模型选择的准则以及模型学习的算法，称其为三要素，model，strategy，algorithm&lt;/p&gt;
&lt;h2 id=&quot;1-1基本概念&quot;&gt;&lt;a href=&quot;#1-1基本概念&quot; class=&quot;headerlink&quot; title=&quot;1.1基本概念&quot;&gt;&lt;/a&gt;1.1基本概念&lt;/h2&gt;&lt;h3 id=&quot;1-输入空间、特征空间、输出空间&quot;&gt;&lt;a href=&quot;#1-输入空间、特征空间、输出空间&quot; class=&quot;headerlink&quot; title=&quot;1.输入空间、特征空间、输出空间&quot;&gt;&lt;/a&gt;1.输入空间、特征空间、输出空间&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;输入空间：&lt;/strong&gt;X={x1,x2,x3,x4,…xi} 可以是有限集，也可以是无限空间上的。&lt;br&gt;&lt;strong&gt;输出空间：&lt;/strong&gt;Y={y1,y2,y2,y3,…yi} 可以是有限集，也可以是无限空间上的。&lt;br&gt;输入空间与输出空间可能是同一个空间，也可能不是，一般输出空间要远小于输入空间。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;特征空间：&lt;/strong&gt;每个具体的输入是一个特征向量，由特征向量组成的空间为特征空间。 &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;训练数据&lt;/strong&gt;（training data）：输入+输出 成对组成 (test data 同样)&lt;br&gt;                         &lt;code&gt;T = {(x1,y1),....}&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&quot;2-联合概率分布&quot;&gt;&lt;a href=&quot;#2-联合概率分布&quot; class=&quot;headerlink&quot; title=&quot;2.联合概率分布&quot;&gt;&lt;/a&gt;2.联合概率分布&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;有监督学习假设&lt;/strong&gt;X,Y遵循联合概率分布P(X, Y), 我们只是假设它存在，但是对于学习系统，联合概率分布的具体定义是未知的。    &lt;/p&gt;
&lt;p&gt;training data 和test data被看做是依联合概率分布P(X,Y)&lt;strong&gt;独立同分布产生&lt;/strong&gt;的。    &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;X和Y具有联合概率分布的假设是统计学习关于数据的基本假设&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&quot;3-假设空间&quot;&gt;&lt;a href=&quot;#3-假设空间&quot; class=&quot;headerlink&quot; title=&quot;3.假设空间&quot;&gt;&lt;/a&gt;3.假设空间&lt;/h3&gt;&lt;p&gt;输入输出空间的映射的集合是&lt;strong&gt;假设空间&lt;/strong&gt;.&lt;br&gt;&lt;strong&gt;模型&lt;/strong&gt;属于假设空间,目的是找到这个模型， 可以是概率的或者非概率模型。&lt;/p&gt;
&lt;h2 id=&quot;1-2-问题形式化&quot;&gt;&lt;a href=&quot;#1-2-问题形式化&quot; class=&quot;headerlink&quot; title=&quot;1.2 问题形式化&quot;&gt;&lt;/a&gt;1.2 问题形式化&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://7xskaf.com1.z0.glb.clouddn.com/%E6%9C%89%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0.PNG&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;前言：从这个月开始阅读《统计学学习方法这本书》，不能再拖了呀！感觉再拖就真的不好啦~坚持每天下班之后读一个小时，然后在此做一下读书笔记。&lt;/p&gt;
    
    </summary>
    
      <category term="机器学习" scheme="http://yoursite.com/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="统计学学习方法" scheme="http://yoursite.com/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E7%BB%9F%E8%AE%A1%E5%AD%A6%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95/"/>
    
    
      <category term="read" scheme="http://yoursite.com/tags/read/"/>
    
      <category term="机器学习" scheme="http://yoursite.com/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="统计学学习方法" scheme="http://yoursite.com/tags/%E7%BB%9F%E8%AE%A1%E5%AD%A6%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>leetcode:257--Binary Tree Paths</title>
    <link href="http://yoursite.com/2016/05/05/leetcode/binary-tree-paths/"/>
    <id>http://yoursite.com/2016/05/05/leetcode/binary-tree-paths/</id>
    <published>2016-05-05T11:59:59.000Z</published>
    <updated>2016-05-10T14:52:30.000Z</updated>
    
    <content type="html">&lt;p&gt;题目描述：&lt;br&gt;对一棵二叉树的根到叶子节点进行输出，eg:  &lt;/p&gt;
&lt;pre&gt;&lt;code&gt;   1
 /   \
2     3
 \
  5
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;All root-to-leaf paths are: &lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[&amp;quot;1-&amp;gt;2-&amp;gt;5&amp;quot;, &amp;quot;1-&amp;gt;3&amp;quot;]
&lt;/code&gt;&lt;/pre&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;solution：&quot;&gt;&lt;a href=&quot;#solution：&quot; class=&quot;headerlink&quot; title=&quot;solution：&quot;&gt;&lt;/a&gt;solution：&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;算法思想：&lt;/strong&gt;&lt;br&gt;首先，得到path肯定是要对二叉树进行遍历的，这里采用DFS深度优先遍历。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Python Code:&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#找二叉树的路径，首先就要遍历二叉树，遍历二叉树的方式有两种，深度优先遍历（DFS）和广度优先遍历&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;TreeNode&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(object)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, x)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.val = x&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.left = &lt;span class=&quot;keyword&quot;&gt;None&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.right = &lt;span class=&quot;keyword&quot;&gt;None&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Solution&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;binaryTreePaths&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, root)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        res, path = [], []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; root &lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;None&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; res&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.dfs(root, path, res)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; res&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;dfs&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, root, path, res)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; root &lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;None&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;#当左右孩子都没有的时候，整理结果&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; root.left &lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;None&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;and&lt;/span&gt; root.right &lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;None&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ans = &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; n &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; path:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ans += str(n.val) + &lt;span class=&quot;string&quot;&gt;&quot;-&amp;gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            res.append(ans + str(root.val)) &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; root.left:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            path.append(root)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            self.dfs(root.left, path,res)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;comment&quot;&gt;#这里一定要进行pop，返回当前节点的父节点&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            path.pop()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; root.right:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            path.append(root)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            self.dfs(root.right, path, res)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            path.pop()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; __name__ == &lt;span class=&quot;string&quot;&gt;&quot;__main__&quot;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    root = TreeNode(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    root.left = TreeNode(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    root.right = TreeNode(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    root.left.right = TreeNode(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(Solution().binaryTreePaths(root))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;My-Problem&quot;&gt;&lt;a href=&quot;#My-Problem&quot; class=&quot;headerlink&quot; title=&quot;My Problem&quot;&gt;&lt;/a&gt;My Problem&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://blog.csdn.net/bone_ace/article/details/46718683&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Python中二叉树的遍历操作&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;My-Answer&quot;&gt;&lt;a href=&quot;#My-Answer&quot; class=&quot;headerlink&quot; title=&quot;My Answer&quot;&gt;&lt;/a&gt;My Answer&lt;/h3&gt;&lt;p&gt;No&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;题目描述：&lt;br&gt;对一棵二叉树的根到叶子节点进行输出，eg:  &lt;/p&gt;
&lt;pre&gt;&lt;code&gt;   1
 /   \
2     3
 \
  5
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;All root-to-leaf paths are: &lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[&amp;quot;1-&amp;gt;2-&amp;gt;5&amp;quot;, &amp;quot;1-&amp;gt;3&amp;quot;]
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="Python" scheme="http://yoursite.com/categories/Python/"/>
    
      <category term="leetcode" scheme="http://yoursite.com/categories/Python/leetcode/"/>
    
      <category term="二叉树遍历" scheme="http://yoursite.com/categories/Python/leetcode/%E4%BA%8C%E5%8F%89%E6%A0%91%E9%81%8D%E5%8E%86/"/>
    
    
      <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
      <category term="jobs" scheme="http://yoursite.com/tags/jobs/"/>
    
      <category term="leetcode" scheme="http://yoursite.com/tags/leetcode/"/>
    
      <category term="二叉树DFS遍历" scheme="http://yoursite.com/tags/%E4%BA%8C%E5%8F%89%E6%A0%91DFS%E9%81%8D%E5%8E%86/"/>
    
  </entry>
  
  <entry>
    <title>leetcode:290--Word Pattern</title>
    <link href="http://yoursite.com/2016/05/03/leetcode/word-pattern/"/>
    <id>http://yoursite.com/2016/05/03/leetcode/word-pattern/</id>
    <published>2016-05-03T11:59:59.000Z</published>
    <updated>2016-05-10T15:08:28.000Z</updated>
    
    <content type="html">&lt;p&gt;题目描述：&lt;br&gt;给定一个简单的模式pattern,判断给定的str是否与pattern符合.&lt;br&gt;Given a pattern and a string str, find if str follows the same pattern.  &lt;/p&gt;
&lt;p&gt;Here follow means a full match, such that there is a bijection between a letter in pattern and a non-empty word in str.  &lt;/p&gt;
&lt;p&gt;Examples:&lt;br&gt;pattern = “abba”, str = “dog cat cat dog” should return true.&lt;br&gt;pattern = “abba”, str = “dog cat cat fish” should return false.&lt;br&gt;pattern = “aaaa”, str = “dog cat cat dog” should return false.&lt;br&gt;pattern = “abba”, str = “dog dog dog dog” should return false.  &lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;solution：&quot;&gt;&lt;a href=&quot;#solution：&quot; class=&quot;headerlink&quot; title=&quot;solution：&quot;&gt;&lt;/a&gt;solution：&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;算法思想：&lt;/strong&gt;&lt;br&gt;My way:&lt;br&gt;1)利用dict可以value-key的方法,进行匹配判断&lt;br&gt;2)在lookup中没有重复的元素,如果有重复的元素用set过滤掉后,比较length,如果一样则是true,否则为false   &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Python Code:&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#-*-coding:utf-8 -*-  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Solution&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(object)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;wordPattern&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, pattern, str)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        pattern_list = list(pattern)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        str_list = str.split(&lt;span class=&quot;string&quot;&gt;&quot; &quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; len(pattern_list) != len(str_list):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;False&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        lookup = dict()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(len(pattern_list)):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;#如果i下标指向的元素没有在lookup里面，就add一下&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; pattern_list[i] &lt;span class=&quot;keyword&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; lookup:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                lookup[pattern_list[i]] = str_list[i]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;#如果i下标指向的元素在lookup里面，就判断，key值对应的value是否与str_list的元素相同&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; str_list[i] != lookup[pattern_list[i]]:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;False&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;#test lookup: print(lookup)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        key_set = set()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        value_set = set()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; key,value &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; lookup.items():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            key_set.add(key) &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            value_set.add(value)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;#test: print(key_set)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;#test: print(value_set)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; len(key_set) != len(value_set):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;False&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; __name__ == &lt;span class=&quot;string&quot;&gt;&quot;__main__&quot;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(Solution().wordPattern(&lt;span class=&quot;string&quot;&gt;&quot;abba&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;cat cat cat cat&quot;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;My-Problem&quot;&gt;&lt;a href=&quot;#My-Problem&quot; class=&quot;headerlink&quot; title=&quot;My Problem&quot;&gt;&lt;/a&gt;My Problem&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/kamyu104/LeetCode/blob/master/Python/word-pattern.py&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;参考答案1&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;My-Answer&quot;&gt;&lt;a href=&quot;#My-Answer&quot; class=&quot;headerlink&quot; title=&quot;My Answer&quot;&gt;&lt;/a&gt;My Answer&lt;/h3&gt;&lt;p&gt;从这一题终于感觉到自己有进步了,不容易啊!!!&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;题目描述：&lt;br&gt;给定一个简单的模式pattern,判断给定的str是否与pattern符合.&lt;br&gt;Given a pattern and a string str, find if str follows the same pattern.  &lt;/p&gt;
&lt;p&gt;Here follow means a full match, such that there is a bijection between a letter in pattern and a non-empty word in str.  &lt;/p&gt;
&lt;p&gt;Examples:&lt;br&gt;pattern = “abba”, str = “dog cat cat dog” should return true.&lt;br&gt;pattern = “abba”, str = “dog cat cat fish” should return false.&lt;br&gt;pattern = “aaaa”, str = “dog cat cat dog” should return false.&lt;br&gt;pattern = “abba”, str = “dog dog dog dog” should return false.  &lt;/p&gt;
    
    </summary>
    
      <category term="Python" scheme="http://yoursite.com/categories/Python/"/>
    
      <category term="leetcode" scheme="http://yoursite.com/categories/Python/leetcode/"/>
    
      <category term="dict" scheme="http://yoursite.com/categories/Python/leetcode/dict/"/>
    
    
      <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
      <category term="jobs" scheme="http://yoursite.com/tags/jobs/"/>
    
      <category term="leetcode" scheme="http://yoursite.com/tags/leetcode/"/>
    
      <category term="dict" scheme="http://yoursite.com/tags/dict/"/>
    
      <category term="set" scheme="http://yoursite.com/tags/set/"/>
    
  </entry>
  
  <entry>
    <title>leetcode:190--Reverse Bits</title>
    <link href="http://yoursite.com/2016/05/03/leetcode/reverse-bits/"/>
    <id>http://yoursite.com/2016/05/03/leetcode/reverse-bits/</id>
    <published>2016-05-03T11:59:59.000Z</published>
    <updated>2016-05-10T14:59:21.000Z</updated>
    
    <content type="html">&lt;p&gt;题目描述：十进制转换为二进制，32位二进制数进行逆置，得到的二进制再转换为十进制。&lt;br&gt;eg:8=&amp;gt;0000000000000000000….001000=&amp;gt;0001…..00000000000=&amp;gt;268435456&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;solution：&quot;&gt;&lt;a href=&quot;#solution：&quot; class=&quot;headerlink&quot; title=&quot;solution：&quot;&gt;&lt;/a&gt;solution：&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;算法思想：&lt;/strong&gt;&lt;br&gt;我的想法：1)进制的相互转换：十进制&amp;lt;=&amp;gt;二进制  2）类型的相互转换：string&amp;lt;=&amp;gt;list 十进制转换为二进制之后进行逆置操作，然后再转换为十进制。&lt;br&gt;显然这种方法是最笨的方法了，用二进制位操作是简单的方法，我咋又忘了呢？！！！&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Python Code:&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#-*- coding:utf-8 -*-&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#1)进制的相互转换：十进制&amp;lt;=&amp;gt;二进制&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#2）类型的相互转换：string&amp;lt;=&amp;gt;list&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Solution&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(object)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;reverseBits&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, n)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;#十进制转换为二进制&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        string = bin(n)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        length = len(string)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        real_string = string[&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;:length]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        real_len = length - &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        strlist = list(real_string)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;#初始化list&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        new_strlist = [&lt;span class=&quot;string&quot;&gt;&#39;0&#39;&lt;/span&gt;] * &lt;span class=&quot;number&quot;&gt;32&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;#reverse strlist&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(real_len):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            new_strlist[i] = strlist[real_len - i - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;#list to str&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        reverse_str = &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;.join(new_strlist)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;#二进制转换为十进制&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        result = int(reverse_str, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; result&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; __name__ == &lt;span class=&quot;string&quot;&gt;&quot;__main__&quot;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(Solution().reverseBits(&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;二进制位操作解法：&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Solution&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;# @param n, an integer&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;# @return an integer&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;reverseBits&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, n)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        result = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; xrange(&lt;span class=&quot;number&quot;&gt;32&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            result &amp;lt;&amp;lt;= &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            result |= n &amp;amp; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            n &amp;gt;&amp;gt;= &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; result&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; __name__ == &lt;span class=&quot;string&quot;&gt;&#39;__main__&#39;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; Solution().reverseBits(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;My-Problem&quot;&gt;&lt;a href=&quot;#My-Problem&quot; class=&quot;headerlink&quot; title=&quot;My Problem&quot;&gt;&lt;/a&gt;My Problem&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://blog.sina.com.cn/s/blog_4b5039210100gkst.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;二进制位操作&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;My-Answer&quot;&gt;&lt;a href=&quot;#My-Answer&quot; class=&quot;headerlink&quot; title=&quot;My Answer&quot;&gt;&lt;/a&gt;My Answer&lt;/h3&gt;&lt;p&gt;result位操作左移1位相当于乘以2的一次幂&lt;br&gt;n右移一位相当于除以2的一次幂。&lt;br&gt;这样实现逆置???不是很理解~&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;题目描述：十进制转换为二进制，32位二进制数进行逆置，得到的二进制再转换为十进制。&lt;br&gt;eg:8=&amp;gt;0000000000000000000….001000=&amp;gt;0001…..00000000000=&amp;gt;268435456&lt;/p&gt;
    
    </summary>
    
      <category term="Python" scheme="http://yoursite.com/categories/Python/"/>
    
      <category term="leetcode" scheme="http://yoursite.com/categories/Python/leetcode/"/>
    
      <category term="进制" scheme="http://yoursite.com/categories/Python/leetcode/%E8%BF%9B%E5%88%B6/"/>
    
      <category term="位操作" scheme="http://yoursite.com/categories/Python/leetcode/%E8%BF%9B%E5%88%B6/%E4%BD%8D%E6%93%8D%E4%BD%9C/"/>
    
    
      <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
      <category term="jobs" scheme="http://yoursite.com/tags/jobs/"/>
    
      <category term="leetcode" scheme="http://yoursite.com/tags/leetcode/"/>
    
      <category term="Python进制转换" scheme="http://yoursite.com/tags/Python%E8%BF%9B%E5%88%B6%E8%BD%AC%E6%8D%A2/"/>
    
      <category term="二进制位操作" scheme="http://yoursite.com/tags/%E4%BA%8C%E8%BF%9B%E5%88%B6%E4%BD%8D%E6%93%8D%E4%BD%9C/"/>
    
  </entry>
  
  <entry>
    <title>leetcode:58--Length of Last Word</title>
    <link href="http://yoursite.com/2016/05/03/leetcode/length-of-last-word/"/>
    <id>http://yoursite.com/2016/05/03/leetcode/length-of-last-word/</id>
    <published>2016-05-03T11:59:59.000Z</published>
    <updated>2016-05-10T14:54:31.000Z</updated>
    
    <content type="html">&lt;p&gt;题目描述：Given a string s consists of upper/lower-case alphabets and empty space characters ‘ ‘, return the length of last word in the string.&lt;/p&gt;
&lt;p&gt;If the last word does not exist, return 0.&lt;/p&gt;
&lt;p&gt;Note: A word is defined as a character sequence consists of non-space characters only.&lt;/p&gt;
&lt;p&gt;For example,&lt;br&gt;1）Given s = “Hello World”,return 5.&lt;br&gt;2）Given s = “a   “,return 1&lt;br&gt;3）Given s = “”,return 0 &lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;solution：&quot;&gt;&lt;a href=&quot;#solution：&quot; class=&quot;headerlink&quot; title=&quot;solution：&quot;&gt;&lt;/a&gt;solution：&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;算法思想：&lt;/strong&gt;&lt;br&gt;这道题只要能想到用Python中对应的函数，就非常快的能够解决，strip([chars])函数，官方解释是：Return a copy of the string with the leading and trailing characters removed.删除头和尾的字串。在这里正好可以满足像&lt;code&gt;“a   “&lt;/code&gt;这样的字串空格的过滤。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Python Code:&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#-*-coding:utf-8-*-&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Solution&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(object)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;lengthOfLastWord&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, s)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;comment&quot;&gt;#这里用到strip(rm)函数，strip可以删除s开头和结尾的rm，若为空，默认删除开头和结尾的空白字符&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; len(s.strip().split(&lt;span class=&quot;string&quot;&gt;&quot; &quot;&lt;/span&gt;)[&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; __name__ == &lt;span class=&quot;string&quot;&gt;&quot;__main__&quot;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(Solution().lengthOfLastWord(&lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;My-Problem&quot;&gt;&lt;a href=&quot;#My-Problem&quot; class=&quot;headerlink&quot; title=&quot;My Problem&quot;&gt;&lt;/a&gt;My Problem&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html?highlight=strip#str.strip&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;python 中 strip()函数 官方解释&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.cnblogs.com/kaituorensheng/archive/2013/05/23/3096028.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;strip()中文解释应用&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;My-Answer&quot;&gt;&lt;a href=&quot;#My-Answer&quot; class=&quot;headerlink&quot; title=&quot;My Answer&quot;&gt;&lt;/a&gt;My Answer&lt;/h3&gt;&lt;p&gt;No&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;题目描述：Given a string s consists of upper/lower-case alphabets and empty space characters ‘ ‘, return the length of last word in the string.&lt;/p&gt;
&lt;p&gt;If the last word does not exist, return 0.&lt;/p&gt;
&lt;p&gt;Note: A word is defined as a character sequence consists of non-space characters only.&lt;/p&gt;
&lt;p&gt;For example,&lt;br&gt;1）Given s = “Hello World”,return 5.&lt;br&gt;2）Given s = “a   “,return 1&lt;br&gt;3）Given s = “”,return 0 &lt;/p&gt;
    
    </summary>
    
      <category term="Python" scheme="http://yoursite.com/categories/Python/"/>
    
      <category term="leetcode" scheme="http://yoursite.com/categories/Python/leetcode/"/>
    
      <category term="list" scheme="http://yoursite.com/categories/Python/leetcode/list/"/>
    
    
      <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
      <category term="jobs" scheme="http://yoursite.com/tags/jobs/"/>
    
      <category term="leetcode" scheme="http://yoursite.com/tags/leetcode/"/>
    
      <category term="strip()函数" scheme="http://yoursite.com/tags/strip-%E5%87%BD%E6%95%B0/"/>
    
      <category term="list" scheme="http://yoursite.com/tags/list/"/>
    
  </entry>
  
</feed>
