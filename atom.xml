<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>MohnTech</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2016-08-05T17:17:52.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Mohn</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>论不会一丢丢前端的悲剧==</title>
    <link href="http://yoursite.com/2016/08/06/life/so%20sad/"/>
    <id>http://yoursite.com/2016/08/06/life/so sad/</id>
    <published>2016-08-06T11:59:59.000Z</published>
    <updated>2016-08-05T17:17:52.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;本文的主题就叫不会搞前端的悲剧…自己的博客都搭建不好…还有很多不合理的地方=.=    &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1.右侧栏如何变更到左侧?&lt;/li&gt;
&lt;li&gt;2.分类如何不这样丑陋的展开?&lt;/li&gt;
&lt;li&gt;3.访问次数为什么一直统计不上?&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;上面三个问题都是我特别想去解决而无能为力的=.=&lt;br&gt;哎…就先这么丑陋着吧~&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本文的主题就叫不会搞前端的悲剧…自己的博客都搭建不好…还有很多不合理的地方=.=    &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1.右侧栏如何变更到左侧?&lt;/li&gt;
&lt;li&gt;2.分类如何不这样丑陋的展开?&lt;/li&gt;
&lt;li&gt;3.访问次数为什么一直统计不上?&lt;/
    
    </summary>
    
      <category term="生活" scheme="http://yoursite.com/categories/%E7%94%9F%E6%B4%BB/"/>
    
      <category term="感受" scheme="http://yoursite.com/categories/%E7%94%9F%E6%B4%BB/%E6%84%9F%E5%8F%97/"/>
    
    
      <category term="前段" scheme="http://yoursite.com/tags/%E5%89%8D%E6%AE%B5/"/>
    
  </entry>
  
  <entry>
    <title>Java垃圾回收机制</title>
    <link href="http://yoursite.com/2016/08/05/java/GC/"/>
    <id>http://yoursite.com/2016/08/05/java/GC/</id>
    <published>2016-08-05T11:59:59.000Z</published>
    <updated>2016-08-05T15:18:16.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;主要是在Java堆上的操作 ，在内存管理这块没说Java堆，就是放在这里了~&lt;/p&gt;
&lt;p&gt;GC需要完成的三件事：  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;哪些内存需要回收？&lt;/li&gt;
&lt;li&gt;什么时候回收？&lt;/li&gt;
&lt;li&gt;如何回收？&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;本文摘自：&lt;a href=&quot;http://www.cnblogs.com/gw811/archive/2012/10/19/2730258.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Java垃圾收集器&lt;/a&gt;，实力好文，良心推荐。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;哪些内存需要回收？&quot;&gt;&lt;a href=&quot;#哪些内存需要回收？&quot; class=&quot;headerlink&quot; title=&quot;哪些内存需要回收？&quot;&gt;&lt;/a&gt;哪些内存需要回收？&lt;/h3&gt;&lt;p&gt;Java内存运行时区域的各个部分，其中&lt;strong&gt;程序计数器、虚拟机栈、本地方法栈&lt;/strong&gt;三个区域随线程而生，随线程而灭；栈中的栈帧随着方法的进入和退出而有条不紊地执行着出栈和入栈操作。每一个栈帧中分配多少内存基本上是在类结构确定下来时就已知的（尽管在运行期会由JIT编译器进行一些优化，但在本章基于概念模型的讨论中，大体上可以认为是编译期可知的），因此&lt;strong&gt;这几个区域的内存分配和回收都具备确定性&lt;/strong&gt;，在这几个区域内不需要过多考虑回收的问题，因为方法结束或线程结束时，内存自然就跟随着回收了。&lt;/p&gt;
&lt;h3 id=&quot;如何判断对象是否存活？&quot;&gt;&lt;a href=&quot;#如何判断对象是否存活？&quot; class=&quot;headerlink&quot; title=&quot;如何判断对象是否存活？&quot;&gt;&lt;/a&gt;如何判断对象是否存活？&lt;/h3&gt;&lt;h4 id=&quot;引用计数算法：&quot;&gt;&lt;a href=&quot;#引用计数算法：&quot; class=&quot;headerlink&quot; title=&quot;引用计数算法：&quot;&gt;&lt;/a&gt;引用计数算法：&lt;/h4&gt;&lt;p&gt;（ps:面今日头条的时候，自己胡诌的这个java也是靠引用计数算法==自己的脑洞呀，不过还真的有这个算法，而且很常用）  &lt;/p&gt;
&lt;p&gt;　　客观地说，引用计数算法（Reference Counting）的实现简单，判定效率也很高，在大部分情况下它都是一个不错的算法，也有一些比较著名的应用案例，例如微软的COM（Component Object Model）技术、使用ActionScript 3的FlashPlayer、Python语言以及在游戏脚本领域中被广泛应用的Squirrel中都使用了引用计数算法进行内存管理。但是，Java语言中没有选用引用计数算法来管理内存，其中最主要的原因是它很难解决对象之间的相互循环引用的问题。&lt;/p&gt;
&lt;h4 id=&quot;根搜索算法：&quot;&gt;&lt;a href=&quot;#根搜索算法：&quot; class=&quot;headerlink&quot; title=&quot;根搜索算法：&quot;&gt;&lt;/a&gt;根搜索算法：&lt;/h4&gt;&lt;p&gt;   在主流的商用程序语言中（Java和C#，甚至包括前面提到的古老的Lisp），都是使用根搜索算法（GC Roots Tracing）判定对象是否存活的。这个算法的基本思路就是通过一系列的名为“GC Roots”的对象作为起始点，从这些节点开始向下搜索，搜索所走过的路径称为引用链（Reference Chain），当一个对象到GC Roots没有任何引用链相连（用图论的话来说就是从GC Roots到这个对象不可达）时，则证明此对象是不可用的。如图3-1所示，对象object 5、object 6、object7虽然互相有关联，但是它们到GC Roots是不可达的，所以它们将会被判定为是可回收的对象。&lt;/p&gt;
&lt;p&gt;  在Java语言里，可作为GC Roots的对象包括下面几种：    &lt;/p&gt;
&lt;font color=&quot;green&quot;&gt;&lt;br&gt;&lt;br&gt;- 虚拟机栈（栈帧中的本地变量表）中的引用的对象。&lt;br&gt;- 方法区中的类静态属性引用的对象。&lt;br&gt;- 方法区中的常量引用的对象。&lt;br&gt;- 本地方法栈中JNI（即一般说的Native方法）的引用的对象。&lt;br&gt;&lt;br&gt;&lt;/font&gt;&lt;br&gt;&lt;img src=&quot;http://7xskaf.com1.z0.glb.clouddn.com/GC%E5%88%A4%E6%96%AD.PNG&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;#### 生存还是死亡？&lt;br&gt;在根搜索算法中不可达的对象，也并非是“非死不可”的，这时候它们暂时处于“缓刑”阶段，要真正宣告一个对象死亡，至少要经历两次标记过程：如果对象在进行根搜索后发现没有与GC Roots相连接的引用链，那它将会被第一次标记并且进行一次筛选，筛选的条件是此对象是否有必要执行finalize()方法。当对象没有覆盖finalize()方法，或者finalize()方法已经被虚拟机调用过，虚拟机将这两种情况都视为“没有必要执行”。&lt;br&gt;&lt;br&gt;&lt;font color=&quot;red&quot;&gt;下面这一段我也不是很懂…大概意思是通过两次判断是否执行死刑，&lt;br&gt;&lt;br&gt;- 第一次是根搜，发现它没与GC ROOTS连的引用链&lt;br&gt;- 第二次是判断是否执行finalize()…&lt;br&gt;&lt;br&gt;&lt;/font&gt;

&lt;p&gt;如果这个对象被判定为有必要执行finalize()方法，那么这个对象将会被放置在一个名为F-Queue的队列之中，并在稍后由一条由虚拟机自动建立的、低优先级的Finalizer线程去执行。这里所谓的“执行”是指虚拟机会触发这个方法，但并不承诺会等待它运行结束。这样做的原因是，如果一个对象在finalize()方法中执行缓慢，或者发生了死循环（更极端的情况），将很可能会导致F-Queue队列中的其他对象永久处于等待状态，甚至导致整个内存回收系统崩溃。finalize()方法是对象逃脱死亡命运的最后一次机会，稍后GC将对F-Queue中的对象进行第二次小规模的标记，如果对象要在finalize()中成功拯救自己—只要重新与引用链上的任何一个对象建立关联即可，譬如把自己（this关键字）赋值给某个类变量或对象的成员变量，那在第二次标记时它将被移除出“即将回收”的集合；如果对象这时候还没有逃脱，那它就真的离死不远了。&lt;/p&gt;
&lt;h3 id=&quot;如何回收？&quot;&gt;&lt;a href=&quot;#如何回收？&quot; class=&quot;headerlink&quot; title=&quot;如何回收？&quot;&gt;&lt;/a&gt;如何回收？&lt;/h3&gt;&lt;p&gt;不同平台的JVM回收的算法不同，博文作者依然很贴心的做了介绍，我就不写了，因为暂时理解不动了。。。=。=&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;主要是在Java堆上的操作 ，在内存管理这块没说Java堆，就是放在这里了~&lt;/p&gt;
&lt;p&gt;GC需要完成的三件事：  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;哪些内存需要回收？&lt;/li&gt;
&lt;li&gt;什么时候回收？&lt;/li&gt;
&lt;li&gt;如何回收？&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;本文摘自：&lt;a href=&quot;http://www.cnblogs.com/gw811/archive/2012/10/19/2730258.html&quot;&gt;Java垃圾收集器&lt;/a&gt;，实力好文，良心推荐。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Java" scheme="http://yoursite.com/categories/Java/"/>
    
      <category term="GC" scheme="http://yoursite.com/categories/Java/GC/"/>
    
    
      <category term="java" scheme="http://yoursite.com/tags/java/"/>
    
      <category term="GC" scheme="http://yoursite.com/tags/GC/"/>
    
  </entry>
  
  <entry>
    <title>Java内存管理机制&amp;JVM相关</title>
    <link href="http://yoursite.com/2016/08/04/java/java%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86%E6%9C%BA%E5%88%B6%20/"/>
    <id>http://yoursite.com/2016/08/04/java/java内存管理机制 /</id>
    <published>2016-08-04T11:59:59.000Z</published>
    <updated>2016-08-05T15:18:38.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;本文搁置了许久，因为看了许久，理解了许久，消化了许久。。。整理成两张图来粗浅的表达一下自己通过各种资料，理解的内存管理吧，当然不全面，也许有错误，大部分来自摘抄，如果有错误，希望看到的你帮忙指出，多谢！  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;JVM跨平台实现：&quot;&gt;&lt;a href=&quot;#JVM跨平台实现：&quot; class=&quot;headerlink&quot; title=&quot;JVM跨平台实现：&quot;&gt;&lt;/a&gt;JVM跨平台实现：&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;http://7xskaf.com1.z0.glb.clouddn.com/Java%E8%B7%A8%E5%B9%B3%E5%8F%B0%E7%9A%84%E5%AE%9E%E7%8E%B0.png&quot; alt=&quot;Java跨平台实现&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;Java内存管理机制：&quot;&gt;&lt;a href=&quot;#Java内存管理机制：&quot; class=&quot;headerlink&quot; title=&quot;Java内存管理机制：&quot;&gt;&lt;/a&gt;Java内存管理机制：&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;http://7xskaf.com1.z0.glb.clouddn.com/Java%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86%E6%9C%BA%E5%88%B6.png&quot; alt=&quot;Java内存管理机制&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;summary&quot;&gt;&lt;a href=&quot;#summary&quot; class=&quot;headerlink&quot; title=&quot;summary:&quot;&gt;&lt;/a&gt;summary:&lt;/h3&gt;&lt;p&gt;编译为何？解释为何？堆栈为何？GC算法为何？&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本文搁置了许久，因为看了许久，理解了许久，消化了许久。。。整理成两张图来粗浅的表达一下自己通过各种资料，理解的内存管理吧，当然不全面，也许有错误，大部分来自摘抄，如果有错误，希望看到的你帮忙指出，多谢！  &lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Java" scheme="http://yoursite.com/categories/Java/"/>
    
      <category term="内存管理" scheme="http://yoursite.com/categories/Java/%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/"/>
    
    
      <category term="java" scheme="http://yoursite.com/tags/java/"/>
    
      <category term="内存" scheme="http://yoursite.com/tags/%E5%86%85%E5%AD%98/"/>
    
  </entry>
  
  <entry>
    <title>浅谈linux内存管理机制</title>
    <link href="http://yoursite.com/2016/07/26/linux/linux%20%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/"/>
    <id>http://yoursite.com/2016/07/26/linux/linux 内存管理/</id>
    <published>2016-07-25T16:52:59.000Z</published>
    <updated>2016-07-25T16:52:29.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;场景描述:今天换了高大上的显示器,但是发现电脑有点卡=.=毕竟用了6年,就试图对Ubuntu的内存管理下,就像windows那样,然而发现linux的内存管理机制和windows并不相同,有着非常大的区别,windows是只在需要内存时,才为应用程序分配内存,并不能充分利用大容量的内存空间.而linux每增加一些物理内存,都可以将其充分的利用起来.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;linux下内存管理的命令&quot;&gt;&lt;a href=&quot;#linux下内存管理的命令&quot; class=&quot;headerlink&quot; title=&quot;linux下内存管理的命令:&quot;&gt;&lt;/a&gt;linux下内存管理的命令:&lt;/h3&gt;&lt;p&gt;  &lt;code&gt;vmstat -s&lt;/code&gt; -s：显示内存相关统计信息及多种系统活动数量。&lt;br&gt;  &lt;img src=&quot;http://7xskaf.com1.z0.glb.clouddn.com/vmstat.png&quot; alt=&quot;vmstat&quot;&gt;&lt;/p&gt;
&lt;p&gt;  &lt;code&gt;free -m/k/b&lt;/code&gt;用来查看内存使用情况的.&lt;br&gt;  &lt;img src=&quot;http://7xskaf.com1.z0.glb.clouddn.com/free.png&quot; alt=&quot;free&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;参考链接&quot;&gt;&lt;a href=&quot;#参考链接&quot; class=&quot;headerlink&quot; title=&quot;参考链接:&quot;&gt;&lt;/a&gt;参考链接:&lt;/h3&gt;&lt;p&gt; &lt;a href=&quot;http://os.51cto.com/art/201309/411937.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;浅谈Linux内存管理机制&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;http://www.cnblogs.com/zhaoyl/p/3695517.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Linux内存管理原理&lt;/a&gt;  &lt;/p&gt;
&lt;h3 id=&quot;感悟&quot;&gt;&lt;a href=&quot;#感悟&quot; class=&quot;headerlink&quot; title=&quot;感悟:&quot;&gt;&lt;/a&gt;感悟:&lt;/h3&gt;&lt;p&gt; 基本上看完第一篇觉得,啊,原来linux下的内存管理机制是酱紫的,感觉知道了当时学的操作系统这门课的目的了.   &lt;/p&gt;
&lt;p&gt; cache是页高速缓存,对文件做缓冲,直接用来记忆我们打开过的文件和程序. buffered是块设备缓存.&lt;br&gt; Swap 做交换的地方是虚存. 虚拟存储就是将硬盘的一小部分空间虚拟成内存空间.&lt;br&gt; &lt;strong&gt;虚拟内存&lt;/strong&gt;是计算机系统内存管理的一种技术。 它使得应用程序认为它拥有连续的可用的内存（一个连续完整的地址空间），而实际上，它通常是被分隔成多个物理内存碎片，还有部分暂时存储在外部磁盘存储器上，在需要时进行数据交换。&lt;br&gt; 注意：虚拟内存不只是“用磁盘空间来扩展物理内存”的意思——这只是扩充内存级别以使其包含硬盘驱动器而已。把内存扩展到磁盘只是使用虚拟内存技术的一个结果，它的作用也可以通过覆盖或者把处于不活动状态的程序以及它们的数据全部交换到磁盘上等方式来实现。对虚拟内存的定义是基于对地址空间的重定义的，即把地址空间定义为“连续的虚拟内存地址”，以借此“欺骗”程序，使它们以为自己正在使用一大块的“连续”地址。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;场景描述:今天换了高大上的显示器,但是发现电脑有点卡=.=毕竟用了6年,就试图对Ubuntu的内存管理下,就像windows那样,然而发现linux的内存管理机制和windows并不相同,有着非常大的区别,windows是只在需要内存时,才为应用程序分配内存,并不能充分利用大容量的内存空间.而linux每增加一些物理内存,都可以将其充分的利用起来.&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://yoursite.com/categories/Linux/"/>
    
      <category term="内存管理" scheme="http://yoursite.com/categories/Linux/%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/"/>
    
    
      <category term="linux" scheme="http://yoursite.com/tags/linux/"/>
    
      <category term="内存管理" scheme="http://yoursite.com/tags/%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>今日头条数据实习生面试小记</title>
    <link href="http://yoursite.com/2016/07/25/interview/%E4%BB%8A%E6%97%A5%E5%A4%B4%E6%9D%A1%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E9%9D%A2%E8%AF%95/"/>
    <id>http://yoursite.com/2016/07/25/interview/今日头条数据开发面试/</id>
    <published>2016-07-25T11:59:59.000Z</published>
    <updated>2016-08-05T07:32:00.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;投了头条的机器学习实习生，后来被调到了数据实习生进行面试，真是年少无知，不知死活的投了水这么深的数据方向，虽然面的很惨。。。主要是自己当时脑抽了=。=，但是依然不知死活的准备投数据实习生，不将就。。。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;面试问题&quot;&gt;&lt;a href=&quot;#面试问题&quot; class=&quot;headerlink&quot; title=&quot;面试问题&quot;&gt;&lt;/a&gt;面试问题&lt;/h3&gt;&lt;h4 id=&quot;1-Java内存管理机制？JVM的运行机制？gc算法？&quot;&gt;&lt;a href=&quot;#1-Java内存管理机制？JVM的运行机制？gc算法？&quot; class=&quot;headerlink&quot; title=&quot;1.Java内存管理机制？JVM的运行机制？gc算法？&quot;&gt;&lt;/a&gt;1.Java内存管理机制？JVM的运行机制？gc算法？&lt;/h4&gt;&lt;p&gt;内心os：上来就被这个问题问的有点懵逼，据面试官说这是基础问题，好吧，虽然补了很多天的Think in java ， 依然是没彻底的搞清楚Java内存管理，只是粗浅的了解了gc垃圾回收机制。当我说出了垃圾回收机制，面试小哥就开始狂问我，gc算法怎么判断是否回收呢？于是呢，我根据自己的脑补，回答曰，是根据对象的引用计数判断的，当没有引用的时候，就可以回收。。。很合情合理是吧，但是错了，小哥告诉我说是gc算法是&lt;strong&gt;根搜索算法&lt;/strong&gt;。。。准备单独立一篇博客好好唠唠这些基础知识&lt;/p&gt;
&lt;h4 id=&quot;2-简历上项目经验的相关问题：图像识别的过程？讲一个主要的图像识别的算法？&quot;&gt;&lt;a href=&quot;#2-简历上项目经验的相关问题：图像识别的过程？讲一个主要的图像识别的算法？&quot; class=&quot;headerlink&quot; title=&quot;2.简历上项目经验的相关问题：图像识别的过程？讲一个主要的图像识别的算法？&quot;&gt;&lt;/a&gt;2.简历上项目经验的相关问题：图像识别的过程？讲一个主要的图像识别的算法？&lt;/h4&gt;&lt;p&gt;图像识别项目：图像识别的过程，这个比较easy，主要讲解一个算法，没准备呀，这就比较尴尬了，于是讲了讲之前自己玩python做字符图像处理时用的一个灰度化算法——加权平均法   &lt;code&gt;f(i,j)=0.30R(i,j)+0.59G(i,j)+0.11B(i,j))&lt;/code&gt; 尴尬的是这个公式系数还写错了，anyway，这个问题总算是回答上来了。。。&lt;br&gt;然后依然是图像识别算法不依不饶的问：中值滤波，纳尼，这个了解过，但是没记住啊~小哥看我有点尴尬就开始引导我说，我就开始胡言乱语一通。。。  &lt;/p&gt;
&lt;h5 id=&quot;中值滤波：&quot;&gt;&lt;a href=&quot;#中值滤波：&quot; class=&quot;headerlink&quot; title=&quot;中值滤波：&quot;&gt;&lt;/a&gt;中值滤波：&lt;/h5&gt;&lt;p&gt;&lt;strong&gt;内容简介：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;font color=&quot;green&quot;&gt;中值滤波&lt;/font&gt;——处理随机噪声的滤波器：中值滤波用一个含有奇数点的滑动窗口，将领域中的像素按灰度级排序，取中间值为输出像素。 中值滤波的效果取决于两个要素：&lt;strong&gt;领域的空间范围&lt;/strong&gt;和&lt;strong&gt;中值计算中涉及的像素数&lt;/strong&gt;（当空间范围较大时， 一般只用某个稀疏矩阵做计算）。 它的优点在于能够在抑制随机噪声的同时不使边缘模糊。&lt;br&gt;奇数点的滑动窗口，可能的&lt;strong&gt;形状&lt;/strong&gt;是：线状、方形、圆形以及十字形。&lt;br&gt;数字图像是以二维图像来描述的，故对图像的滤波也就是对二维数据序列的滤波，这个二维序列相当于一个二维矩阵，里面元素的值就是每个像素点的像素。&lt;br&gt;中值滤波是图像平滑的一种方法 它是一种&lt;strong&gt;非线性平滑滤波技术&lt;/strong&gt;，在一定条件下可以克服线性滤波带来的图像细节的模糊问题，特别是针对被椒盐噪声污染的图像。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;算法描述：&lt;/strong&gt;  &lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[1] 获得源图像的首地址及图像的宽和高。  
[2] 开辟一块内存缓冲区，用以暂存结果图像，并初始化为0。  
[3] 逐个扫描图像中的像素点，将其邻域各元素的像素值从小到大进行排序，将求得到的中间值赋值给目标图像中与当前点对应的像素点。  
[4] 循环步骤[3]，直到处理完源图像的全部像素点。  
[5] 将结果从内存缓冲区复制到源图像的数据区。  
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;OpenCV对应的中值滤波函数：&lt;/strong&gt;&lt;br&gt;&lt;code&gt;cvSmooth(in,out,CV_MEDIAN,3,workImg-&amp;gt;nChannels);&lt;/code&gt;&lt;/p&gt;
&lt;h5 id=&quot;高斯滤波：&quot;&gt;&lt;a href=&quot;#高斯滤波：&quot; class=&quot;headerlink&quot; title=&quot;高斯滤波：&quot;&gt;&lt;/a&gt;高斯滤波：&lt;/h5&gt;&lt;p&gt;&lt;strong&gt;内容简介：&lt;/strong&gt;&lt;br&gt;高斯滤波是一种&lt;strong&gt;线性平滑滤波&lt;/strong&gt;，适用于消除高斯噪声，广泛应用于图像处理的减噪过程。通俗的讲，高斯滤波就是对整幅图像进行&lt;strong&gt;加权平均&lt;/strong&gt;的过程，每一个像素点的值，都由其本身和邻域内的其他像素值经过加权平均后得到。&lt;/p&gt;
&lt;p&gt;高斯滤波的具体操作是：用一个模板(或称卷积、掩模)扫描图像中的每一个像素，用模板确定的邻域内像素的加权平均灰度值去替代模板中心像素点的值。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;OpenCV对应的高斯滤波函数：&lt;/strong&gt;&lt;br&gt;&lt;code&gt;void cvSmooth(const CvArr* src, CvArr* dst,intsmoothtype=CV_GAUSSIAN,int param1=3, int param2=0,double param3=0, doubleparam4=0 );&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&quot;算法问题：&quot;&gt;&lt;a href=&quot;#算法问题：&quot; class=&quot;headerlink&quot; title=&quot;算法问题：&quot;&gt;&lt;/a&gt;算法问题：&lt;/h3&gt;&lt;p&gt;Q：给定一个集合，求子集。&lt;br&gt;A：算法思想：很容易就想到是递归求子集，因为不能重复，每次要把当前的元素给去掉，递归去掉当前元素的子集。&lt;/p&gt;
&lt;h3 id=&quot;面试总结：&quot;&gt;&lt;a href=&quot;#面试总结：&quot; class=&quot;headerlink&quot; title=&quot;面试总结：&quot;&gt;&lt;/a&gt;面试总结：&lt;/h3&gt;&lt;p&gt;哈，这次纯属自己没做好算法题，面试我的小哥人真的超好，代码给了我五次机会啊，可是五次呢，然而都没有达到预期的希望。。。还是一心想进头条做做数据，继续努力吧~&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;投了头条的机器学习实习生，后来被调到了数据实习生进行面试，真是年少无知，不知死活的投了水这么深的数据方向，虽然面的很惨。。。主要是自己当时脑抽了=。=，但是依然不知死活的准备投数据实习生，不将就。。。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="面试" scheme="http://yoursite.com/categories/%E9%9D%A2%E8%AF%95/"/>
    
      <category term="数据" scheme="http://yoursite.com/categories/%E9%9D%A2%E8%AF%95/%E6%95%B0%E6%8D%AE/"/>
    
    
      <category term="jobs" scheme="http://yoursite.com/tags/jobs/"/>
    
      <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
      <category term="Data" scheme="http://yoursite.com/tags/Data/"/>
    
  </entry>
  
  <entry>
    <title>Socket连接和http连接</title>
    <link href="http://yoursite.com/2016/07/20/NetWork/socket&http/"/>
    <id>http://yoursite.com/2016/07/20/NetWork/socket&http/</id>
    <published>2016-07-20T11:59:59.000Z</published>
    <updated>2016-07-20T16:06:42.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;最近在整理计算机网络的知识,正好又遇到爬虫的实践,再加上这学期写了两个socket编程的代码,于是整理一下基础知识吧,本文内容转载整理自:&lt;a href=&quot;http://itindex.net/detail/47119-socket-http&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;socket与http&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;几个概念&quot;&gt;&lt;a href=&quot;#几个概念&quot; class=&quot;headerlink&quot; title=&quot;几个概念:&quot;&gt;&lt;/a&gt;几个概念:&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;HTTP协议：&lt;/strong&gt;简单对象访问协议，对应于应用层，HTTP协议是基于TCP连接的.  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;tcp协议：&lt;/strong&gt;对应于传输层  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;ip协议：&lt;/strong&gt; 对应于网络层    &lt;/p&gt;
&lt;p&gt;TCP/IP是传输层协议，主要解决数据如何在网络中传输；而HTTP是应用层协议，主要解决如何包装数据。  &lt;/p&gt;
&lt;p&gt;Socket是对TCP/IP协议的封装，Socket本身并不是协议，而是一个调用接口（API），通过Socket，我们才能使用TCP/IP协议.   &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;http连接：&lt;/strong&gt;http连接就是所谓的短连接，即客户端向服务器端发送一次请求，服务器端响应后连接即会断掉；  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;socket连接：&lt;/strong&gt;socket连接就是所谓的长连接，理论上客户端和服务器端一旦建立起连接将不会主动断掉；但是由于各种环境因素可能会是连接断开，比如说：服务器端或客户端主机down了，网络故障，或者两者之间长时间没有数据传输，网络防火墙可能会断开该连接以释放网络资源。所以当一个socket连接中没有数据的传输，那么为了维持连接需要发送心跳消息~~具体心跳消息格式是开发者自己定义的.  &lt;/p&gt;
&lt;h3 id=&quot;TCP连接&quot;&gt;&lt;a href=&quot;#TCP连接&quot; class=&quot;headerlink&quot; title=&quot;TCP连接&quot;&gt;&lt;/a&gt;TCP连接&lt;/h3&gt;&lt;p&gt;要想明白Socket连接，先要明白TCP连接。手机能够使用联网功能是因为手机底层实现了TCP/IP协议，可以使手机终端通过无线网络建立TCP连接。TCP协议可以对上层网络提供接口，使上层网络数据的传输建立在“无差别”的网络之上。&lt;/p&gt;
&lt;p&gt;建立起一个TCP连接需要经过“三次握手”：  &lt;/p&gt;
&lt;p&gt;第一次握手：客户端发送syn包(syn=j)到服务器，并进入SYN_SEND状态，等待服务器确认；  &lt;/p&gt;
&lt;p&gt;第二次握手：服务器收到syn包，必须确认客户的SYN（ack=j+1），同时自己也发送一个SYN包（syn=k），即SYN+ACK包，此时服务器进入SYN_RECV状态；  &lt;/p&gt;
&lt;p&gt;第三次握手：客户端收到服务器的SYN＋ACK包，向服务器发送确认包ACK(ack=k+1)，此包发送完毕，客户端和服务器进入ESTABLISHED状态，完成三次握手。   &lt;/p&gt;
&lt;p&gt;握手过程中传送的包里不包含数据，三次握手完毕后，客户端与服务器才正式开始传送数据。理想状态下，TCP连接一旦建立，在通信双方中的任何一方主动关闭连接之前，TCP 连接都将被一直保持下去。断开连接时服务器和客户端均可以主动发起断开TCP连接的请求，断开过程需要经过“四次握手”（过程就不细写了，就是服务器和客户端交互，最终确定断开）  &lt;/p&gt;
&lt;h3 id=&quot;HTTP连接&quot;&gt;&lt;a href=&quot;#HTTP连接&quot; class=&quot;headerlink&quot; title=&quot;HTTP连接&quot;&gt;&lt;/a&gt;HTTP连接&lt;/h3&gt;&lt;p&gt;HTTP协议即超文本传送协议(Hypertext Transfer Protocol )，是Web联网的基础，也是手机联网常用的协议之一，HTTP协议是建立在TCP协议之上的一种应用。  &lt;/p&gt;
&lt;p&gt;HTTP连接最显著的特点是客户端发送的每次请求都需要服务器回送响应，在请求结束后，会主动释放连接。从建立连接到关闭连接的过程称为“一次连接”。  &lt;/p&gt;
&lt;p&gt;1）在HTTP 1.0中，客户端的每次请求都要求建立一次单独的连接，在处理完本次请求后，就自动释放连接。   &lt;/p&gt;
&lt;p&gt;2）在HTTP 1.1中则可以在一次连接中处理多个请求，并且多个请求可以重叠进行，不需要等待一个请求结束后再发送下一个请求。   &lt;/p&gt;
&lt;p&gt;由于HTTP在每次请求结束后都会主动释放连接，因此HTTP连接是一种“短连接”，要保持客户端程序的在线状态，需要不断地向服务器发起连接请求。通常的做法是即时不需要获得任何数据，客户端也保持每隔一段固定的时间向服务器发送一次“保持连接”的请求，服务器在收到该请求后对客户端进行回复，表明知道客户端“在线”。若服务器长时间无法收到客户端的请求，则认为客户端“下线”，若客户端长时间无法收到服务器的回复，则认为网络已经断开。  &lt;/p&gt;
&lt;h3 id=&quot;socket原理&quot;&gt;&lt;a href=&quot;#socket原理&quot; class=&quot;headerlink&quot; title=&quot;socket原理&quot;&gt;&lt;/a&gt;socket原理&lt;/h3&gt;&lt;h4 id=&quot;套接字概念&quot;&gt;&lt;a href=&quot;#套接字概念&quot; class=&quot;headerlink&quot; title=&quot;套接字概念:&quot;&gt;&lt;/a&gt;套接字概念:&lt;/h4&gt;&lt;p&gt;套接字（socket）是通信的基石，是支持TCP/IP协议的网络通信的基本操作单元。它是网络通信过程中端点的抽象表示，包含进行网络通信必须的五种信息：&lt;font color=&quot;green&quot;&gt;连接使用的协议，本地主机的IP地址，本地进程的协议端口，远地主机的IP地址，远地进程的协议端口。&lt;/font&gt;  &lt;/p&gt;
&lt;p&gt;应用层通过传输层进行数据通信时，TCP会遇到同时为多个应用程序进程提供并发服务的问题。&lt;font color=&quot;green&quot;&gt;多个TCP连接或多个应用程序进程可能需要通过同一个 TCP协议端口传输数据。为了区别不同的应用程序进程和连接，许多计算机操作系统为应用程序与TCP／IP协议交互提供了套接字(Socket)接口。&lt;/font&gt;应用层可以和传输层通过Socket接口，区分来自不同应用程序进程或网络连接的通信，实现数据传输的并发服务。  &lt;/p&gt;
&lt;h4 id=&quot;建立socket连接&quot;&gt;&lt;a href=&quot;#建立socket连接&quot; class=&quot;headerlink&quot; title=&quot;建立socket连接&quot;&gt;&lt;/a&gt;建立socket连接&lt;/h4&gt;&lt;p&gt;建立Socket连接至少需要一对套接字，其中一个运行于客户端，称为ClientSocket ，另一个运行于服务器端，称为ServerSocket 。  &lt;/p&gt;
&lt;p&gt;套接字之间的连接过程分为三个步骤：&lt;font color=&quot;green&quot;&gt;服务器监听，客户端请求，连接确认。&lt;/font&gt;   &lt;/p&gt;
&lt;p&gt;服务器监听：服务器端套接字并不定位具体的客户端套接字，而是处于等待连接的状态，实时监控网络状态，等待客户端的连接请求。  &lt;/p&gt;
&lt;p&gt;客户端请求：指客户端的套接字提出连接请求，要连接的目标是服务器端的套接字。为此，客户端的套接字必须首先描述它要连接的服务器的套接字，指出服务器端套接字的地址和端口号，然后就向服务器端套接字提出连接请求。   &lt;/p&gt;
&lt;p&gt;连接确认：当服务器端套接字监听到或者说接收到客户端套接字的连接请求时，就响应客户端套接字的请求，建立一个新的线程，把服务器端套接字的描述发给客户端，一旦客户端确认了此描述，双方就正式建立连接。而服务器端套接字继续处于监听状态，继续接收其他客户端套接字的连接请求。  &lt;/p&gt;
&lt;h3 id=&quot;socket连接与tcp连接&quot;&gt;&lt;a href=&quot;#socket连接与tcp连接&quot; class=&quot;headerlink&quot; title=&quot;socket连接与tcp连接&quot;&gt;&lt;/a&gt;socket连接与tcp连接&lt;/h3&gt;&lt;p&gt;创建Socket连接时，可以指定使用的传输层协议，Socket可以支持不同的传输层协议（TCP或UDP），当使用TCP协议进行连接时，该Socket连接就是一个TCP连接。 &lt;/p&gt;
&lt;h3 id=&quot;Socket连接与HTTP连接&quot;&gt;&lt;a href=&quot;#Socket连接与HTTP连接&quot; class=&quot;headerlink&quot; title=&quot;Socket连接与HTTP连接&quot;&gt;&lt;/a&gt;Socket连接与HTTP连接&lt;/h3&gt;&lt;p&gt;由于通常情况下Socket连接就是TCP连接，因此Socket连接一旦建立，通信双方即可开始相互发送数据内容，直到双方连接断开。但在实际网络应用中，客户端到服务器之间的通信往往需要穿越多个中间节点，例如路由器、网关、防火墙等，大部分防火墙默认会关闭长时间处于非活跃状态的连接而导致 Socket 连接断连，因此需要通过轮询告诉网络，该连接处于活跃状态。  &lt;/p&gt;
&lt;p&gt;而HTTP连接使用的是“请求—响应”的方式，不仅在请求时需要先建立连接，而且需要客户端向服务器发出请求后，服务器端才能回复数据。  &lt;/p&gt;
&lt;p&gt;很多情况下，需要服务器端主动向客户端推送数据，保持客户端与服务器数据的实时与同步。此时若双方建立的是Socket连接，服务器就可以直接将数据传送给客户端；若双方建立的是HTTP连接，则服务器需要等到客户端发送一次请求后才能将数据传回给客户端，因此，客户端定时向服务器端发送连接请求，不仅可以保持在线，同时也是在“询问”服务器是否有新的数据，如果有就将数据传给客户端。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;最近在整理计算机网络的知识,正好又遇到爬虫的实践,再加上这学期写了两个socket编程的代码,于是整理一下基础知识吧,本文内容转载整理自:&lt;a href=&quot;http://itindex.net/detail/47119-socket-http&quot;&gt;socket与http&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="计算机网络" scheme="http://yoursite.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>Python爬虫初阶——爬取豆瓣Top250中没有看过的电影</title>
    <link href="http://yoursite.com/2016/07/17/Python/Python%E7%88%AC%E8%99%AB2/"/>
    <id>http://yoursite.com/2016/07/17/Python/Python爬虫2/</id>
    <published>2016-07-17T11:59:59.000Z</published>
    <updated>2016-07-18T12:44:48.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;实现了TOP250的爬取，就要真正的开始实现我的目的了：嘿嘿，那就是爬取unwatched的电影了！前后花了大概一天的时间，遇到的问题还是很有价值的，爬取成功的那一刻，还是蛮有成就感的，这次先上效果图，让我先小小的傲娇一秒钟，看到这篇文章的Python大神们，希望你们能留下宝贵的意见，帮助爬虫小白成长~&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;模拟登录&lt;/li&gt;
&lt;li&gt;验证码实现&lt;/li&gt;
&lt;li&gt;动态网页获取参数值&lt;/li&gt;
&lt;li&gt;cookie保存信息 &lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;效果展示&quot;&gt;&lt;a href=&quot;#效果展示&quot; class=&quot;headerlink&quot; title=&quot;效果展示&quot;&gt;&lt;/a&gt;效果展示&lt;/h2&gt;&lt;div style=&quot;width:100%&quot;&gt;&lt;br&gt;&lt;img width=&quot;30%&quot; src=&quot;http://7xskaf.com1.z0.glb.clouddn.com/Unwatched1.PNG&quot; style=&quot;float:left;&quot;&gt;&lt;br&gt;&lt;img width=&quot;30%&quot; src=&quot;http://7xskaf.com1.z0.glb.clouddn.com/Uwatched2.PNG&quot; style=&quot;float:left;&quot;&gt;&lt;br&gt;&lt;img width=&quot;30%&quot; src=&quot;http://7xskaf.com1.z0.glb.clouddn.com/Uwatched3.PNG&quot; style=&quot;float:left;&quot;&gt;&lt;br&gt;&lt;div style=&quot;clear:both&quot;&gt;&lt;/div&gt;&lt;br&gt;&lt;/div&gt;


&lt;p&gt;这些都是博主还没看过的TOP250榜单里面的电影，总共还有168部未看，剩下的还是蛮多的=.=&lt;/p&gt;
&lt;h2 id=&quot;分析与实现&quot;&gt;&lt;a href=&quot;#分析与实现&quot; class=&quot;headerlink&quot; title=&quot;分析与实现&quot;&gt;&lt;/a&gt;分析与实现&lt;/h2&gt;&lt;h3 id=&quot;重点预览&quot;&gt;&lt;a href=&quot;#重点预览&quot; class=&quot;headerlink&quot; title=&quot;重点预览&quot;&gt;&lt;/a&gt;重点预览&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;模拟登录&lt;/li&gt;
&lt;li&gt;验证码实现&lt;/li&gt;
&lt;li&gt;动态网页获取参数值&lt;/li&gt;
&lt;li&gt;cookie保存信息  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;下面我们一一击破上面的难点问题&lt;/p&gt;
&lt;h3 id=&quot;模拟登录&quot;&gt;&lt;a href=&quot;#模拟登录&quot; class=&quot;headerlink&quot; title=&quot;模拟登录&quot;&gt;&lt;/a&gt;模拟登录&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;与TOP250抓取的主要不同之处在于，获取我个人没有看过的电影，需要登录，这样就涉及到了模拟登录。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;下面讲一讲模拟登录：&lt;br&gt;&lt;a href=&quot;http://blog.csdn.net/figo829/article/details/18728381#t0&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;参考链接：python爬虫实践之模拟登录&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;浏览器访问服务器的过程：&quot;&gt;&lt;a href=&quot;#浏览器访问服务器的过程：&quot; class=&quot;headerlink&quot; title=&quot;浏览器访问服务器的过程：&quot;&gt;&lt;/a&gt;浏览器访问服务器的过程：&lt;/h4&gt;&lt;p&gt;在用户访问网页时，不论是通过URL输入域名或IP，还是点击链接，浏览器向WEB服务器发出了一个HTTP请求（Http Request），WEB服务器接收到客户端浏览器的请求之后，响应客户端的请求，发回相应的响应信息（Http Response），浏览器解析引擎，排版引擎分析返回的内容，呈现给用户。WEB应用程序在于服务器交互的过程中，HTTP请求和响应时发送的都是一个消息结构。&lt;/p&gt;
&lt;h4 id=&quot;Http消息&quot;&gt;&lt;a href=&quot;#Http消息&quot; class=&quot;headerlink&quot; title=&quot;Http消息:&quot;&gt;&lt;/a&gt;Http消息:&lt;/h4&gt;&lt;p&gt;当浏览器向服务器发送请求的时候，发出http请求消息报文，服务器返回数据时，发出http响应消息报文，这两种类型的消息都是由一个起始行，消息头，一个指示消息头结束的空行和可选的消息体组成。&lt;br&gt;&lt;strong&gt;Http requests:&lt;/strong&gt;  Http请求消息中，&lt;font color=&quot;green&quot;&gt;起始行包括请求方法,请求的资源， HTTP协议的版本号，消息头包含各种属性，消息体包含数据。&lt;/font&gt;GET请求并没有消息主体，因此在消息头后的空白行中没有其他数据。&lt;br&gt;&lt;strong&gt;Http response:&lt;/strong&gt;Http响应消息中，&lt;font color=&quot;green&quot;&gt;起始行包括HTTP协议版本，http状态码和状态，消息头包含各种属性，&lt;/font&gt;消息体包含服务器返回的数据内容。   &lt;/p&gt;
&lt;p&gt;如下图所示:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xskaf.com1.z0.glb.clouddn.com/summary.png&quot; alt=&quot;summary&quot;&gt;&lt;/p&gt;
&lt;p&gt;上图展示的是Get请求方式的request，比如还没登录的时候，就会是Get的请求方式，这时候是没有data数据的，&lt;br&gt;然而当我登录之后，请求方式成了Post，那么request headers下面就有了 form_data这样的表单数据。&lt;/p&gt;
&lt;p&gt;如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xskaf.com1.z0.glb.clouddn.com/summary2.png&quot; alt=&quot;summary2&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;cookie：&quot;&gt;&lt;a href=&quot;#cookie：&quot; class=&quot;headerlink&quot; title=&quot;cookie：&quot;&gt;&lt;/a&gt;cookie：&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;什么是cookie？&lt;br&gt;当用户通过浏览器首次访问一个域名时，访问的WEB服务器会给客户端发送数据，以保持WEB服务器与客户端之间的状态保持，这些数据就是Cookie，它是 Internet 站点创建的 ,为了辨别用户身份而储存在用户本地终端上的数据，Cookie中的信息一般都是经过加密的，Cookie存在缓存中或者硬盘中，在硬盘中的是一些小文本文件,当你访问该网站时，就会读取对应网站的Cookie信息，Cookie有效地提升了我们的上网体验。一般而言，一旦将 Cookie 保存在计算机上，则只有创建该 Cookie 的网站才能读取它。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;为什么用cookie？&lt;br&gt;Http协议是一个&lt;font color=&quot;green&quot;&gt;无状态的面向连接的协议&lt;/font&gt;，Http协议是基于tcp/ip协议层之上的协议，当客户端与服务器建立连接之后，它们之间的TCP连接一直都是保持的，至于保持的时间是多久，是通过服务器端来设置的，当客户端再一次访问该服务器时，会继续使用上一次建立的连接，但是，由于Http协议是无状态的，WEB服务器并不知道这两个请求是否同一个客户端，这两次请求之间是独立的。 为了解决这个问题， Web程序引入了Cookie机制来维护状态.cookie可以记录用户的登录状态，通常web服务器会在用户登录成功后下发一个签名来标记session的有效性，这样免去了用户多次认证和登录网站。记录用户的访问状态。  &lt;/p&gt;
&lt;font color=&quot;green&quot;&gt;cookie也是我们解决验证码问题的关键！因为我们不能每次都输入验证码，将登录的信息保存在cookie中，方便登录。&lt;/font&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;cookie的种类？&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;1. 会话Cookie(Session Cookie)：这个类型的cookie只在会话期间内有效，保存在浏览器的缓存之中，用户访问网站时，会话Cookie被创建，当关闭浏览器的时候，它会被浏览器删除。   
2. 持久Cookie(Persistent Cookie): 这个类型的cookie长期在用户会话中生效。当你设置cookie的属性Max-Age为1个月的话，那么在这个月里每个相关URL的http请求中都会带有这个cookie。所以它可以记录很多用户初始化或自定义化的信息，比如什么时候第一次登录及弱登录态等。 
3. Secure cookie：安全cookie是在https访问下的cookie形态，以确保cookie在从客户端传递到Server的过程中始终加密的。
4. HttpOnly Cookie ：这个类型的cookie只能在http(https)请求上传递，对客户端脚本语言无效，从而有效避免了跨站攻击。 
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&quot;参考代码：&quot;&gt;&lt;a href=&quot;#参考代码：&quot; class=&quot;headerlink&quot; title=&quot;参考代码：&quot;&gt;&lt;/a&gt;参考代码：&lt;/h4&gt;&lt;p&gt;几点说明：  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在loginDB函数里面，包含验证码的处理，由于并不是每次登录都会要求输入验证码，所以我们要用if做一个判断。在有验证码的情况下，我们第一次登录根据验证码ip地址手动输入，后面将cookie保存到同一个session中的时候，就不用每一次都手动输入了。当然，豆瓣并不是傻瓜，当它知道我们用的是自动登录时，就会要求我们再次输入验证码。&lt;/li&gt;
&lt;li&gt;关于对验证码图片id和ip的提取用到的两个方式：&lt;br&gt;1）正则表达式 get id：&lt;br&gt; &lt;code&gt;re_captchaId=r&amp;#39;&amp;lt;input type=&amp;quot;hidden&amp;quot; name=&amp;quot;captcha-id&amp;quot; value=&amp;quot;(.*?)&amp;quot;.*?&amp;gt;&amp;#39;&lt;/code&gt;&lt;br&gt; &lt;code&gt;captchaId=re.findall(re_captchaId, my_page)&lt;/code&gt;&lt;br&gt;2)Beautiful Soap get ip：&lt;br&gt;&lt;code&gt;soup = bs(my_page,&amp;#39;html.parser&amp;#39;)&lt;/code&gt;&lt;br&gt;&lt;code&gt;captchaSrc = soup.find(&amp;#39;img&amp;#39;, id=&amp;#39;captcha_image&amp;#39;)[&amp;#39;src&amp;#39;]&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;loginDB&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       r = self.session.post(self.loginUrl, data=self.formdata, headers = self.session.headers)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       my_page = r.text&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;comment&quot;&gt;#test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;before&#39;&lt;/span&gt; + r.url&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       re_captchaId=&lt;span class=&quot;string&quot;&gt;r&#39;&amp;lt;input type=&quot;hidden&quot; name=&quot;captcha-id&quot; value=&quot;(.*?)&quot;.*?&amp;gt;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       captchaId=re.findall(re_captchaId, my_page)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; captchaId:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; captchaId[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           soup = bs(my_page,&lt;span class=&quot;string&quot;&gt;&#39;html.parser&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           captchaSrc = soup.find(&lt;span class=&quot;string&quot;&gt;&#39;img&#39;&lt;/span&gt;, id=&lt;span class=&quot;string&quot;&gt;&#39;captcha_image&#39;&lt;/span&gt;)[&lt;span class=&quot;string&quot;&gt;&#39;src&#39;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; captchaSrc:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;captchaSrc ip is :&#39;&lt;/span&gt;+captchaSrc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               captcha = raw_input(&lt;span class=&quot;string&quot;&gt;&#39;please input the captcha:&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               self.formdata[&lt;span class=&quot;string&quot;&gt;&#39;captcha-solution&#39;&lt;/span&gt;] = captcha  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               self.formdata[&lt;span class=&quot;string&quot;&gt;&#39;captcha-id&#39;&lt;/span&gt;] = captchaId&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;comment&quot;&gt;#将验证码信息更新后，重新请求登录。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       self.formdata[&lt;span class=&quot;string&quot;&gt;&quot;user_login&quot;&lt;/span&gt;] = &lt;span class=&quot;string&quot;&gt;&quot;登录&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       r = self.session.post(self.loginUrl, data=self.formdata, headers = self.session.headers) &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;#test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;after&#39;&lt;/span&gt; + r.url&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;#验证是否登录成功&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; r.url == &lt;span class=&quot;string&quot;&gt;&quot;https://movie.douban.com/top250?filter=unwatched&quot;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;Login successfully!!!&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           self.cookie_save()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;failed!&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       new_page = r.text&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;comment&quot;&gt;#return 登录成功后的页面内容&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; new_page&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;验证码实现：&quot;&gt;&lt;a href=&quot;#验证码实现：&quot; class=&quot;headerlink&quot; title=&quot;验证码实现：&quot;&gt;&lt;/a&gt;验证码实现：&lt;/h3&gt;&lt;p&gt;在登录函数loginDB()中已经实现了验证码，代码请参考以上  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;设计思想：第一次登录将验证码手动输入，之后保存为cookie，每次带着cookie登录。&lt;/li&gt;
&lt;li&gt;参考思想：实现过程中，也看了很多网上的其他方式，有一种是识别出来验证码上的字母的，这种方式是不是要用到图像处理方面的知识？如果可以实现，就一次都不用手动的输入验证码了。。。以后有时间可以try一下。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Uwatched网页爬取（带ck值）&quot;&gt;&lt;a href=&quot;#Uwatched网页爬取（带ck值）&quot; class=&quot;headerlink&quot; title=&quot;Uwatched网页爬取（带ck值）&quot;&gt;&lt;/a&gt;Uwatched网页爬取（带ck值）&lt;/h3&gt;&lt;h4 id=&quot;页面分析：&quot;&gt;&lt;a href=&quot;#页面分析：&quot; class=&quot;headerlink&quot; title=&quot;页面分析：&quot;&gt;&lt;/a&gt;页面分析：&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;url—&amp;gt;&lt;code&gt;http://movie.douban.com/top250?start=0&amp;amp;filter=unwatched&lt;/code&gt;&lt;br&gt;根据url的格式，我们要实现的就是两个参数&lt;code&gt;start&lt;/code&gt;和&lt;code&gt;filter&lt;/code&gt;，因为filter的值只有unwatched，我们可以将其固定，start的值是变动的。    &lt;/li&gt;
&lt;li&gt;这点是我卡壳最久的地方，开始我以为用第一个版本的方法，简单的跳转页面就够了，然后too naive了，如果只用第一个版本的方法，每次爬取的还是全部的TOP电影，也就是&lt;font color=&quot;green&quot;&gt;未登录状态下的数据&lt;/font&gt;，此时就想到了应该是要带着登录信息爬取的，于是乎，再一次审查了页面元素，发现登录后的页面request headers里面是&lt;font color=&quot;green&quot;&gt;都带有ck值的cookie，而未登录页面并没有固定的ck值。&lt;/font&gt;那么，就需要把第一次登录后保存在cookie文件中的ck值传入到request的请求数据中了。果不其然，传入ck值后，就成功了！&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&quot;参考代码：-1&quot;&gt;&lt;a href=&quot;#参考代码：-1&quot; class=&quot;headerlink&quot; title=&quot;参考代码：&quot;&gt;&lt;/a&gt;参考代码：&lt;/h4&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getUnwatchedMoviPage&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self,page_num)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;string&quot;&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       This function is to get my unwatchedMoviePage&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       @param page_num: get current page number.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       @param self.cur_url: get current url. &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       url = self.cur_url.format(page = (page_num - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)*&lt;span class=&quot;number&quot;&gt;25&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;#输出每次抓取的动态url&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;url is &#39;&lt;/span&gt;+url&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       post_data=&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 &lt;span class=&quot;string&quot;&gt;&#39;ck&#39;&lt;/span&gt;:self.ck&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       r = self.session.post(url, data = post_data)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;#将请求的有效页面my_page return&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       my_page = r.text&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; my_page&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;get_ck&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;string&quot;&gt;&#39;&#39;&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      This function is to get ck value.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &#39;&#39;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      cookies = self.session.cookies.get_dict()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      r = self.session.get(&lt;span class=&quot;string&quot;&gt;&#39;https://movie.douban.com/top250?filter=unwatched&#39;&lt;/span&gt;,)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; r.cookies.get_dict():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;cookies is end of date, login again&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          self.loginDB()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          self.get_ck()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; cookies.has_key(&lt;span class=&quot;string&quot;&gt;&#39;ck&#39;&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          self.ck = cookies[&lt;span class=&quot;string&quot;&gt;&#39;ck&#39;&lt;/span&gt;].strip(&lt;span class=&quot;string&quot;&gt;&#39;&quot;&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;ck:%s&quot;&lt;/span&gt; %self.ck&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;cannot get the ck.&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;cookie保存信息&quot;&gt;&lt;a href=&quot;#cookie保存信息&quot; class=&quot;headerlink&quot; title=&quot;cookie保存信息&quot;&gt;&lt;/a&gt;cookie保存信息&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://linsir.org/post/python-douban-robot&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;cookie的代码部分参考了Linsir的blog&lt;/a&gt;&lt;br&gt;在模拟登录部分已经介绍了cookie的种种信息，这里不多说，直接上代码：&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;cookie_load&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    This function is to use pickle to load cookies.txt from file to a cookie object.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    1)file --&amp;gt; dict pickle.load&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @keyword cookiejar_from_dict: dict ---&amp;gt; cookiejar&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @keyword pickle.load: file ---&amp;gt;dict  &amp;lt;===&amp;gt; pickle.dump: dict ---&amp;gt;file(pickle持久化对象)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;with&lt;/span&gt; open(self.cookie_file) &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; f:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;#格式转换，将dict形式转换为cookiejar&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;#pickle.load(f)将文件f还原为cookie对象 这里就不用文件读的方式了&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            self.session.cookies = requests.utils.cookiejar_from_dict(pickle.load(f))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;except&lt;/span&gt; Exception, e :&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;failed to load cookie from file&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;False&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;cookie_save&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;with&lt;/span&gt; open(self.cookie_file, &lt;span class=&quot;string&quot;&gt;&#39;w&#39;&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; f:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        pickle.dump(requests.utils.dict_from_cookiejar(self.session.cookies), f)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(&lt;span class=&quot;string&quot;&gt;&#39;save cookies to file...&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;Summary&quot;&gt;&lt;a href=&quot;#Summary&quot; class=&quot;headerlink&quot; title=&quot;Summary&quot;&gt;&lt;/a&gt;Summary&lt;/h2&gt;&lt;p&gt;至此，爬取unwatched电影名称的关键代码已经介绍完了。&lt;br&gt;呼，花了一天半的时间去写代码，花了半天的时间写这篇博客，私以为这篇博客还是纯干货的。&lt;br&gt;收获嘛，非常丰富：     &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;可以好好的看一下，到底还有哪些top250是我没有看过的，达到了博主使用的目的。  &lt;/li&gt;
&lt;li&gt;基础知识啊！！！算是明白了其中的一些原理性的东西，从浏览器发送一个url请求后，一步步是如何得到数据，以及其中数据传输的格式。  &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;当然，其中很多不完美：  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;并没有将影片的详细信息附上，之后会将评分和对应的影片链接给搞上去。  &lt;/li&gt;
&lt;li&gt;将全部的电影和没有看过的电影输出到同一个表格中，好将两者做一下对比，这一点还是比较容易实现的。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;ps：源代码我会抽空push到Github上，供大家参考并提出修改意见~&lt;/strong&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;实现了TOP250的爬取，就要真正的开始实现我的目的了：嘿嘿，那就是爬取unwatched的电影了！前后花了大概一天的时间，遇到的问题还是很有价值的，爬取成功的那一刻，还是蛮有成就感的，这次先上效果图，让我先小小的傲娇一秒钟，看到这篇文章的Python大神们，希望你们能留下宝贵的意见，帮助爬虫小白成长~&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;模拟登录&lt;/li&gt;
&lt;li&gt;验证码实现&lt;/li&gt;
&lt;li&gt;动态网页获取参数值&lt;/li&gt;
&lt;li&gt;cookie保存信息 &lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Python" scheme="http://yoursite.com/categories/Python/"/>
    
      <category term="Crawler爬虫" scheme="http://yoursite.com/categories/Python/Crawler%E7%88%AC%E8%99%AB/"/>
    
    
      <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
      <category term="Crawler" scheme="http://yoursite.com/tags/Crawler/"/>
    
  </entry>
  
  <entry>
    <title>Python爬虫初阶——爬取豆瓣Top250的电影</title>
    <link href="http://yoursite.com/2016/07/15/Python/Python%E7%88%AC%E8%99%AB1/"/>
    <id>http://yoursite.com/2016/07/15/Python/Python爬虫1/</id>
    <published>2016-07-15T11:59:59.000Z</published>
    <updated>2016-07-18T12:44:27.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;最近想要爬取一下自己没看过的豆瓣电影里的TOP250排名，于是乎，开始了各种爬虫的尝试，先是周五做出了第一个爬虫版本，可以爬取TOP250的电影榜单，由于不涉及模拟登录，代码还是较容易的实现了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;爬虫工具&quot;&gt;&lt;a href=&quot;#爬虫工具&quot; class=&quot;headerlink&quot; title=&quot;爬虫工具&quot;&gt;&lt;/a&gt;爬虫工具&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;re 正则表达式&lt;/li&gt;
&lt;li&gt;urllib2 做网页下载器&lt;/li&gt;
&lt;li&gt;pyExcelerator 做格式化输出第三方库&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;分析与实现&quot;&gt;&lt;a href=&quot;#分析与实现&quot; class=&quot;headerlink&quot; title=&quot;分析与实现&quot;&gt;&lt;/a&gt;分析与实现&lt;/h3&gt;&lt;h4 id=&quot;1-url分析：&quot;&gt;&lt;a href=&quot;#1-url分析：&quot; class=&quot;headerlink&quot; title=&quot;1.url分析：&quot;&gt;&lt;/a&gt;1.url分析：&lt;/h4&gt;&lt;p&gt;  url—&amp;gt;&lt;code&gt;http://movie.douban.com/top250?start=0&amp;amp;filter=&amp;amp;type=&lt;/code&gt;&lt;br&gt;  1）&lt;code&gt;start&lt;/code&gt;的值是关键，start=0显示第一页信息，start=25显示第二页信息…&lt;br&gt;  2）&lt;code&gt;filter&lt;/code&gt;的参数值，在下一个版本筛选unwatched的电影的时候会用到。  &lt;/p&gt;
&lt;h4 id=&quot;2-网页分析：&quot;&gt;&lt;a href=&quot;#2-网页分析：&quot; class=&quot;headerlink&quot; title=&quot;2.网页分析：&quot;&gt;&lt;/a&gt;2.网页分析：&lt;/h4&gt;&lt;p&gt;由于要提取的只有名字部分，所以暂时只对名字部分的html code进行分析&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;hd&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;https://movie.douban.com/subject/1292052/&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;title&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;肖申克的救赎&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;title&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;amp;nbsp;/&amp;amp;nbsp;The Shawshank Redemption&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;other&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;amp;nbsp;/&amp;amp;nbsp;月黑高飞(港)  /  刺激1995(台)&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;playable&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;[可播放]&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Python code:  &lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;find_title&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, my_page)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        This function is to get title from re&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        @param: my_page:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        @return: title_results &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        re_title = &lt;span class=&quot;string&quot;&gt;r&#39;&amp;lt;span class=&quot;title&quot;&amp;gt;(.*?)&amp;lt;/span&amp;gt;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        title = re.findall(re_title, my_page, re.S)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;#过滤掉英文的名字&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; e &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; title:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; e.find(&lt;span class=&quot;string&quot;&gt;&quot;&amp;amp;nbsp&quot;&lt;/span&gt;) == &lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                self.datas.append(&lt;span class=&quot;string&quot;&gt;&quot;Top&quot;&lt;/span&gt;+str(self._top_num)+&lt;span class=&quot;string&quot;&gt;&quot; &quot;&lt;/span&gt;+e)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                self._top_num += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;得到正则表达式&lt;code&gt;re_titile = r&amp;#39;&amp;lt;span class=&amp;quot;title&amp;quot;&amp;gt;(.*?)&amp;lt;/span&amp;gt;&amp;#39;&lt;/code&gt; &lt;code&gt;title = re.findall(re_title, my_page, re.S)&lt;/code&gt;&lt;br&gt;则由最基础的正则表达式就可以得到&lt;code&gt;title&lt;/code&gt;的值。  &lt;/p&gt;
&lt;h4 id=&quot;3-翻页实现&quot;&gt;&lt;a href=&quot;#3-翻页实现&quot; class=&quot;headerlink&quot; title=&quot;3.翻页实现&quot;&gt;&lt;/a&gt;3.翻页实现&lt;/h4&gt;&lt;p&gt;250部电影不可能在一页内实现，所以要翻页爬每一页的信息，此时控制&lt;code&gt;start&lt;/code&gt;的值就好了。&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;	 &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;get_page&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, cur_page)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	        &lt;span class=&quot;string&quot;&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	        This function is to get page content.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	        @param cur_page:当前的页码&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	        @return:  HTML&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	        &quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	        url = self.cur_url&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	        &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; :&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	            &lt;span class=&quot;comment&quot;&gt;#cur_page = 1 ：start=0   cur_page = 2:start = 25&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	            my_page = urllib2.urlopen(url.format(page=(cur_page&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;)*&lt;span class=&quot;number&quot;&gt;25&lt;/span&gt;)).read().decode(&lt;span class=&quot;string&quot;&gt;&quot;utf-8&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	        &lt;span class=&quot;keyword&quot;&gt;except&lt;/span&gt; urllib2.URLError, e:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; hasattr(e, &lt;span class=&quot;string&quot;&gt;&quot;code&quot;&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	                &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;The server couldn&#39;t fulfill the request.&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	                &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;Error code: %s&quot;&lt;/span&gt; % e.code&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	            &lt;span class=&quot;keyword&quot;&gt;elif&lt;/span&gt; hasattr(e, &lt;span class=&quot;string&quot;&gt;&quot;reason&quot;&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	                &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;We failed to reach a server. Please check your url and read the Reason&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	                &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;Reason: %s&quot;&lt;/span&gt; % e.reason&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; my_page&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;```   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;其中关键代码部分`my_page = urllib2.urlopen(url.format(page=(cur_page&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;)*&lt;span class=&quot;number&quot;&gt;25&lt;/span&gt;)).read().decode`，这行代码实现了翻页爬取的功能。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#### 4.格式化输出   &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;如果仅仅是打印出来，就没有太大的保存价值了，于是乎，我选择用excel表格来存储输出结果。这里用的是python的第三方库`pyExcelerator`。  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;```Python  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;format_output&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, datas)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	        This function is to transform datas from list to string and write to movie.xls.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	        @param datas:title名字的数据&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	        @return:  None&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	        w = Workbook()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	        ws = w.add_sheet(&lt;span class=&quot;string&quot;&gt;&#39;Top100 Movies&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i,item &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; enumerate(datas):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	            new_data = &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;.join(item).split(&lt;span class=&quot;string&quot;&gt;&quot; &quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	            ws.write(i,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,new_data[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	            ws.write(i,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,new_data[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	        w.save(&lt;span class=&quot;string&quot;&gt;&#39;movies.xls&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;5-控制器&quot;&gt;&lt;a href=&quot;#5-控制器&quot; class=&quot;headerlink&quot; title=&quot;5.控制器&quot;&gt;&lt;/a&gt;5.控制器&lt;/h4&gt;&lt;p&gt;写一个控制爬虫的函数，有助于更清晰的知晓爬虫的流程：&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;start_spider&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; self.page &amp;lt; &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           my_page = self.get_page(self.page)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           self.find_title(my_page)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           self.page += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;效果展示&quot;&gt;&lt;a href=&quot;#效果展示&quot; class=&quot;headerlink&quot; title=&quot;效果展示&quot;&gt;&lt;/a&gt;效果展示&lt;/h3&gt;&lt;div style=&quot;width:100%&quot;&gt;&lt;br&gt;&lt;img width=&quot;30%&quot; src=&quot;http://7xskaf.com1.z0.glb.clouddn.com/Capture.PNG&quot; style=&quot;float:left;&quot;&gt;&lt;br&gt;&lt;img width=&quot;30%&quot; src=&quot;http://7xskaf.com1.z0.glb.clouddn.com/Capture2.PNG&quot; style=&quot;float:left;&quot;&gt;&lt;br&gt;&lt;img width=&quot;30%&quot; src=&quot;http://7xskaf.com1.z0.glb.clouddn.com/3.PNG&quot; style=&quot;float:left;&quot;&gt;&lt;br&gt;&lt;div style=&quot;clear:both&quot;&gt;&lt;/div&gt;&lt;br&gt;&lt;/div&gt;



&lt;h3 id=&quot;Summary&quot;&gt;&lt;a href=&quot;#Summary&quot; class=&quot;headerlink&quot; title=&quot;Summary&quot;&gt;&lt;/a&gt;Summary&lt;/h3&gt;&lt;p&gt;网页解析器：爬虫的关键点，在于找到你要爬取的关键字在HTML哪里，而且要提取出来：    &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.csdn.net/eastmount/article/details/51082253&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;正则表达式提取（很好的总结）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://cuiqingcai.com/1319.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;第三方包beautiful soap（强推，基本上从安装到使用，非常详细的教程）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://cuiqingcai.com/2621.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;XPath+lxml，Chrome可以直接copy as xpath&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;网页下载器：  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;urllib，urllib2  &lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://cuiqingcai.com/2556.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;第三方库request&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;至此，简单的最基础的Python爬虫程序已经分析结束，其实接触入门了几天的爬虫，并不是很难，关键点在于准确的找到你要爬取的信息，这是重点也是难点，剩下的一些问题就是爬虫遇到的一些访问限制的问题。&lt;br&gt;当然这只是最基础的爬虫，之后持续学习：  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;动态网页的爬取&lt;/li&gt;
&lt;li&gt;scrapy工具的使用  &lt;/li&gt;
&lt;li&gt;多线程爬虫  &lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;最近想要爬取一下自己没看过的豆瓣电影里的TOP250排名，于是乎，开始了各种爬虫的尝试，先是周五做出了第一个爬虫版本，可以爬取TOP250的电影榜单，由于不涉及模拟登录，代码还是较容易的实现了。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Python" scheme="http://yoursite.com/categories/Python/"/>
    
      <category term="Crawler爬虫" scheme="http://yoursite.com/categories/Python/Crawler%E7%88%AC%E8%99%AB/"/>
    
    
      <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
      <category term="Crawler" scheme="http://yoursite.com/tags/Crawler/"/>
    
  </entry>
  
  <entry>
    <title>leetcode:373--Find K Pairs with Smallest Sums</title>
    <link href="http://yoursite.com/2016/07/11/leetcode/find-k-pairs-with-smallest-sums/"/>
    <id>http://yoursite.com/2016/07/11/leetcode/find-k-pairs-with-smallest-sums/</id>
    <published>2016-07-11T11:59:59.000Z</published>
    <updated>2016-07-11T14:03:15.000Z</updated>
    
    <content type="html">&lt;p&gt;题目描述：&lt;br&gt;Given nums1 = [1,1,2], nums2 = [1,2,3],  k = 2  &lt;/p&gt;
&lt;p&gt;Return: [1,1],[1,1]&lt;/p&gt;
&lt;p&gt;The first 2 pairs are returned from the sequence:&lt;br&gt;[1,1],[1,1],[1,2],[2,1],[1,2],[2,2],[1,3],[1,3],[2,3]&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;My-Solution：&quot;&gt;&lt;a href=&quot;#My-Solution：&quot; class=&quot;headerlink&quot; title=&quot;My Solution：&quot;&gt;&lt;/a&gt;My Solution：&lt;/h3&gt;&lt;h4 id=&quot;Mine-Way&quot;&gt;&lt;a href=&quot;#Mine-Way&quot; class=&quot;headerlink&quot; title=&quot;Mine Way:&quot;&gt;&lt;/a&gt;Mine Way:&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;算法思想：&lt;/strong&gt;    &lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1)将两个数组类型的nums1和nums2进行笛卡尔积，将和存储到一个字典中，字典的key是对应的index，value对应的是两个数的和，  
 然后对dict 的value的值进行排序，用`sorted(dict_name.items, key = lambda d:d[1])`d[1]是对value值的排序，  
 如果要对key值排序，就用d[0]。  
2)取前K个dict中的key值在对应的笛卡尔积list中找到对应的list
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;Python Code:&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;#-*-coding:utf-8 -*-&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#直接 V = [[None] * 2] * 3   这样初始化的二维数据是浅拷贝，如果给v[0][1]赋值 v[1][1]也会同样做修改。[[]]是一个含有一个空列表元素的列表,所以[[]]*3表示3个指向这            个空列表元素的引用,修改任何&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#一个元素都会改变整个列表。所以初始化的时候应该A = [[None] * 2 for x in range(3)]这样&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Solution&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(object)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;kSmallestPairs&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, nums1, nums2, k)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        n = len(nums1)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        m = len(nums2)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;#res = [[None] * 2 ]*3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;#初始化可以是list(),也可以是[]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        res = list()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;#print(res)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;  e1 &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; nums1:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; e2 &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; nums2:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                res.append([e1,e2])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;#print(res)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        res_sum_dict = dict()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        e_sum = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i,e &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; enumerate(res):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            e_sum = e[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] + e[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;#print(&#39;here % s&#39; % e_sum)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;#print(i)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            res_sum_dict[i] = e_sum&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;#print(res_sum_dict)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        newdict = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        newdict = sorted(res_sum_dict.items(), key = &lt;span class=&quot;keyword&quot;&gt;lambda&lt;/span&gt; d:d[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;#print(newdict)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        res_list = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(k):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            res_list.append(res[newdict[i][&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; res_list&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; __name__ == &lt;span class=&quot;string&quot;&gt;&quot;__main__&quot;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(Solution().kSmallestPairs([&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;], [&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;], &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;#[1,2],[1,4],[2,2],[2,4],[3,2],[3,4]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;Refer-Way&quot;&gt;&lt;a href=&quot;#Refer-Way&quot; class=&quot;headerlink&quot; title=&quot;Refer Way:&quot;&gt;&lt;/a&gt;Refer Way:&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;算法思想：&lt;/strong&gt;    &lt;/p&gt;
&lt;pre&gt;&lt;code&gt;记nums1的下标为i，nums2下标为j；数组长度为size1，size2；

首先将“守卫元素”（MaxInt, None, None）加入堆

令i = j = 0

将nums1[0] + nums2[j]与堆顶元素top进行比较：

若堆顶元素较大，则将(nums1[i] + nums2[j], i, j)加入堆，i取值[0, size1)；然后令j = j + 1

将堆顶元素弹出加入结果集  
循环直到结束
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;Python Code:&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Solution&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(object)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;kSmallestPairs&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, nums1, nums2, k)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        :type nums1: List[int]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        :type nums2: List[int]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        :type k: int&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        :rtype: List[List[int]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ans = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        heap = [(&lt;span class=&quot;number&quot;&gt;0x7FFFFFFF&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;None&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;None&lt;/span&gt;)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        size1, size2 = len(nums1), len(nums2)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        idx2 = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; len(ans) &amp;lt; min(k, size1 * size2):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; idx2 &amp;lt; size2:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                sum, i, j = heap[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; nums2[idx2] + nums1[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] &amp;lt; sum:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; idx1 &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(size1):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        heapq.heappush(heap, (nums1[idx1] + nums2[idx2], idx1, idx2))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    idx2 += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            sum, i, j = heapq.heappop(heap)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ans.append((nums1[i], nums2[j]))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; ans&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;My-Problem&quot;&gt;&lt;a href=&quot;#My-Problem&quot; class=&quot;headerlink&quot; title=&quot;My Problem:&quot;&gt;&lt;/a&gt;My Problem:&lt;/h3&gt;&lt;p&gt;我的代码出现了runtime error ， 不知道什么原因。。。。。。&lt;br&gt;在线等待解决&lt;/p&gt;
&lt;p&gt;refer的方法关于堆的一些问题，现在还是没有搞明白。。。。。。堆尼玛好复杂。。。。。。&lt;br&gt;大概的看了一下堆的一个基本的介绍：&lt;/p&gt;
&lt;h3 id=&quot;My-Answer&quot;&gt;&lt;a href=&quot;#My-Answer&quot; class=&quot;headerlink&quot; title=&quot;My Answer&quot;&gt;&lt;/a&gt;My Answer&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/vamei/archive/2013/03/20/2966612.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;堆的介绍&lt;/a&gt;&lt;br&gt;删除节点的时候，将last叶节点作为root加上去，然后从顶向下在一点点的往下比较（跟两个叶节点中小的那个比较）替换，保证堆的结构不能改变。&lt;br&gt;插入节点的时候，将节点插入到last的位置，然后从低向上一点点的与父节点比较，小的话就交换位置。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;题目描述：&lt;br&gt;Given nums1 = [1,1,2], nums2 = [1,2,3],  k = 2  &lt;/p&gt;
&lt;p&gt;Return: [1,1],[1,1]&lt;/p&gt;
&lt;p&gt;The first 2 pairs are returned from the sequence:&lt;br&gt;[1,1],[1,1],[1,2],[2,1],[1,2],[2,2],[1,3],[1,3],[2,3]&lt;/p&gt;
    
    </summary>
    
      <category term="Python" scheme="http://yoursite.com/categories/Python/"/>
    
      <category term="leetcode" scheme="http://yoursite.com/categories/Python/leetcode/"/>
    
      <category term="jobs" scheme="http://yoursite.com/categories/Python/leetcode/jobs/"/>
    
    
      <category term="jobs" scheme="http://yoursite.com/tags/jobs/"/>
    
      <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
      <category term="leetcode" scheme="http://yoursite.com/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>百度面试</title>
    <link href="http://yoursite.com/2016/07/08/interview/%E7%99%BE%E5%BA%A6%E5%9B%BE%E6%90%9C%E6%B5%8B%E5%BC%80%E9%9D%A2%E8%AF%95%E6%95%B4%E7%90%86/"/>
    <id>http://yoursite.com/2016/07/08/interview/百度图搜测开面试整理/</id>
    <published>2016-07-08T11:59:59.000Z</published>
    <updated>2016-07-20T14:43:09.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;百度科技园还真的蛮远的,自己路痴加上路上暴晒好不容易找到了地方,百度到底还是bat的第一个b,还是很nb的.&lt;br&gt;从三点到五点连续两面,一面感觉自己的表现还挺不错的,二面的时候有点懵逼了.但是整体来说,还是一次非常不错的面试体验.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;一面&quot;&gt;&lt;a href=&quot;#一面&quot; class=&quot;headerlink&quot; title=&quot;一面&quot;&gt;&lt;/a&gt;一面&lt;/h3&gt;&lt;h4 id=&quot;算法问题&quot;&gt;&lt;a href=&quot;#算法问题&quot; class=&quot;headerlink&quot; title=&quot;算法问题:&quot;&gt;&lt;/a&gt;算法问题:&lt;/h4&gt;&lt;p&gt;1)二叉树的深度:&lt;br&gt;思路:深度搜索&lt;br&gt;&lt;strong&gt;Python Code:&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#-*- coding:utf-8 -*-&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;leftDepth = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rightDepth = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;TreeNode&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, x)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.val = x &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.left = &lt;span class=&quot;keyword&quot;&gt;None&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.right = &lt;span class=&quot;keyword&quot;&gt;None&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getDeepth&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(root)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;global&lt;/span&gt; i &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;global&lt;/span&gt; leftDepth&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;global&lt;/span&gt; rightDepth&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        i += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;#test:print(&#39;here %s&#39; % i)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; root == &lt;span class=&quot;keyword&quot;&gt;None&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; root.left != &lt;span class=&quot;keyword&quot;&gt;None&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            leftDepth += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            getDeepth(root.left)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; root.right != &lt;span class=&quot;keyword&quot;&gt;None&lt;/span&gt;:    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            rightDepth += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            getDeepth(root.right) &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; __name__ == &lt;span class=&quot;string&quot;&gt;&quot;__main__&quot;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    root = TreeNode(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    root.left = TreeNode(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    root.right = TreeNode(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    root.left.left = TreeNode(&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    root.left.left.left=TreeNode(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    getDeepth(root)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;#test:print(leftDepth)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;#test:print(rightDepth)    &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; leftDepth &amp;gt; rightDepth:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print(leftDepth)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print(rightDepth)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;2)水仙花—很水的题目:&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#-*- coding:utf-8 -*-&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; math&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;NarNumJudge&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(num)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    num_low = num % &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    num_mid = int(num / &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;) % &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    num_high = int(num / &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;) % &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sum = math.pow(num_low, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;) + math.pow(num_mid, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;) + math.pow(num_high, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; sum == num:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;#加逗号禁止换行是不可以的,因为已经升级到python3啦~&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;#print(num,)   &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print(num,end=&lt;span class=&quot;string&quot;&gt;&quot; &quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; __name__ == &lt;span class=&quot;string&quot;&gt;&quot;__main__&quot;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        NarNumJudge(i)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;测试一支笔&quot;&gt;&lt;a href=&quot;#测试一支笔&quot; class=&quot;headerlink&quot; title=&quot;测试一支笔:&quot;&gt;&lt;/a&gt;测试一支笔:&lt;/h4&gt;&lt;p&gt;从功能性,完整性,安全性各方面一顿乱扯…考察的是开放性思维吧&lt;/p&gt;
&lt;h3 id=&quot;二面&quot;&gt;&lt;a href=&quot;#二面&quot; class=&quot;headerlink&quot; title=&quot;二面&quot;&gt;&lt;/a&gt;二面&lt;/h3&gt;&lt;h4 id=&quot;算法问题-1&quot;&gt;&lt;a href=&quot;#算法问题-1&quot; class=&quot;headerlink&quot; title=&quot;算法问题:&quot;&gt;&lt;/a&gt;算法问题:&lt;/h4&gt;&lt;p&gt;二叉排序树:&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#-*-coding:utf-8-*-&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;BinaryTree&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, data)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.right = &lt;span class=&quot;keyword&quot;&gt;None&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.left = &lt;span class=&quot;keyword&quot;&gt;None&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.val = data&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Solution&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(object)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;levelOrder&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, root)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        current = [root]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        res = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; root &lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;None&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; res&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; current:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            vals = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            next_level = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; node &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; current:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                vals.append(node.val)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; node.left:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    next_level.append(node.left)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; node.right:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    next_level.append(node.right)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            res.append(vals)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            current = next_level&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; res&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;GetBST&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, root)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; root.left == &lt;span class=&quot;keyword&quot;&gt;None&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;and&lt;/span&gt; root.right == &lt;span class=&quot;keyword&quot;&gt;None&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; root&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; root.left != &lt;span class=&quot;keyword&quot;&gt;None&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; root.left.val &amp;gt; root.val:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                tmp = root.val&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                root.val = root.left.val&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                root.left.val = tmp&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            self.GetBST(root.left)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; root.right != &lt;span class=&quot;keyword&quot;&gt;None&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; root.right.val &amp;lt; root.val:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                tmp1 = root.val&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                root.val = root.right.val&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                root.right.val = tmp1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            self.GetBST(root.right)        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; __name__ == &lt;span class=&quot;string&quot;&gt;&quot;__main__&quot;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    root = BinaryTree(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    root.left = BinaryTree(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    root.right = BinaryTree(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    root.left.left = BinaryTree(&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    root.left.right = BinaryTree(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(Solution().levelOrder(root))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Solution().GetBST(root)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(Solution().levelOrder(root))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;My-Problem&quot;&gt;&lt;a href=&quot;#My-Problem&quot; class=&quot;headerlink&quot; title=&quot;My Problem:&quot;&gt;&lt;/a&gt;My Problem:&lt;/h4&gt;&lt;p&gt;二叉排序的这个算法是有错误的….待纠正中……&lt;/p&gt;
&lt;h4 id=&quot;其他问题&quot;&gt;&lt;a href=&quot;#其他问题&quot; class=&quot;headerlink&quot; title=&quot;其他问题:&quot;&gt;&lt;/a&gt;其他问题:&lt;/h4&gt;&lt;p&gt;问了项目经验,主要针对简历上的一些问题吧~&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;百度科技园还真的蛮远的,自己路痴加上路上暴晒好不容易找到了地方,百度到底还是bat的第一个b,还是很nb的.&lt;br&gt;从三点到五点连续两面,一面感觉自己的表现还挺不错的,二面的时候有点懵逼了.但是整体来说,还是一次非常不错的面试体验.&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="面试" scheme="http://yoursite.com/categories/%E9%9D%A2%E8%AF%95/"/>
    
      <category term="测试开发" scheme="http://yoursite.com/categories/%E9%9D%A2%E8%AF%95/%E6%B5%8B%E8%AF%95%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="jobs" scheme="http://yoursite.com/tags/jobs/"/>
    
      <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>百度作业帮测试实习生面试</title>
    <link href="http://yoursite.com/2016/07/06/interview/QEinterview/"/>
    <id>http://yoursite.com/2016/07/06/interview/QEinterview/</id>
    <published>2016-07-05T21:59:59.000Z</published>
    <updated>2016-07-06T11:42:10.000Z</updated>
    
    <content type="html">&lt;h4 id=&quot;职位要求：&quot;&gt;&lt;a href=&quot;#职位要求：&quot; class=&quot;headerlink&quot; title=&quot;职位要求：&quot;&gt;&lt;/a&gt;职位要求：&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;计算机软件、通讯相关专业本科或以上。&lt;/li&gt;
&lt;li&gt;熟悉基本数据结构和算法设计，熟悉C/C++、Java、PHP,、shell、OC中至少一门编程语言。&lt;/li&gt;
&lt;li&gt;了解linux/Unix/windows操作系统原理、熟悉linux下的命令行操作。&lt;/li&gt;
&lt;li&gt;学习能力强，永远挑战新领域，拥抱变化。&lt;/li&gt;
&lt;li&gt;强烈的上进心和求知欲，具备良好的沟通能力和团队合作精神。&lt;/li&gt;
&lt;li&gt;符合以下条件之一优先考虑：&lt;br&gt;-开源社区活跃、项目经验丰富。&lt;br&gt;-之前在公司有过实习经验。&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&quot;面试体验&quot;&gt;&lt;a href=&quot;#面试体验&quot; class=&quot;headerlink&quot; title=&quot;面试体验&quot;&gt;&lt;/a&gt;面试体验&lt;/h4&gt;&lt;p&gt;这次面试还是比较好的一次体验,面试官姐姐非常nice,面试过程中渣渣我全程紧张,面试姐姐一直安慰我来着.不过后来还是没有达成一致的结果.&lt;br&gt;reason1:做的是界面测试,而我一直做的是服务器端测试&lt;br&gt;reason2:我表示我还是偏爱coding一些,但是该部门coding机会比较少&lt;br&gt;reason3:面试官姐姐给我的职业建议–要么搞研发,要么搞测试,不要混合的搞测试开发,纳尼?论坛的帖子上明明写的测试开发岗位嘛~&lt;/p&gt;
&lt;h4 id=&quot;面试题目&quot;&gt;&lt;a href=&quot;#面试题目&quot; class=&quot;headerlink&quot; title=&quot;面试题目&quot;&gt;&lt;/a&gt;面试题目&lt;/h4&gt;&lt;p&gt;1.快速排序:(Python实现)&lt;br&gt;基本思想:分治法,需要两个函数,其中一个实现找出pivot,另一个实现快排&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#-*- coding:utf-8 -*-&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;partition&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(num, low, high)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    pivot = num[low]&lt;span class=&quot;comment&quot;&gt;#初始化pivot为low指针的值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; low &amp;lt; high:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; low &amp;lt; high &lt;span class=&quot;keyword&quot;&gt;and&lt;/span&gt; num[high] &amp;gt;= pivot:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            high -= &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; low &amp;lt; high &lt;span class=&quot;keyword&quot;&gt;and&lt;/span&gt; num[high] &amp;lt;= pivot:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            num[low] = num[high]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            low += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            num[high] = num[low]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    num[low] = pivot&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; low&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;quicksort&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(num, low, high)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; low &amp;lt; high:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        key_index = partition(num, low, high) &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        quicksort(num, low, key_index)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        quicksort(num, key_index+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, high)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; __name__ == &lt;span class=&quot;string&quot;&gt;&quot;__main__&quot;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    num = [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    quicksort(num, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, len(num) - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(num)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;2.对登录界面进行测试&lt;br&gt;有用户名,密码,验证码,登录按钮等信息&lt;/p&gt;
&lt;p&gt;具体需求： 有一个登陆页面， （假如上面有2个textbox, 一个提交按钮。 请针对这个页面设计30个以上的test case.）  &lt;/p&gt;
&lt;p&gt;此题的考察目的： 面试者是否熟悉各种测试方法，是否有丰富的Web测试经验， 是否了解Web开发，以及设计Test case的能力  &lt;/p&gt;
&lt;p&gt;这个题目还是相当有难度的， 一般的人很难把这个题目回答好。  &lt;/p&gt;
&lt;p&gt;首先，你要了解用户的需求，比如这个登录界面应该是弹出窗口式的，还是直接在网页里面。对用户名的长度，和密码的强度（就是是不是必须多少位，大小写，特殊字符混搭）等。还有比如用户对界面的美观是不是有特殊的要求？（即是否要进行UI测试）。剩下的就是设计用例了 ，等价类，边界值等等。&lt;br&gt;请你记住一点，任何测试，不管测什么都是从了解需求开始的。  &lt;/p&gt;
&lt;p&gt;功能测试(Function test)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  0. 什么都不输入，点击提交按钮，看提示信息。

1.输入正确的用户名和密码，点击提交按钮，验证是否能正确登录。

2.输入错误的用户名或者密码, 验证登录会失败，并且提示相应的错误信息。

3.登录成功后能否能否跳转到正确的页面

4.用户名和密码，如果太短或者太长，应该怎么处理

5.用户名和密码，中有特殊字符（比如空格），和其他非英文的情况

6.记住用户名的功能

7.登陆失败后，不能记录密码的功能

8.用户名和密码前后有空格的处理

  9.密码是否加密显示（星号圆点等）

  10.牵扯到验证码的，还要考虑文字是否扭曲过度导致辨认难度大，考虑颜色（色盲使用者），刷新或换一个按钮是否好用

  11.登录页面中的注册、忘记密码，登出用另一帐号登陆等链接是否正确

  12.输入密码的时候，大写键盘开启的时候要有提示信息。
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;界面测试(UI Test)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1.布局是否合理，2个testbox 和一个按钮是否对齐

2.testbox和按钮的长度，高度是否复合要求

3. 界面的设计风格是否与UI的设计风格统一

4. 界面中的文字简洁易懂，没有错别字。
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;性能测试(performance test)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1.打开登录页面，需要几秒

2.输入正确的用户名和密码后，登录成功跳转到新页面，不超过5秒
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;安全性测试(Security test)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;　　1.登录成功后生成的Cookie，是否是httponly (否则容易被脚本盗取)

　　2.用户名和密码是否通过加密的方式，发送给Web服务器

　　3.用户名和密码的验证，应该是用服务器端验证， 而不能单单是在客户端用javascript验证

　　4.用户名和密码的输入框，应该屏蔽SQL 注入攻击

　　5.用户名和密码的的输入框，应该禁止输入脚本 （防止XSS攻击）

　　6.错误登陆的次数限制（防止暴力破解）

7. 考虑是否支持多用户在同一机器上登录；

8. 考虑一用户在多台机器上登录
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;可用性测试(Usability Test)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1. 是否可以全用键盘操作，是否有快捷键

2. 输入用户名，密码后按回车，是否可以登陆

3. 输入框能否可以以Tab键切换
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;兼容性测试（Compatibility Test）&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1.主流的浏览器下能否显示正常已经功能正常（IE,6,7,8,9, Firefox, Chrome, Safari,等）

2.不同的平台是否能正常工作，比如Windows, Mac

3.移动设备上是否正常工作，比如Iphone, Andriod

4.不同的分辨率
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;本地化测试 （Localization test）&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1. 不同语言环境下，页面的显示是否正确。
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;软件辅助性测试 （Accessibility test）&lt;/p&gt;
&lt;p&gt;　　软件辅助功能测试是指测试软件是否向残疾用户提供足够的辅助功能&lt;/p&gt;
&lt;p&gt;　　1. 高对比度下能否显示正常 （视力不好的人使用）&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;职位要求：&quot;&gt;&lt;a href=&quot;#职位要求：&quot; class=&quot;headerlink&quot; title=&quot;职位要求：&quot;&gt;&lt;/a&gt;职位要求：&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;计算机软件、通讯相关专业本科或以上。&lt;/li&gt;
&lt;li&gt;熟悉基本数据结构和算法设计，熟悉C/C++、Java、PHP,、shell、OC中至少一门编程语言。&lt;/li&gt;
&lt;li&gt;了解linux/Unix/windows操作系统原理、熟悉linux下的命令行操作。&lt;/li&gt;
&lt;li&gt;学习能力强，永远挑战新领域，拥抱变化。&lt;/li&gt;
&lt;li&gt;强烈的上进心和求知欲，具备良好的沟通能力和团队合作精神。&lt;/li&gt;
&lt;li&gt;符合以下条件之一优先考虑：&lt;br&gt;-开源社区活跃、项目经验丰富。&lt;br&gt;-之前在公司有过实习经验。
    
    </summary>
    
      <category term="面试" scheme="http://yoursite.com/categories/%E9%9D%A2%E8%AF%95/"/>
    
      <category term="测试开发" scheme="http://yoursite.com/categories/%E9%9D%A2%E8%AF%95/%E6%B5%8B%E8%AF%95%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="jobs" scheme="http://yoursite.com/tags/jobs/"/>
    
  </entry>
  
  <entry>
    <title>浅试Django-简单的个人博客搭建</title>
    <link href="http://yoursite.com/2016/07/04/Python/Django/"/>
    <id>http://yoursite.com/2016/07/04/Python/Django/</id>
    <published>2016-07-04T11:59:59.000Z</published>
    <updated>2016-07-04T14:51:02.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;Python已经学了有大半年的时间，之前面试阿里的时候，被问，为什么喜欢python，觉得python更好？当时就懵逼了，喜欢一个人还需要理由吗？显然在面试中喜欢一门语言需要理由，况且java作为我人生接触的第一门编程语言，还是有着迷之难以舍弃的感情，之后我会更新一些java面试的准备问题，最近还又入手了java编程思想，本科那本正版的丢了TnT…&lt;br&gt;怎么扯到爪哇身上啦？言归正传，先推一篇&lt;a href=&quot;http://www.36dsj.com/archives/36732&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;为什么选择python语言作为数据分析语言？&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;Django框架基础知识：&quot;&gt;&lt;a href=&quot;#Django框架基础知识：&quot; class=&quot;headerlink&quot; title=&quot;Django框架基础知识：&quot;&gt;&lt;/a&gt;Django框架基础知识：&lt;/h3&gt;&lt;p&gt;Django特点：  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;完全免费并开源源代码  &lt;/li&gt;
&lt;li&gt;快速高效开发  &lt;/li&gt;
&lt;li&gt;使用MTV架构(熟悉Web开发的应该会说是MVC架构)  &lt;/li&gt;
&lt;li&gt;强大的可扩展性.  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;类似于java开发中的MVC模式，Django的模式是：&lt;strong&gt;MTV&lt;/strong&gt;  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;M:model   &lt;/li&gt;
&lt;li&gt;T:template  &lt;/li&gt;
&lt;li&gt;V:view&lt;br&gt;用一张图来展示三者之间的关系：   &lt;/li&gt;
&lt;/ul&gt;
&lt;center&gt;&lt;img src=&quot;http://7xskaf.com1.z0.glb.clouddn.com/DjangoWork.png&quot; alt=&quot;MTV&quot;&gt;&lt;/center&gt;

&lt;p&gt;图示的过程就是：用户在浏览器中输入URL后回车，浏览器对URL进行检查，首先判断协议，如果是http就按照web来处理，然后调用&lt;strong&gt;DNS查询&lt;/strong&gt;，将域名转换为IP地址，然后经过网络传输到达对应web服务器，服务器对URL进行解析后，调用view中的逻辑，其中涉及到model，与数据库进行交互，将数据发送到template中进行渲染，然后发送到浏览器，呈现给用户。&lt;/p&gt;
&lt;h3 id=&quot;图解介绍目录结构&quot;&gt;&lt;a href=&quot;#图解介绍目录结构&quot; class=&quot;headerlink&quot; title=&quot;图解介绍目录结构&quot;&gt;&lt;/a&gt;图解介绍目录结构&lt;/h3&gt;&lt;p&gt;MTV结构&lt;br&gt;&lt;img src=&quot;http://7xskaf.com1.z0.glb.clouddn.com/main-list.PNG&quot; alt=&quot;main-list&quot;&gt; &lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;settings.py的配置：&lt;br&gt;&lt;img src=&quot;http://7xskaf.com1.z0.glb.clouddn.com/detail-list.PNG&quot; alt=&quot;detail-list&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;总结&quot;&gt;&lt;a href=&quot;#总结&quot; class=&quot;headerlink&quot; title=&quot;总结&quot;&gt;&lt;/a&gt;总结&lt;/h3&gt;&lt;p&gt;具体的代码就不想再贴在这里了，网络上有很多的教程，我自己也只是实现了很简单的一个博客的框架，简单的了解了一下Django做网站开发的套路，全都是套路。以后有时间的话，再进行进一步的完善吧。本来野心勃勃的想搭建一个个人博客，但是发现还得买域名，服务器，啊哈哈哈，服务器每个月的价格太贵了，还是暂时依托在github上吧。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;Python已经学了有大半年的时间，之前面试阿里的时候，被问，为什么喜欢python，觉得python更好？当时就懵逼了，喜欢一个人还需要理由吗？显然在面试中喜欢一门语言需要理由，况且java作为我人生接触的第一门编程语言，还是有着迷之难以舍弃的感情，之后我会更新一些java面试的准备问题，最近还又入手了java编程思想，本科那本正版的丢了TnT…&lt;br&gt;怎么扯到爪哇身上啦？言归正传，先推一篇&lt;a href=&quot;http://www.36dsj.com/archives/36732&quot;&gt;为什么选择python语言作为数据分析语言？&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Python" scheme="http://yoursite.com/categories/Python/"/>
    
      <category term="Django" scheme="http://yoursite.com/categories/Python/Django/"/>
    
    
      <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
      <category term="Django" scheme="http://yoursite.com/tags/Django/"/>
    
      <category term="web" scheme="http://yoursite.com/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>七月份计划</title>
    <link href="http://yoursite.com/2016/07/01/plan/7%E6%9C%88%E4%BB%BD%E8%AE%A1%E5%88%92/"/>
    <id>http://yoursite.com/2016/07/01/plan/7月份计划/</id>
    <published>2016-07-01T11:59:59.000Z</published>
    <updated>2016-07-18T12:53:14.000Z</updated>
    
    <content type="html">&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;blockquote&gt;
&lt;h4 id=&quot;学习计划&quot;&gt;&lt;a href=&quot;#学习计划&quot; class=&quot;headerlink&quot; title=&quot;学习计划&quot;&gt;&lt;/a&gt;学习计划&lt;/h4&gt;&lt;p&gt;1.leetcode上medium难度.&lt;br&gt;2.Java不能丢,通过面试宝典还有Think in Java进行知识的补充.&lt;br&gt;3.设计模式和基本的数据结构.&lt;br&gt;4.面试中会问到的计算机网络知识.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;阅读计划&quot;&gt;&lt;a href=&quot;#阅读计划&quot; class=&quot;headerlink&quot; title=&quot;阅读计划&quot;&gt;&lt;/a&gt;阅读计划&lt;/h4&gt;&lt;p&gt;1.Think in Java  &lt;/p&gt;
&lt;div class=&quot;process&quot; style=&quot;width:700px;height:20px;background:white;position:relative;border:1px solid black;&quot;&gt;&lt;div style=&quot;width:20px;height:20px;background:green;postion:absolute;top:0;left:0;z-index:1;&quot;&gt;&lt;span style=&quot;position:absolute;left:50%;top:0;z-index:2;color:black&quot;&gt;2%&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;br&gt;2.统计学基础&lt;br&gt;&lt;div class=&quot;process&quot; style=&quot;width:700px;height:20px;background:white;position:relative;border:1px solid black;&quot;&gt;&lt;div style=&quot;width:30px;height:20px;background:green;postion:absolute;top:0;left:0;z-index:1;&quot;&gt;&lt;span style=&quot;position:absolute;left:50%;top:0;z-index:2;color:black&quot;&gt;17.5%&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;br&gt;3.利用python进行数据挖掘&lt;br&gt;&lt;div class=&quot;process&quot; style=&quot;width:700px;height:20px;background:white;position:relative;border:1px solid black;&quot;&gt;&lt;div style=&quot;width:0px;height:20px;background:green;postion:absolute;top:0;left:0;z-index:1;&quot;&gt;&lt;span style=&quot;position:absolute;left:50%;top:0;z-index:2;color:black&quot;&gt;0.0%&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;



</content>
    
    <summary type="html">
    
      &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;blockquote&gt;
&lt;h4 id=&quot;学习计划&quot;&gt;&lt;a href=&quot;#学习计划&quot; class=&quot;headerlink&quot; title=&quot;学习计划&quot;&gt;&lt;/a&gt;学习计划&lt;/h4&gt;&lt;p&gt;1.leetcode上medium难度.&lt;br&gt;2.Java不
    
    </summary>
    
      <category term="计划" scheme="http://yoursite.com/categories/%E8%AE%A1%E5%88%92/"/>
    
    
      <category term="plan" scheme="http://yoursite.com/tags/plan/"/>
    
  </entry>
  
  <entry>
    <title>leetcode:343--Integer Break</title>
    <link href="http://yoursite.com/2016/06/22/leetcode/integer-break/"/>
    <id>http://yoursite.com/2016/06/22/leetcode/integer-break/</id>
    <published>2016-06-22T11:59:59.000Z</published>
    <updated>2016-06-22T15:30:18.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;题目描述：&lt;br&gt;给定给一个正整数n，将其分解成至少两个正整数的和，使这些整数的积最大化。返回可以得到的最大乘积。&lt;/p&gt;
&lt;p&gt;测试用例如题目描述。&lt;/p&gt;
&lt;p&gt;注意：你可以假设n不小于2.&lt;br&gt;提示：&lt;br&gt;   题目存在O(n)的解法。&lt;br&gt;   你可以通过演算n为7到10的整数来寻找规律。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;My-Solution：&quot;&gt;&lt;a href=&quot;#My-Solution：&quot; class=&quot;headerlink&quot; title=&quot;My Solution：&quot;&gt;&lt;/a&gt;My Solution：&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;算法思想：&lt;/strong&gt;  &lt;/p&gt;
&lt;h4 id=&quot;1-演算法得到规律：&quot;&gt;&lt;a href=&quot;#1-演算法得到规律：&quot; class=&quot;headerlink&quot; title=&quot;1.演算法得到规律：&quot;&gt;&lt;/a&gt;1.演算法得到规律：&lt;/h4&gt;&lt;pre&gt;&lt;code&gt;2  - 1 * 1
3  - 2 * 1
4  - 2 * 2
5  - 3 * 2
6  - 3 * 3
7  - 3 * 2 * 2
8  - 3 * 3 * 2
9  - 3 * 3 * 3
10 - 3 * 3 * 2 * 2
11 - 3 * 3 * 3 * 2
12 - 3 * 3 * 3 * 3
13 - 3 * 3 * 3 * 2 * 2
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;规律如下：  &lt;/p&gt;
&lt;pre&gt;&lt;code&gt;n / 3 &amp;lt;= 1 时，分为两个数的乘积，尽量均摊
n / 3 &amp;gt; 1 时，分为若干个3和2的乘积
n % 3 == 0 时，分为n个3的乘积
n % 3 == 1 时，分为n-1个3和两个2的乘积
n % 3 == 2 时，分为n个3和一个2的乘积
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;Python Code:&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Solution&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(object)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;integerBreak&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, n)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        :type n: int&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        :rtype: int&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        div = n / &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; div &amp;lt;= &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; (n / &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;) * (n / &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; + n % &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mod = n % &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; mod == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; ** div&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;elif&lt;/span&gt; mod == &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; ** (div - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) * &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;elif&lt;/span&gt; mod == &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; ** div * &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;动态规划求解：&quot;&gt;&lt;a href=&quot;#动态规划求解：&quot; class=&quot;headerlink&quot; title=&quot;动态规划求解：&quot;&gt;&lt;/a&gt;动态规划求解：&lt;/h4&gt;&lt;p&gt;状态转移方程：&lt;code&gt;dp[x] = max(3 * dp[x - 3], 2 * dp[x - 2])&lt;/code&gt;&lt;br&gt;&lt;strong&gt;Python Code:&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Solution&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(object)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;integerBreak&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, n)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        :type n: int&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        :rtype: int&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; n &amp;lt;= &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;: &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; n - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        dp = [&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] * (n + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        dp[&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;], dp[&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;] = &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; x &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;, n + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            dp[x] = max(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; * dp[x - &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;], &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; * dp[x - &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; dp[n]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;My-Problem&quot;&gt;&lt;a href=&quot;#My-Problem&quot; class=&quot;headerlink&quot; title=&quot;My Problem:&quot;&gt;&lt;/a&gt;My Problem:&lt;/h3&gt;&lt;p&gt;NO&lt;/p&gt;
&lt;h3 id=&quot;My-Answer&quot;&gt;&lt;a href=&quot;#My-Answer&quot; class=&quot;headerlink&quot; title=&quot;My Answer&quot;&gt;&lt;/a&gt;My Answer&lt;/h3&gt;&lt;p&gt;参考&lt;a href=&quot;&quot;&gt;动态规划&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;题目描述：&lt;br&gt;给定给一个正整数n，将其分解成至少两个正整数的和，使这些整数的积最大化。返回可以得到的最大乘积。&lt;/p&gt;
&lt;p&gt;测试用例如题目描述。&lt;/p&gt;
&lt;p&gt;注意：你可以假设n不小于2.&lt;br&gt;提示：&lt;br&gt;   题目存在O(n)的解法。&lt;br&gt;   你可以通过演算n为7到10的整数来寻找规律。&lt;br&gt;
    
    </summary>
    
      <category term="Python" scheme="http://yoursite.com/categories/Python/"/>
    
      <category term="leetcode" scheme="http://yoursite.com/categories/Python/leetcode/"/>
    
      <category term="动态规划" scheme="http://yoursite.com/categories/Python/leetcode/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
    
      <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
      <category term="leetcode" scheme="http://yoursite.com/tags/leetcode/"/>
    
      <category term="动态规划" scheme="http://yoursite.com/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
  </entry>
  
  <entry>
    <title>动态规划算法</title>
    <link href="http://yoursite.com/2016/06/22/Algorithm/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    <id>http://yoursite.com/2016/06/22/Algorithm/动态规划/</id>
    <published>2016-06-22T11:59:59.000Z</published>
    <updated>2016-06-29T09:29:42.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;最近一直在梳理自己的心情，确切的来说应该是感情，剪不断，理还乱，六月份要悄悄的溜走了，身边的人和事也发生了一些变化，时常在想，如果倒回到某个结点，我还会做一样的事情吗？may not （ps 跟分手没关系）&lt;/p&gt;
&lt;p&gt;越来越觉得有时候，是我把人想的太坏，不敢去相信，害怕被欺骗，其实哪里有那么复杂，人心再怎么险恶，也是肉长的，哎，长大的感觉真的是太不好了，越是想要追求快乐，越是难得到，渐渐明白，并不是所有的事情所有的人都会按照你想要的去发展，付出和收获往往也不能成正比。一直信以为仰的感情都是相互的，也渐渐的被现实证明为假命题，六月份七月份，赶紧过去吧，因为有一个傻逼已经老态龙钟了。&lt;/p&gt;
&lt;p&gt;本文内容参考自知乎：&lt;a href=&quot;https://www.zhihu.com/question/23995189/answer/35324479&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;动态规划&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;基本概念&quot;&gt;&lt;a href=&quot;#基本概念&quot; class=&quot;headerlink&quot; title=&quot;基本概念&quot;&gt;&lt;/a&gt;基本概念&lt;/h3&gt;&lt;p&gt;动态规划的过程：每次决策依赖于当前的状态，又随即引起状态的转移。一个决策序列就是在变化的状态中产生出来的。所以，多阶段的最优化决策解决问题的过程称为动态规划。  &lt;/p&gt;
&lt;p&gt;wiki的定义：&lt;strong&gt;dynamic programming&lt;/strong&gt; is a method for solving a complex problem by breaking it down into a collection of simpler subproblems.  &lt;/p&gt;
&lt;p&gt;动态规划的本质：对问题&lt;strong&gt;状态的定义&lt;/strong&gt;和&lt;strong&gt;状态转移方程的定义&lt;/strong&gt;。&lt;br&gt;通过拆分问题，定义问题状态和状态之间的关系，使得问题能够以递推（或者说分治）的方式去解决。&lt;/p&gt;
&lt;h3 id=&quot;适用情况&quot;&gt;&lt;a href=&quot;#适用情况&quot; class=&quot;headerlink&quot; title=&quot;适用情况&quot;&gt;&lt;/a&gt;适用情况&lt;/h3&gt;&lt;p&gt;能采用动态规划求解的问题的一般要具有3个性质：&lt;br&gt;(1) 最优化原理：如果问题的最优解所包含的子问题的解也是最优的，就称该问题具有最优子结构，即满足最优化原理。&lt;br&gt;(2) 无后效性：即某阶段状态一旦确定，就不受这个状态以后决策的影响。也就是说，某状态以后的过程不会影响以前的状态，只与当前状态有关。&lt;br&gt;(3) 有重叠子问题：即子问题之间是不独立的，一个子问题在下一阶段决策中可能被多次使用到。（该性质并不是动态规划适用的必要条件，但是如果没有这条性质，动态规划算法同其他算法相比就不具备优势）&lt;/p&gt;
&lt;h3 id=&quot;状态的定义&quot;&gt;&lt;a href=&quot;#状态的定义&quot; class=&quot;headerlink&quot; title=&quot;状态的定义&quot;&gt;&lt;/a&gt;状态的定义&lt;/h3&gt;&lt;p&gt;题目描述：  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;给定一个数列，长度为N，&lt;br&gt;求这个数列的最长上升（递增）子数列（LIS）的长度.&lt;br&gt;以&lt;br&gt;1 7 2 8 3 4&lt;br&gt;为例。&lt;br&gt;这个数列的最长递增子数列是 1 2 3 4，长度为4；&lt;br&gt;次长的长度为3， 包括 1 7 8; 1 2 3 等.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;要求解这个问题先要，定义这个问题。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;给定一个数列，长度为N，&lt;br&gt;设 F(k) 为：以数列中第k项结尾的最长递增子序列的长度.&lt;br&gt;求F(1)..F(N) 中的最大值.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;状态转移方程的定义&quot;&gt;&lt;a href=&quot;#状态转移方程的定义&quot; class=&quot;headerlink&quot; title=&quot;状态转移方程的定义&quot;&gt;&lt;/a&gt;状态转移方程的定义&lt;/h3&gt;&lt;p&gt;比如，对于LIS问题，我们的第一种定义：&lt;br&gt;设为：以数列中第k项结尾的最长递增子序列的长度.&lt;br&gt;设A为题中数列，状态转移方程为：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;F(1) = 1 （根据状态定义导出边界情况）&lt;br&gt;F(k)=max(F(1) + 1 | A(k)&amp;gt;A(i), i in (1..k-1)) (k&amp;gt;1)&lt;br&gt; （根据状态定义导出边界情况）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;用文字解释一下是：&lt;br&gt;以第k项结尾的LIS的长度是：保证第i项比第k项小的情况下，以第i项结尾的LIS长度加一的最大值，取遍i的所有值（i小于k）。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;最近一直在梳理自己的心情，确切的来说应该是感情，剪不断，理还乱，六月份要悄悄的溜走了，身边的人和事也发生了一些变化，时常在想，如果倒回到某个结点，我还会做一样的事情吗？may not （ps 跟分手没关系）&lt;/p&gt;
&lt;p&gt;越来越觉得有时候，是我把人想的太坏，不敢去相信，害怕被欺骗，其实哪里有那么复杂，人心再怎么险恶，也是肉长的，哎，长大的感觉真的是太不好了，越是想要追求快乐，越是难得到，渐渐明白，并不是所有的事情所有的人都会按照你想要的去发展，付出和收获往往也不能成正比。一直信以为仰的感情都是相互的，也渐渐的被现实证明为假命题，六月份七月份，赶紧过去吧，因为有一个傻逼已经老态龙钟了。&lt;/p&gt;
&lt;p&gt;本文内容参考自知乎：&lt;a href=&quot;https://www.zhihu.com/question/23995189/answer/35324479&quot;&gt;动态规划&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Algorithm" scheme="http://yoursite.com/categories/Algorithm/"/>
    
      <category term="动态规划" scheme="http://yoursite.com/categories/Algorithm/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
    
      <category term="algorithm" scheme="http://yoursite.com/tags/algorithm/"/>
    
      <category term="jobs" scheme="http://yoursite.com/tags/jobs/"/>
    
  </entry>
  
  <entry>
    <title>leetcode:347--Top K Frequent Elements</title>
    <link href="http://yoursite.com/2016/06/16/leetcode/top-k-frequent-elements/"/>
    <id>http://yoursite.com/2016/06/16/leetcode/top-k-frequent-elements/</id>
    <published>2016-06-16T11:59:59.000Z</published>
    <updated>2016-06-22T15:39:34.000Z</updated>
    
    <content type="html">&lt;p&gt;题目描述：&lt;br&gt;Given a non-empty array of integers, return the k most frequent elements.  &lt;/p&gt;
&lt;p&gt;For example,&lt;br&gt;Given [1,1,1,2,2,3] and k = 2, return [1,2].  &lt;/p&gt;
&lt;p&gt;Note:&lt;br&gt;You may assume k is always valid, 1 ≤ k ≤ number of unique elements.&lt;br&gt;Your algorithm’s time complexity must be better than O(n log n), where n is the array’s size.  &lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;My-Solution：&quot;&gt;&lt;a href=&quot;#My-Solution：&quot; class=&quot;headerlink&quot; title=&quot;My Solution：&quot;&gt;&lt;/a&gt;My Solution：&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;算法思想：&lt;/strong&gt;  &lt;/p&gt;
&lt;h4 id=&quot;My-way&quot;&gt;&lt;a href=&quot;#My-way&quot; class=&quot;headerlink&quot; title=&quot;My way:&quot;&gt;&lt;/a&gt;My way:&lt;/h4&gt;&lt;p&gt;我的想法就是：  O(n^2)&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;set过滤掉重复的元素，将不同的元素罗列出来作为dict的key值，而在nums中出现的次数作为value值，遍历nums，与key值比较，进行计数。&lt;/li&gt;
&lt;li&gt;将计数成功的countdict按照value值的大小进行排序，从大到小降序排序，参考了网上的一些value降序排序的方法：&lt;code&gt;sorted(countdict.items(), key=lambda d:d[1], reverse = True)&lt;/code&gt;得到的是一个countlist&lt;/li&gt;
&lt;li&gt;对countlist是一个二维数组，取前k个的第0个元素,即key值进行return。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;结果呢，就是严重的超时，因为双重循环的缘故吧~&lt;/p&gt;
&lt;h4 id=&quot;Reference&quot;&gt;&lt;a href=&quot;#Reference&quot; class=&quot;headerlink&quot; title=&quot;Reference&quot;&gt;&lt;/a&gt;Reference&lt;/h4&gt;&lt;p&gt;桶排序（Bucket Sort） 时间复杂度O(n)&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;遍历数组nums，利用字典cntDict统计各元素出现次数。&lt;/li&gt;
&lt;li&gt;遍历cntDict，利用嵌套列表freqList记录出现次数为i（ i∈[1, n] ）的所有元素&lt;/li&gt;
&lt;li&gt;逆序遍历freqList，将其中的前k个元素输出。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Python Code:&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#-*- coding:utf-8 -*-&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#又是超时的一个杰作 呵呵呵呵呵&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Solution&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(object)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;topKFrequent&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, nums, k)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;#sortednums = sorted(nums)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        nosamenums = set(nums)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;#countdict = dict() 这样使用会有UnboundLocalError: local variable &#39;dict&#39; referenced before assignment&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        countdict = &amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        res = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;#初始化countdict&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; e &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; nosamenums:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            countdict[e] = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#test:这个输出的是key的值        &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#       for k in countdict:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#           print(k)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;#test : print(countdict)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; key &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; countdict:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; nums:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; i == key:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    countdict[key] += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        countlist = sorted(countdict.items(), key=&lt;span class=&quot;keyword&quot;&gt;lambda&lt;/span&gt; d:d[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;], reverse = &lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;#test : print(countlist)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; n &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(k):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            res.append(countlist[n][&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; res&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; __name__ == &lt;span class=&quot;string&quot;&gt;&quot;__main__&quot;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;#nums = [1, 2, 3 , 1, 3, 1]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    nums = [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(Solution().topKFrequent(nums, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;参考代码：(思想看懂了，代码不是很懂)&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Solution&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(object)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;topKFrequent&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, nums, k)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        :type nums: List[int]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        :type k: int&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        :rtype: List[int]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        n = len(nums)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        cntDict = collections.defaultdict(int)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; nums:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            cntDict[i] += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        freqList = [[] &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(n + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; p &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; cntDict:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            freqList[cntDict[p]] += p,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ans = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; p &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(n, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ans += freqList[p]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; ans[:k]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;上述代码知识点：  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;表达式后边的&lt;code&gt;,&lt;/code&gt;表示会自动得到一个tuple对象。  &lt;/li&gt;
&lt;li&gt;ans[:k]表达的是list取前k个元素（python切片）&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h4 id=&quot;Another-way&quot;&gt;&lt;a href=&quot;#Another-way&quot; class=&quot;headerlink&quot; title=&quot;Another way:&quot;&gt;&lt;/a&gt;Another way:&lt;/h4&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Solution2&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(object)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;topKFrequent&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, nums, k)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [key &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; key, _ &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; collections.Counter(nums).most_common(k)]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;直接用python自带的collections函数&lt;/p&gt;
&lt;h3 id=&quot;My-Problem&quot;&gt;&lt;a href=&quot;#My-Problem&quot; class=&quot;headerlink&quot; title=&quot;My Problem:&quot;&gt;&lt;/a&gt;My Problem:&lt;/h3&gt;&lt;p&gt;看完了refer代码，也觉得看不懂，不知道哪里用到了桶排序，还是补充一下python中的切片吧&lt;/p&gt;
&lt;h3 id=&quot;My-Answer&quot;&gt;&lt;a href=&quot;#My-Answer&quot; class=&quot;headerlink&quot; title=&quot;My Answer&quot;&gt;&lt;/a&gt;My Answer&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000/001431756919644a792ee4ead724ef7afab3f7f771b04f5000&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;切片&lt;/a&gt;：&lt;br&gt;取list或者tuple或string的部分元素[n:m]&lt;br&gt;n省略就是前m个元素  &lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;题目描述：&lt;br&gt;Given a non-empty array of integers, return the k most frequent elements.  &lt;/p&gt;
&lt;p&gt;For example,&lt;br&gt;Given [1,1,1,2,2,3] and k = 2, return [1,2].  &lt;/p&gt;
&lt;p&gt;Note:&lt;br&gt;You may assume k is always valid, 1 ≤ k ≤ number of unique elements.&lt;br&gt;Your algorithm’s time complexity must be better than O(n log n), where n is the array’s size.  &lt;/p&gt;
    
    </summary>
    
      <category term="Python" scheme="http://yoursite.com/categories/Python/"/>
    
      <category term="leetcode" scheme="http://yoursite.com/categories/Python/leetcode/"/>
    
      <category term="dict" scheme="http://yoursite.com/categories/Python/leetcode/dict/"/>
    
    
      <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
      <category term="leetcode" scheme="http://yoursite.com/tags/leetcode/"/>
    
      <category term="dict，切片" scheme="http://yoursite.com/tags/dict%EF%BC%8C%E5%88%87%E7%89%87/"/>
    
  </entry>
  
  <entry>
    <title>leetcode:42--Trapping Rain Water</title>
    <link href="http://yoursite.com/2016/06/13/leetcode/trapping-rain-water/"/>
    <id>http://yoursite.com/2016/06/13/leetcode/trapping-rain-water/</id>
    <published>2016-06-13T11:59:59.000Z</published>
    <updated>2016-06-13T13:27:00.000Z</updated>
    
    <content type="html">&lt;p&gt;题目描述：&lt;br&gt;Given n non-negative integers representing an elevation map where the width of each bar is 1, compute how much water it is able to trap after raining.  &lt;/p&gt;
&lt;p&gt;For example,&lt;br&gt;Given [0,1,0,2,1,0,1,3,2,1,2,1], return 6.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xskaf.com1.z0.glb.clouddn.com/rainwatertrap.png&quot; alt=&quot;png&quot;&gt;&lt;/p&gt;
&lt;p&gt;题目的意思就是蓝色的地方是注水的，黑色的地方的高度就是Given A[0,1,0,2,1,0,1,3,2,1,2,1], 要求的就是根据给定的黑色部分，求出注水部分的体积。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;My-Solution：&quot;&gt;&lt;a href=&quot;#My-Solution：&quot; class=&quot;headerlink&quot; title=&quot;My Solution：&quot;&gt;&lt;/a&gt;My Solution：&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;算法思想：&lt;/strong&gt;&lt;br&gt;这道题被归到了贪心算法里面，思想就是，对于A[i]地方的注水，得到推导公式：&lt;br&gt;    &lt;code&gt;min(leftmostheight,rightmostheight) - A[i]&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Python Code:&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#-*- coding:utf-8 -*-&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#当前柱状的左边最高的和当前柱状右边最高的进行比较&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Solution&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(object)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;trap&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, height)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;#初始化leftmostheight为0，因为从左到右遍历，所以随着i移动，leftmostheight是值会变化的数组&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        leftmostheight = [&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(len(height))]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;#这个是左边最大的&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        leftmax = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(len(height)):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; height[i] &amp;gt; leftmax:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                leftmax = height[i]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            leftmostheight[i] = leftmax&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sum = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        rightmax = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;#从右向左遍历，随着i移动，rightmax不必再存储到rightmostheight里面，因为leftmostheight已经有了&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; reversed(range(len(height))):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; height[i] &amp;gt; rightmax:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                rightmax = height[i]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; min(rightmax, leftmostheight[i]) &amp;gt; height[i]:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                sum += min(rightmax, leftmostheight[i]) - height[i]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; sum&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; __name__ == &lt;span class=&quot;string&quot;&gt;&quot;__main__&quot;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    height = [&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(Solution().trap(height))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;My-Problem&quot;&gt;&lt;a href=&quot;#My-Problem&quot; class=&quot;headerlink&quot; title=&quot;My Problem:&quot;&gt;&lt;/a&gt;My Problem:&lt;/h3&gt;&lt;p&gt;NO&lt;/p&gt;
&lt;h3 id=&quot;My-Answer&quot;&gt;&lt;a href=&quot;#My-Answer&quot; class=&quot;headerlink&quot; title=&quot;My Answer&quot;&gt;&lt;/a&gt;My Answer&lt;/h3&gt;&lt;p&gt;NO&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;题目描述：&lt;br&gt;Given n non-negative integers representing an elevation map where the width of each bar is 1, compute how much water it is able to trap after raining.  &lt;/p&gt;
&lt;p&gt;For example,&lt;br&gt;Given [0,1,0,2,1,0,1,3,2,1,2,1], return 6.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xskaf.com1.z0.glb.clouddn.com/rainwatertrap.png&quot; alt=&quot;png&quot;&gt;&lt;/p&gt;
&lt;p&gt;题目的意思就是蓝色的地方是注水的，黑色的地方的高度就是Given A[0,1,0,2,1,0,1,3,2,1,2,1], 要求的就是根据给定的黑色部分，求出注水部分的体积。&lt;/p&gt;
    
    </summary>
    
      <category term="Python" scheme="http://yoursite.com/categories/Python/"/>
    
      <category term="leetcode" scheme="http://yoursite.com/categories/Python/leetcode/"/>
    
      <category term="Greedy" scheme="http://yoursite.com/categories/Python/leetcode/Greedy/"/>
    
    
      <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
      <category term="leetcode" scheme="http://yoursite.com/tags/leetcode/"/>
    
      <category term="Greedy" scheme="http://yoursite.com/tags/Greedy/"/>
    
  </entry>
  
  <entry>
    <title>leetcode:357--Count Numbers with Unique Digits</title>
    <link href="http://yoursite.com/2016/06/13/leetcode/count-numbers-with-unique-digits/"/>
    <id>http://yoursite.com/2016/06/13/leetcode/count-numbers-with-unique-digits/</id>
    <published>2016-06-13T11:59:59.000Z</published>
    <updated>2016-06-13T15:25:27.000Z</updated>
    
    <content type="html">&lt;p&gt;题目描述：&lt;br&gt;Given a non-negative integer n, count all numbers with unique digits, x, where 0 ≤ x &amp;lt; 10n.  &lt;/p&gt;
&lt;p&gt;Example:&lt;br&gt;Given n = 2, return 91. (The answer should be the total numbers in the range of 0 ≤ x &amp;lt; 100, excluding [11,22,33,44,55,66,77,88,99])  &lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;My-Solution：&quot;&gt;&lt;a href=&quot;#My-Solution：&quot; class=&quot;headerlink&quot; title=&quot;My Solution：&quot;&gt;&lt;/a&gt;My Solution：&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;算法思想：&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight erlang-repl&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;这个题目的主要算法思想就是,排列组合!!!!!!  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;这道题目的题意是:给定一个n,然后 &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&amp;lt;=N&amp;lt;&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;^n ,在N的取值范围内,找出unique的number,  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;比如,n = &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;时,N取值范围是[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;),那就要排除[&lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;22&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;33&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;44&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;55&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;66&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;77&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;88&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;99&lt;/span&gt;], return &lt;span class=&quot;number&quot;&gt;91&lt;/span&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;这就是一道排列组合的题目:  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;对于两位数,高位取值:(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;)---&amp;gt;&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;个选择 低位为了不与高位重复:(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;) - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;(高位选择)---&amp;gt;&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;个选择   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;对于三位数,高位取值:(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;)  中间位取值:(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;)-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;(高位选择)  低位取值:中间位取值 - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;(中间位选择)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;规律:&lt;code&gt;f(k) = 9 * 9 * 8 ...(9 - k + 2) sum = f(1) + f(2) + ... + f(k)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Python Code:&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Solution&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(object)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;countNumbersWithUniqueDigits&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, n)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; n == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        f = &lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        result = &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, n + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            f *= &lt;span class=&quot;number&quot;&gt;9&lt;/span&gt; - i + &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            result += f&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; result&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; __name__ == &lt;span class=&quot;string&quot;&gt;&quot;__main__&quot;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    n = &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(Solution().countNumbersWithUniqueDigits(n))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;My-Problem&quot;&gt;&lt;a href=&quot;#My-Problem&quot; class=&quot;headerlink&quot; title=&quot;My Problem:&quot;&gt;&lt;/a&gt;My Problem:&lt;/h3&gt;&lt;p&gt;我特么就是个傻逼!!!!什么事情都特么做不好!!!&lt;/p&gt;
&lt;h3 id=&quot;My-Answer&quot;&gt;&lt;a href=&quot;#My-Answer&quot; class=&quot;headerlink&quot; title=&quot;My Answer&quot;&gt;&lt;/a&gt;My Answer&lt;/h3&gt;&lt;p&gt;NO&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;题目描述：&lt;br&gt;Given a non-negative integer n, count all numbers with unique digits, x, where 0 ≤ x &amp;lt; 10n.  &lt;/p&gt;
&lt;p&gt;Example:&lt;br&gt;Given n = 2, return 91. (The answer should be the total numbers in the range of 0 ≤ x &amp;lt; 100, excluding [11,22,33,44,55,66,77,88,99])  &lt;/p&gt;
    
    </summary>
    
      <category term="Python" scheme="http://yoursite.com/categories/Python/"/>
    
      <category term="leetcode" scheme="http://yoursite.com/categories/Python/leetcode/"/>
    
      <category term="智力题" scheme="http://yoursite.com/categories/Python/leetcode/%E6%99%BA%E5%8A%9B%E9%A2%98/"/>
    
    
      <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
      <category term="leetcode" scheme="http://yoursite.com/tags/leetcode/"/>
    
      <category term="数学题" scheme="http://yoursite.com/tags/%E6%95%B0%E5%AD%A6%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>leetcode:11--Container With Most Water</title>
    <link href="http://yoursite.com/2016/06/06/leetcode/container-with-most-water/"/>
    <id>http://yoursite.com/2016/06/06/leetcode/container-with-most-water/</id>
    <published>2016-06-06T11:59:59.000Z</published>
    <updated>2016-06-13T13:35:06.000Z</updated>
    
    <content type="html">&lt;p&gt;题目描述：&lt;br&gt;Given n non-negative integers a1, a2, …, an, where each represents a point at coordinate (i, ai). n vertical lines are drawn such that the two endpoints of line i is at (i, ai) and (i, 0). Find two lines, which together with x-axis forms a container, such that the container contains the most water.  &lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;My-Solution：&quot;&gt;&lt;a href=&quot;#My-Solution：&quot; class=&quot;headerlink&quot; title=&quot;My Solution：&quot;&gt;&lt;/a&gt;My Solution：&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;算法思想：&lt;/strong&gt;&lt;br&gt;由小的一根（短板）决定高度。中间看过网上的解答，思路是O(n)的，略巧妙。其实就是基于这样一个直觉，先把L1设为最左，R1设为最右，这样宽度最大，然后缩小宽度，那么高度就要比原来高。缩小宽度的逻辑是，如果L1比R1小，那么L1往右移，否则反之。可以做简单证明。&lt;/p&gt;
&lt;p&gt;如图，L1&lt;r1&lt;r2&lt;l2，那么在l1移动到l2和r1移动到r2的过程中，存在的lx和rx都满足lx &lt;=&quot;&quot; l1，=&quot;&quot; rx=&quot;&quot; r1。假设lx=&quot;&quot; rx，那么lx*=&quot;&quot; d(rx=&quot;&quot; -=&quot;&quot; lx)=&quot;&quot; l1*d(rx-lx)=&quot;&quot; l1=&quot;&quot; *=&quot;&quot; (=&quot;&quot; r1=&quot;&quot; l1)。若lx=&quot;&quot;&gt; Rx，则Rx &lt;em&gt; d(Rx - Lx) &amp;lt; Rx &lt;/em&gt; d(R1 - L1) &amp;lt; L1 * d(R1 - L1) (因为Rx,Lx都小于L1&amp;lt;R1)。直观的想就是，如果宽度减少，同时左右两侧的板都比原来的还要矮，怎么可能容纳更多的水呢？  &lt;/r1&lt;r2&lt;l2，那么在l1移动到l2和r1移动到r2的过程中，存在的lx和rx都满足lx&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Python Code:&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#-*- coding:utf-8 -*-&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#题目要求：这道题是要求找出最大的容量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#先把L1设为最左，R1设为最右，这样宽度最大，然后缩小宽度，那么高度就要比原来高。缩小宽度的逻辑是，如果L1比R1小，那么L1往右移，否则反之&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Solution&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(object)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;maxArea&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, height)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;#初始化&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;#最左边l的坐标是0，&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        l = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;#最右边r的初始值是最右边坐标&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        r = len(height) - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;#print(&#39;r value: %s&#39; % r)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;#test:print(r)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;#res 来存放最后的结果&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        res = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;#tmp存放临时的结果&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        tmp = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; l &amp;lt; r:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;#r-l是宽度， min()里是左右最小的高度，因为容量取决于短板&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            tmp = min(height[l], height[r]) * (r - l)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;#res = max(res, min(height[r], height[l]) * (r - l))&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;#test:print(tmp)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;#如果tmp比较大的话，&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; tmp &amp;gt; res:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                res = tmp&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; height[l] &amp;lt; height[r]:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;#左边的小于右边的，容量取决于左边，于是从左边找有没有更大的高度&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                lastl = height[l]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; l &amp;lt; r &lt;span class=&quot;keyword&quot;&gt;and&lt;/span&gt; height[l] &amp;lt;= lastl:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    l += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;#右边的小于左边的，取决于右边,从右边找有没有更大的高度&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                lastr = height[r]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; l &amp;lt; r &lt;span class=&quot;keyword&quot;&gt;and&lt;/span&gt; height[r] &amp;lt;= lastr:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    r -= &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; res&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; __name__ == &lt;span class=&quot;string&quot;&gt;&#39;__main__&#39;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    height = [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(Solution().maxArea(height))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;简化代码：&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Solution&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;# @return an integer&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;maxArea&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, height)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        max_area, i, j = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, len(height) - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; i &amp;lt; j:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            max_area = max(max_area, min(height[i], height[j]) * (j - i))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; height[i] &amp;lt; height[j]:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                i += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                j -= &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; max_area&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; __name__ == &lt;span class=&quot;string&quot;&gt;&quot;__main__&quot;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    height = [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    result = Solution().maxArea(height)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; result&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;My-Problem&quot;&gt;&lt;a href=&quot;#My-Problem&quot; class=&quot;headerlink&quot; title=&quot;My Problem:&quot;&gt;&lt;/a&gt;My Problem:&lt;/h3&gt;&lt;p&gt;NO&lt;/p&gt;
&lt;h3 id=&quot;My-Answer&quot;&gt;&lt;a href=&quot;#My-Answer&quot; class=&quot;headerlink&quot; title=&quot;My Answer&quot;&gt;&lt;/a&gt;My Answer&lt;/h3&gt;&lt;p&gt;NO&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;题目描述：&lt;br&gt;Given n non-negative integers a1, a2, …, an, where each represents a point at coordinate (i, ai). n vertical lines are drawn such that the two endpoints of line i is at (i, ai) and (i, 0). Find two lines, which together with x-axis forms a container, such that the container contains the most water.  &lt;/p&gt;
    
    </summary>
    
      <category term="Python" scheme="http://yoursite.com/categories/Python/"/>
    
      <category term="leetcode" scheme="http://yoursite.com/categories/Python/leetcode/"/>
    
      <category term="Greedy" scheme="http://yoursite.com/categories/Python/leetcode/Greedy/"/>
    
    
      <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
      <category term="leetcode" scheme="http://yoursite.com/tags/leetcode/"/>
    
      <category term="Greedy" scheme="http://yoursite.com/tags/Greedy/"/>
    
      <category term="贪心" scheme="http://yoursite.com/tags/%E8%B4%AA%E5%BF%83/"/>
    
  </entry>
  
  <entry>
    <title>shell脚本进行文件读写操作(持续更新中...)</title>
    <link href="http://yoursite.com/2016/06/03/Shell/shell%20script/"/>
    <id>http://yoursite.com/2016/06/03/Shell/shell script/</id>
    <published>2016-06-03T11:59:59.000Z</published>
    <updated>2016-06-03T12:20:39.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;这是自己第一次写的可执行的shell脚本，不得不说，shell脚本是个好用的东西，在测试中，尤其是自动化测试中起着关键的作用，这段shell代码是上个月写的，也是测试IODM的时候，对于cfg文件的一个属性值得判断，虽然最后还是用Python代替了这一判断，但是我个人认为shell还是读取文件的一把好手！！！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;Problem&quot;&gt;&lt;a href=&quot;#Problem&quot; class=&quot;headerlink&quot; title=&quot;Problem&quot;&gt;&lt;/a&gt;Problem&lt;/h3&gt;&lt;p&gt;该脚本解决了从目标文件进行读写，修改指定值的问题。&lt;br&gt;基本上涉及了：shell脚本进行文件读写操作-&amp;gt;sed&lt;/p&gt;
&lt;h3 id=&quot;My-Solution：&quot;&gt;&lt;a href=&quot;#My-Solution：&quot; class=&quot;headerlink&quot; title=&quot;My Solution：&quot;&gt;&lt;/a&gt;My Solution：&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Shell Code:&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#!/bin/bash&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;isenableSSLv3=$(cat /etc/sfcb/sfcb.cfg | grep &lt;span class=&quot;string&quot;&gt;&quot;enableSSLv3&quot;&lt;/span&gt; | wc &lt;span class=&quot;_&quot;&gt;-l&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;lineNumber=$(cat /etc/sfcb/sfcb.cfg |wc &lt;span class=&quot;_&quot;&gt;-l&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;lineNumber is &lt;span class=&quot;variable&quot;&gt;$lineNumber&lt;/span&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;isenableSSLv3 is &lt;span class=&quot;variable&quot;&gt;$isenableSSLv3&lt;/span&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; [ &lt;span class=&quot;variable&quot;&gt;$isenableSSLv3&lt;/span&gt; &lt;span class=&quot;_&quot;&gt;-ne&lt;/span&gt; 0 ];&lt;span class=&quot;keyword&quot;&gt;then&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;enableSSLv3 has add&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;enableSSLv3 is not added,we should add it&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   sed &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$lineNumber&lt;/span&gt; aenableSSLv3:    true&quot;&lt;/span&gt; -i /etc/sfcb/sfcb.cfg&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;fi&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#check enabled and enableSSLv3 are true or not&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;enable&lt;/span&gt;SSLv3Value=$(cat /etc/sfcb/sfcb.cfg | grep &lt;span class=&quot;string&quot;&gt;&quot;enableSSLv3&quot;&lt;/span&gt; | awk &lt;span class=&quot;string&quot;&gt;&#39;&amp;#123;print $2&amp;#125;&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;enabledValue=$(cat /etc/sfcb/sfcb.cfg | grep &lt;span class=&quot;string&quot;&gt;&quot;enabled&quot;&lt;/span&gt; | awk &lt;span class=&quot;string&quot;&gt;&#39;&amp;#123;print $2&amp;#125;&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;enableSSLv3Value is &lt;span class=&quot;variable&quot;&gt;$enableSSLv3Value&lt;/span&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;enabledValue is &lt;span class=&quot;variable&quot;&gt;$enabledValue&lt;/span&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; [ &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$enabledValue&lt;/span&gt;&quot;&lt;/span&gt; == &lt;span class=&quot;string&quot;&gt;&quot;true&quot;&lt;/span&gt; ] &amp;amp;&amp;amp; [ &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$enableSSLv3Value&lt;/span&gt;&quot;&lt;/span&gt; == &lt;span class=&quot;string&quot;&gt;&quot;true&quot;&lt;/span&gt; ]; &lt;span class=&quot;keyword&quot;&gt;then&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;set value right&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;elif&lt;/span&gt; [ &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$enabledValue&lt;/span&gt;&quot;&lt;/span&gt; == &lt;span class=&quot;string&quot;&gt;&quot;false&quot;&lt;/span&gt; ]; &lt;span class=&quot;keyword&quot;&gt;then&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;enabled value is false,we change it to true&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sed -i &lt;span class=&quot;string&quot;&gt;&#39;s/enabled:        false/enabled:        true/g&#39;&lt;/span&gt; /etc/sfcb/sfcb.cfg&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;enableSSLv3 value is false,we change it to true&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sed -i &lt;span class=&quot;string&quot;&gt;&#39;s/enableSSLv3:    false/enableSSLv3:    true/g&#39;&lt;/span&gt; /etc/sfcb/sfcb.cfg&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;fi&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;sed&quot;&gt;&lt;a href=&quot;#sed&quot; class=&quot;headerlink&quot; title=&quot;sed&quot;&gt;&lt;/a&gt;sed&lt;/h3&gt;&lt;p&gt;sed是管道命令，是用shell进行文件读写的关键，待补充！！！&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;这是自己第一次写的可执行的shell脚本，不得不说，shell脚本是个好用的东西，在测试中，尤其是自动化测试中起着关键的作用，这段shell代码是上个月写的，也是测试IODM的时候，对于cfg文件的一个属性值得判断，虽然最后还是用Python代替了这一判断，但是我个人认为shell还是读取文件的一把好手！！！&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Shell" scheme="http://yoursite.com/categories/Shell/"/>
    
      <category term="Sed文件读写" scheme="http://yoursite.com/categories/Shell/Sed%E6%96%87%E4%BB%B6%E8%AF%BB%E5%86%99/"/>
    
    
      <category term="shell" scheme="http://yoursite.com/tags/shell/"/>
    
      <category term="if-else" scheme="http://yoursite.com/tags/if-else/"/>
    
  </entry>
  
</feed>
